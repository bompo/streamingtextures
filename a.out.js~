Module['preRun'] = function() {
    FS.createDataFile(
      '/',
      'input.jpg',
      Module['intArrayFromString'](Module['data']),
      true,
      true);
  };
Module['arguments'] = [''];
Module['return'] = '';
  Module['print'] = function(text) {
    Module['return'] += text + '\n';
  };


// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// TODO: " u s e   s t r i c t ";

try {
  this['Module'] = Module;
} catch(e) {
  this['Module'] = Module = {};
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function(filename) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename).toString();
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename).toString();
    }
    return ret;
  };

  Module['load'] = function(f) {
    globalEval(read(f));
  };

  if (!Module['arguments']) {
    Module['arguments'] = process['argv'].slice(2);
  }
} else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  Module['printErr'] = printErr;

  // Polyfill over SpiderMonkey/V8 differences
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function(f) { snarf(f) };
  }

  if (!Module['arguments']) {
    if (typeof scriptArgs != 'undefined') {
      Module['arguments'] = scriptArgs;
    } else if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
} else if (ENVIRONMENT_IS_WEB) {
  if (!Module['print']) {
    Module['print'] = function(x) {
      console.log(x);
    };
  }

  if (!Module['printErr']) {
    Module['printErr'] = function(x) {
      console.log(x);
    };
  }

  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (!Module['arguments']) {
    if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
} else if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...

  Module['load'] = importScripts;

} else {
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['printErr']) {
  Module['printErr'] = function(){};
}
if (!Module['print']) {
  Module['print'] = Module['printErr'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
if (!Module['preRun']) Module['preRun'] = [];
if (!Module['postRun']) Module['postRun'] = [];

  
// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (/^\[\d+\ x\ (.*)\]/.test(type)) return true; // [15 x ?] blocks. Like structs
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  bitshift64: function (low, high, op, bits) {
    var ander = Math.pow(2, bits)-1;
    if (bits < 32) {
      switch (op) {
        case 'shl':
          return [low << bits, (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits))];
        case 'ashr':
          return [(((low >>> bits ) | ((high&ander) << (32 - bits))) >> 0) >>> 0, (high >> bits) >>> 0];
        case 'lshr':
          return [((low >>> bits) | ((high&ander) << (32 - bits))) >>> 0, high >>> bits];
      }
    } else if (bits == 32) {
      switch (op) {
        case 'shl':
          return [0, low];
        case 'ashr':
          return [high, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high, 0];
      }
    } else { // bits > 32
      switch (op) {
        case 'shl':
          return [0, low << (bits - 32)];
        case 'ashr':
          return [(high >> (bits - 32)) >>> 0, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high >>>  (bits - 32) , 0];
      }
    }
    abort('unknown bitshift64 op: ' + [value, op, bits]);
  },
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type[type.length-1] == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = size;
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Types.types[field].alignSize;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      alignSize = type.packed ? 1 : Math.min(alignSize, Runtime.QUANTUM_SIZE);
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      assert(type.fields.length === struct.length, 'Number of named fields must match the type for ' + typeName);
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  addFunction: function (func) {
    var ret = FUNCTION_TABLE.length;
    FUNCTION_TABLE.push(func);
    FUNCTION_TABLE.push(0);
    return ret;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func) {
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        FUNCTION_TABLE[func].apply(null, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  stackAlloc: function stackAlloc(size) { var ret = STACKTOP;STACKTOP += size;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"); return ret; },
  staticAlloc: function staticAlloc(size) { var ret = STATICTOP;STATICTOP += size;STATICTOP = ((((STATICTOP)+3)>>2)<<2); if (STATICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function alignMemory(size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 4))*(quantum ? quantum : 4); return ret; },
  makeBigInt: function makeBigInt(low,high,unsigned) { var ret = (unsigned ? (((low)>>>0)+(((high)>>>0)*4294967296)) : (((low)>>>0)+(((high)|0)*4294967296))); return ret; },
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



var CorrectionsMonitor = {
  MAX_ALLOWED: 0, // XXX
  corrections: 0,
  sigs: {},

  note: function(type, succeed, sig) {
    if (!succeed) {
      this.corrections++;
      if (this.corrections >= this.MAX_ALLOWED) abort('\n\nToo many corrections!');
    }
  },

  print: function() {
  }
};





//========================================
// Runtime essentials
//========================================

var __THREW__ = false; // Used in checking for thrown exceptions.

var ABORT = false;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;

function abort(text) {
  Module.print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Adding
//
//         __attribute__((used))
//
//       to the function definition will prevent that.
//
// Note: Closure optimizations will minify function names, making
//       functions no longer callable. If you run closure (on by default
//       in -O2 and above), you should export the functions you will call
//       by calling emcc with something like
//
//         -s EXPORTED_FUNCTIONS='["_func1","_func2"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    } else if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  try {
    var func = eval('_' + ident);
  } catch(e) {
    try {
      func = globalScope['Module']['_' + ident]; // closure exported function
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
Module["ccall"] = ccall;

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  // TODO: optimize this, eval the whole function once instead of going through ccall each time
  return function() {
    return ccall(ident, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': HEAP32[((ptr)>>2)]=value; break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': (tempDoubleF64[0]=value,HEAP32[((ptr)>>2)]=tempDoubleI32[0],HEAP32[(((ptr)+(4))>>2)]=tempDoubleI32[1]); break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return (tempDoubleI32[0]=HEAP32[((ptr)>>2)],tempDoubleI32[1]=HEAP32[(((ptr)+(4))>>2)],tempDoubleF64[0]);
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

// Allocates memory for some data and initializes it properly.

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;

function allocate(slab, types, allocator) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));

  if (zeroinit) {
      _memset(ret, 0, size);
      return ret;
  }
  
  var i = 0, type;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);
    i += Runtime.getNativeTypeSize(type);
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  var nullTerminated = typeof(length) == "undefined";
  var ret = "";
  var i = 0;
  var t;
  var nullByte = String.fromCharCode(0);
  while (1) {
    t = String.fromCharCode(HEAPU8[((ptr)+(i))]);
    if (nullTerminated && t == nullByte) { break; } else {}
    ret += t;
    i += 1;
    if (!nullTerminated && i == length) { break; }
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function Array_stringify(array) {
  var ret = "";
  for (var i = 0; i < array.length; i++) {
    ret += String.fromCharCode(array[i]);
  }
  return ret;
}
Module['Array_stringify'] = Array_stringify;

// Memory management

var FUNCTION_TABLE; // XXX: In theory the indexes here can be equal to pointers to stacked or malloced memory. Such comparisons should
                    //      be false, but can turn out true. We should probably set the top bit to prevent such issues.

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return ((x+4095)>>12)<<12;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STACK_ROOT, STACKTOP, STACK_MAX;
var STATICTOP;
function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and STATICTOP is the new top.
  Module.printErr('Warning: Enlarging memory arrays, this is not fast! ' + [STATICTOP, TOTAL_MEMORY]);
  assert(STATICTOP >= TOTAL_MEMORY);
  assert(TOTAL_MEMORY > 4); // So the loop below will not be infinite
  while (TOTAL_MEMORY <= STATICTOP) { // Simple heuristic. Override enlargeMemory() if your program has something more optimal for it
    TOTAL_MEMORY = alignMemoryPage(2*TOTAL_MEMORY);
  }
  var oldHEAP8 = HEAP8;
  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);
  HEAPF64 = new Float64Array(buffer);
  HEAP8.set(oldHEAP8);
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 10485760;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
  assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
         'Cannot fallback to non-typed array case: Code is too specialized');

  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);
  HEAPF64 = new Float64Array(buffer);

  // Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 255;
  assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

var base = intArrayFromString('(null)'); // So printing %s of NULL gives '(null)'
                                         // Also this ensures we leave 0 as an invalid address, 'NULL'
STATICTOP = base.length;
for (var i = 0; i < base.length; i++) {
  HEAP8[(i)]=base[i]
}

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

STACK_ROOT = STACKTOP = Runtime.alignMemory(STATICTOP);
STACK_MAX = STACK_ROOT + TOTAL_STACK;

var tempDoublePtr = Runtime.alignMemory(STACK_MAX, 8);
var tempDoubleI8  = HEAP8.subarray(tempDoublePtr);
var tempDoubleI32 = HEAP32.subarray(tempDoublePtr >> 2);
var tempDoubleF32 = HEAPF32.subarray(tempDoublePtr >> 2);
var tempDoubleF64 = HEAPF64.subarray(tempDoublePtr >> 3);
function copyTempFloat(ptr) { // functions, because inlining this code is increases code size too much
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
  tempDoubleI8[4] = HEAP8[ptr+4];
  tempDoubleI8[5] = HEAP8[ptr+5];
  tempDoubleI8[6] = HEAP8[ptr+6];
  tempDoubleI8[7] = HEAP8[ptr+7];
}
STACK_MAX = tempDoublePtr + 8;

STATICTOP = alignMemoryPage(STACK_MAX);

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}

var __ATINIT__ = []; // functions called during startup
var __ATMAIN__ = []; // functions called when main() is to be run
var __ATEXIT__ = []; // functions called during shutdown

function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);

  // Print summary of correction activity
  CorrectionsMonitor.print();
}

function String_len(ptr) {
  var i = 0;
  while (HEAP8[((ptr)+(i))]) i++; // Note: should be |!= 0|, technically. But this helps catch bugs with undefineds
  return i;
}
Module['String_len'] = String_len;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = [];
  var t;
  var i = 0;
  if (length === undefined) {
    length = stringy.length;
  }
  while (i < length) {
    var chr = stringy.charCodeAt(i);
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + stringy[i] + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(chr);
    i = i + 1;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var i = 0;
  while (i < string.length) {
    var chr = string.charCodeAt(i);
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + string[i] + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    HEAP8[((buffer)+(i))]=chr
    i = i + 1;
  }
  if (!dontAddNull) {
    HEAP8[((buffer)+(i))]=0
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer)+(i))]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

var STRING_TABLE = [];

function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
  // TODO: clean up previous line
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
function addRunDependency() {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency() {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) run();
}
Module['removeRunDependency'] = removeRunDependency;

// === Body ===




function __ZN4jpgd3RowILi0EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$pTemp;
  $2=$pSrc;
  ;
  return;
}


function __ZN4jpgd3RowILi1EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $dcval;
  $1=$pTemp;
  $2=$pSrc;
  var $3=$2;
  var $4=(($3)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  var $7=$6 << 2;
  $dcval=$7;
  var $8=$dcval;
  var $9=$1;
  var $10=(($9)|0);
  HEAP32[(($10)>>2)]=$8;
  var $11=$dcval;
  var $12=$1;
  var $13=(($12+4)|0);
  HEAP32[(($13)>>2)]=$11;
  var $14=$dcval;
  var $15=$1;
  var $16=(($15+8)|0);
  HEAP32[(($16)>>2)]=$14;
  var $17=$dcval;
  var $18=$1;
  var $19=(($18+12)|0);
  HEAP32[(($19)>>2)]=$17;
  var $20=$dcval;
  var $21=$1;
  var $22=(($21+16)|0);
  HEAP32[(($22)>>2)]=$20;
  var $23=$dcval;
  var $24=$1;
  var $25=(($24+20)|0);
  HEAP32[(($25)>>2)]=$23;
  var $26=$dcval;
  var $27=$1;
  var $28=(($27+24)|0);
  HEAP32[(($28)>>2)]=$26;
  var $29=$dcval;
  var $30=$1;
  var $31=(($30+28)|0);
  HEAP32[(($31)>>2)]=$29;
  ;
  return;
}


function __ZN4jpgd3RowILi2EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $z2;
  var $z3;
  var $z1;
  var $tmp2;
  var $tmp3;
  var $tmp0;
  var $tmp1;
  var $tmp10;
  var $tmp13;
  var $tmp11;
  var $tmp12;
  var $atmp0;
  var $atmp1;
  var $atmp2;
  var $atmp3;
  var $bz1;
  var $bz2;
  var $bz3;
  var $bz4;
  var $bz5;
  var $az1;
  var $az2;
  var $az3;
  var $az4;
  var $btmp0;
  var $btmp1;
  var $btmp2;
  var $btmp3;
  $1=$pTemp;
  $2=$pSrc;
  $z2=0;
  $z3=0;
  $z1=0;
  $tmp2=0;
  $tmp3=0;
  var $3=$2;
  var $4=(($3)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  var $7=(($6)|0);
  var $8=$7 << 13;
  $tmp0=$8;
  var $9=$2;
  var $10=(($9)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=(($12)|0);
  var $14=$13 << 13;
  $tmp1=$14;
  var $15=$tmp0;
  var $16=(($15)|0);
  $tmp10=$16;
  var $17=$tmp0;
  var $18=(($17)|0);
  $tmp13=$18;
  var $19=$tmp1;
  var $20=(($19)|0);
  $tmp11=$20;
  var $21=$tmp1;
  var $22=(($21)|0);
  $tmp12=$22;
  $atmp0=0;
  $atmp1=0;
  $atmp2=0;
  var $23=$2;
  var $24=(($23+2)|0);
  var $25=HEAP16[(($24)>>1)];
  var $26=(($25 << 16) >> 16);
  $atmp3=$26;
  var $27=$atmp3;
  var $28=(($27)|0);
  $bz1=$28;
  $bz2=0;
  $bz3=0;
  var $29=$atmp3;
  var $30=(($29)|0);
  $bz4=$30;
  var $31=$bz4;
  var $32=(($31)|0);
  var $33=((($32)*(9633))|0);
  $bz5=$33;
  var $34=$bz1;
  var $35=((($34)*(-7373))|0);
  $az1=$35;
  $az2=0;
  var $36=$bz5;
  var $37=(($36)|0);
  $az3=$37;
  var $38=$bz4;
  var $39=((($38)*(-3196))|0);
  var $40=$bz5;
  var $41=((($39)+($40))|0);
  $az4=$41;
  var $42=$az1;
  var $43=(($42)|0);
  var $44=$az3;
  var $45=((($43)+($44))|0);
  $btmp0=$45;
  var $46=$az4;
  var $47=(($46)|0);
  $btmp1=$47;
  var $48=$az3;
  var $49=(($48)|0);
  $btmp2=$49;
  var $50=$atmp3;
  var $51=((($50)*(12299))|0);
  var $52=$az1;
  var $53=((($51)+($52))|0);
  var $54=$az4;
  var $55=((($53)+($54))|0);
  $btmp3=$55;
  var $56=$tmp10;
  var $57=$btmp3;
  var $58=((($56)+($57))|0);
  var $59=((($58)+(1024))|0);
  var $60=$59 >> 11;
  var $61=$1;
  var $62=(($61)|0);
  HEAP32[(($62)>>2)]=$60;
  var $63=$tmp10;
  var $64=$btmp3;
  var $65=((($63)-($64))|0);
  var $66=((($65)+(1024))|0);
  var $67=$66 >> 11;
  var $68=$1;
  var $69=(($68+28)|0);
  HEAP32[(($69)>>2)]=$67;
  var $70=$tmp11;
  var $71=$btmp2;
  var $72=((($70)+($71))|0);
  var $73=((($72)+(1024))|0);
  var $74=$73 >> 11;
  var $75=$1;
  var $76=(($75+4)|0);
  HEAP32[(($76)>>2)]=$74;
  var $77=$tmp11;
  var $78=$btmp2;
  var $79=((($77)-($78))|0);
  var $80=((($79)+(1024))|0);
  var $81=$80 >> 11;
  var $82=$1;
  var $83=(($82+24)|0);
  HEAP32[(($83)>>2)]=$81;
  var $84=$tmp12;
  var $85=$btmp1;
  var $86=((($84)+($85))|0);
  var $87=((($86)+(1024))|0);
  var $88=$87 >> 11;
  var $89=$1;
  var $90=(($89+8)|0);
  HEAP32[(($90)>>2)]=$88;
  var $91=$tmp12;
  var $92=$btmp1;
  var $93=((($91)-($92))|0);
  var $94=((($93)+(1024))|0);
  var $95=$94 >> 11;
  var $96=$1;
  var $97=(($96+20)|0);
  HEAP32[(($97)>>2)]=$95;
  var $98=$tmp13;
  var $99=$btmp0;
  var $100=((($98)+($99))|0);
  var $101=((($100)+(1024))|0);
  var $102=$101 >> 11;
  var $103=$1;
  var $104=(($103+12)|0);
  HEAP32[(($104)>>2)]=$102;
  var $105=$tmp13;
  var $106=$btmp0;
  var $107=((($105)-($106))|0);
  var $108=((($107)+(1024))|0);
  var $109=$108 >> 11;
  var $110=$1;
  var $111=(($110+16)|0);
  HEAP32[(($111)>>2)]=$109;
  ;
  return;
}
__ZN4jpgd3RowILi2EE4idctEPiPKs["X"]=1;

function __ZN4jpgd3RowILi3EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $z2;
  var $z3;
  var $z1;
  var $tmp2;
  var $tmp3;
  var $tmp0;
  var $tmp1;
  var $tmp10;
  var $tmp13;
  var $tmp11;
  var $tmp12;
  var $atmp0;
  var $atmp1;
  var $atmp2;
  var $atmp3;
  var $bz1;
  var $bz2;
  var $bz3;
  var $bz4;
  var $bz5;
  var $az1;
  var $az2;
  var $az3;
  var $az4;
  var $btmp0;
  var $btmp1;
  var $btmp2;
  var $btmp3;
  $1=$pTemp;
  $2=$pSrc;
  var $3=$2;
  var $4=(($3+4)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  $z2=$6;
  $z3=0;
  var $7=$z2;
  var $8=(($7)|0);
  var $9=((($8)*(4433))|0);
  $z1=$9;
  var $10=$z1;
  var $11=(($10)|0);
  $tmp2=$11;
  var $12=$z1;
  var $13=$z2;
  var $14=((($13)*(6270))|0);
  var $15=((($12)+($14))|0);
  $tmp3=$15;
  var $16=$2;
  var $17=(($16)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  var $20=(($19)|0);
  var $21=$20 << 13;
  $tmp0=$21;
  var $22=$2;
  var $23=(($22)|0);
  var $24=HEAP16[(($23)>>1)];
  var $25=(($24 << 16) >> 16);
  var $26=(($25)|0);
  var $27=$26 << 13;
  $tmp1=$27;
  var $28=$tmp0;
  var $29=$tmp3;
  var $30=((($28)+($29))|0);
  $tmp10=$30;
  var $31=$tmp0;
  var $32=$tmp3;
  var $33=((($31)-($32))|0);
  $tmp13=$33;
  var $34=$tmp1;
  var $35=$tmp2;
  var $36=((($34)+($35))|0);
  $tmp11=$36;
  var $37=$tmp1;
  var $38=$tmp2;
  var $39=((($37)-($38))|0);
  $tmp12=$39;
  $atmp0=0;
  $atmp1=0;
  $atmp2=0;
  var $40=$2;
  var $41=(($40+2)|0);
  var $42=HEAP16[(($41)>>1)];
  var $43=(($42 << 16) >> 16);
  $atmp3=$43;
  var $44=$atmp3;
  var $45=(($44)|0);
  $bz1=$45;
  $bz2=0;
  $bz3=0;
  var $46=$atmp3;
  var $47=(($46)|0);
  $bz4=$47;
  var $48=$bz4;
  var $49=(($48)|0);
  var $50=((($49)*(9633))|0);
  $bz5=$50;
  var $51=$bz1;
  var $52=((($51)*(-7373))|0);
  $az1=$52;
  $az2=0;
  var $53=$bz5;
  var $54=(($53)|0);
  $az3=$54;
  var $55=$bz4;
  var $56=((($55)*(-3196))|0);
  var $57=$bz5;
  var $58=((($56)+($57))|0);
  $az4=$58;
  var $59=$az1;
  var $60=(($59)|0);
  var $61=$az3;
  var $62=((($60)+($61))|0);
  $btmp0=$62;
  var $63=$az4;
  var $64=(($63)|0);
  $btmp1=$64;
  var $65=$az3;
  var $66=(($65)|0);
  $btmp2=$66;
  var $67=$atmp3;
  var $68=((($67)*(12299))|0);
  var $69=$az1;
  var $70=((($68)+($69))|0);
  var $71=$az4;
  var $72=((($70)+($71))|0);
  $btmp3=$72;
  var $73=$tmp10;
  var $74=$btmp3;
  var $75=((($73)+($74))|0);
  var $76=((($75)+(1024))|0);
  var $77=$76 >> 11;
  var $78=$1;
  var $79=(($78)|0);
  HEAP32[(($79)>>2)]=$77;
  var $80=$tmp10;
  var $81=$btmp3;
  var $82=((($80)-($81))|0);
  var $83=((($82)+(1024))|0);
  var $84=$83 >> 11;
  var $85=$1;
  var $86=(($85+28)|0);
  HEAP32[(($86)>>2)]=$84;
  var $87=$tmp11;
  var $88=$btmp2;
  var $89=((($87)+($88))|0);
  var $90=((($89)+(1024))|0);
  var $91=$90 >> 11;
  var $92=$1;
  var $93=(($92+4)|0);
  HEAP32[(($93)>>2)]=$91;
  var $94=$tmp11;
  var $95=$btmp2;
  var $96=((($94)-($95))|0);
  var $97=((($96)+(1024))|0);
  var $98=$97 >> 11;
  var $99=$1;
  var $100=(($99+24)|0);
  HEAP32[(($100)>>2)]=$98;
  var $101=$tmp12;
  var $102=$btmp1;
  var $103=((($101)+($102))|0);
  var $104=((($103)+(1024))|0);
  var $105=$104 >> 11;
  var $106=$1;
  var $107=(($106+8)|0);
  HEAP32[(($107)>>2)]=$105;
  var $108=$tmp12;
  var $109=$btmp1;
  var $110=((($108)-($109))|0);
  var $111=((($110)+(1024))|0);
  var $112=$111 >> 11;
  var $113=$1;
  var $114=(($113+20)|0);
  HEAP32[(($114)>>2)]=$112;
  var $115=$tmp13;
  var $116=$btmp0;
  var $117=((($115)+($116))|0);
  var $118=((($117)+(1024))|0);
  var $119=$118 >> 11;
  var $120=$1;
  var $121=(($120+12)|0);
  HEAP32[(($121)>>2)]=$119;
  var $122=$tmp13;
  var $123=$btmp0;
  var $124=((($122)-($123))|0);
  var $125=((($124)+(1024))|0);
  var $126=$125 >> 11;
  var $127=$1;
  var $128=(($127+16)|0);
  HEAP32[(($128)>>2)]=$126;
  ;
  return;
}
__ZN4jpgd3RowILi3EE4idctEPiPKs["X"]=1;

function __ZN4jpgd3RowILi4EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $z2;
  var $z3;
  var $z1;
  var $tmp2;
  var $tmp3;
  var $tmp0;
  var $tmp1;
  var $tmp10;
  var $tmp13;
  var $tmp11;
  var $tmp12;
  var $atmp0;
  var $atmp1;
  var $atmp2;
  var $atmp3;
  var $bz1;
  var $bz2;
  var $bz3;
  var $bz4;
  var $bz5;
  var $az1;
  var $az2;
  var $az3;
  var $az4;
  var $btmp0;
  var $btmp1;
  var $btmp2;
  var $btmp3;
  $1=$pTemp;
  $2=$pSrc;
  var $3=$2;
  var $4=(($3+4)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  $z2=$6;
  $z3=0;
  var $7=$z2;
  var $8=(($7)|0);
  var $9=((($8)*(4433))|0);
  $z1=$9;
  var $10=$z1;
  var $11=(($10)|0);
  $tmp2=$11;
  var $12=$z1;
  var $13=$z2;
  var $14=((($13)*(6270))|0);
  var $15=((($12)+($14))|0);
  $tmp3=$15;
  var $16=$2;
  var $17=(($16)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  var $20=(($19)|0);
  var $21=$20 << 13;
  $tmp0=$21;
  var $22=$2;
  var $23=(($22)|0);
  var $24=HEAP16[(($23)>>1)];
  var $25=(($24 << 16) >> 16);
  var $26=(($25)|0);
  var $27=$26 << 13;
  $tmp1=$27;
  var $28=$tmp0;
  var $29=$tmp3;
  var $30=((($28)+($29))|0);
  $tmp10=$30;
  var $31=$tmp0;
  var $32=$tmp3;
  var $33=((($31)-($32))|0);
  $tmp13=$33;
  var $34=$tmp1;
  var $35=$tmp2;
  var $36=((($34)+($35))|0);
  $tmp11=$36;
  var $37=$tmp1;
  var $38=$tmp2;
  var $39=((($37)-($38))|0);
  $tmp12=$39;
  $atmp0=0;
  $atmp1=0;
  var $40=$2;
  var $41=(($40+6)|0);
  var $42=HEAP16[(($41)>>1)];
  var $43=(($42 << 16) >> 16);
  $atmp2=$43;
  var $44=$2;
  var $45=(($44+2)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  $atmp3=$47;
  var $48=$atmp3;
  var $49=(($48)|0);
  $bz1=$49;
  var $50=$atmp2;
  var $51=(($50)|0);
  $bz2=$51;
  var $52=$atmp2;
  var $53=(($52)|0);
  $bz3=$53;
  var $54=$atmp3;
  var $55=(($54)|0);
  $bz4=$55;
  var $56=$bz3;
  var $57=$bz4;
  var $58=((($56)+($57))|0);
  var $59=((($58)*(9633))|0);
  $bz5=$59;
  var $60=$bz1;
  var $61=((($60)*(-7373))|0);
  $az1=$61;
  var $62=$bz2;
  var $63=((($62)*(-20995))|0);
  $az2=$63;
  var $64=$bz3;
  var $65=((($64)*(-16069))|0);
  var $66=$bz5;
  var $67=((($65)+($66))|0);
  $az3=$67;
  var $68=$bz4;
  var $69=((($68)*(-3196))|0);
  var $70=$bz5;
  var $71=((($69)+($70))|0);
  $az4=$71;
  var $72=$az1;
  var $73=(($72)|0);
  var $74=$az3;
  var $75=((($73)+($74))|0);
  $btmp0=$75;
  var $76=$az2;
  var $77=(($76)|0);
  var $78=$az4;
  var $79=((($77)+($78))|0);
  $btmp1=$79;
  var $80=$atmp2;
  var $81=((($80)*(25172))|0);
  var $82=$az2;
  var $83=((($81)+($82))|0);
  var $84=$az3;
  var $85=((($83)+($84))|0);
  $btmp2=$85;
  var $86=$atmp3;
  var $87=((($86)*(12299))|0);
  var $88=$az1;
  var $89=((($87)+($88))|0);
  var $90=$az4;
  var $91=((($89)+($90))|0);
  $btmp3=$91;
  var $92=$tmp10;
  var $93=$btmp3;
  var $94=((($92)+($93))|0);
  var $95=((($94)+(1024))|0);
  var $96=$95 >> 11;
  var $97=$1;
  var $98=(($97)|0);
  HEAP32[(($98)>>2)]=$96;
  var $99=$tmp10;
  var $100=$btmp3;
  var $101=((($99)-($100))|0);
  var $102=((($101)+(1024))|0);
  var $103=$102 >> 11;
  var $104=$1;
  var $105=(($104+28)|0);
  HEAP32[(($105)>>2)]=$103;
  var $106=$tmp11;
  var $107=$btmp2;
  var $108=((($106)+($107))|0);
  var $109=((($108)+(1024))|0);
  var $110=$109 >> 11;
  var $111=$1;
  var $112=(($111+4)|0);
  HEAP32[(($112)>>2)]=$110;
  var $113=$tmp11;
  var $114=$btmp2;
  var $115=((($113)-($114))|0);
  var $116=((($115)+(1024))|0);
  var $117=$116 >> 11;
  var $118=$1;
  var $119=(($118+24)|0);
  HEAP32[(($119)>>2)]=$117;
  var $120=$tmp12;
  var $121=$btmp1;
  var $122=((($120)+($121))|0);
  var $123=((($122)+(1024))|0);
  var $124=$123 >> 11;
  var $125=$1;
  var $126=(($125+8)|0);
  HEAP32[(($126)>>2)]=$124;
  var $127=$tmp12;
  var $128=$btmp1;
  var $129=((($127)-($128))|0);
  var $130=((($129)+(1024))|0);
  var $131=$130 >> 11;
  var $132=$1;
  var $133=(($132+20)|0);
  HEAP32[(($133)>>2)]=$131;
  var $134=$tmp13;
  var $135=$btmp0;
  var $136=((($134)+($135))|0);
  var $137=((($136)+(1024))|0);
  var $138=$137 >> 11;
  var $139=$1;
  var $140=(($139+12)|0);
  HEAP32[(($140)>>2)]=$138;
  var $141=$tmp13;
  var $142=$btmp0;
  var $143=((($141)-($142))|0);
  var $144=((($143)+(1024))|0);
  var $145=$144 >> 11;
  var $146=$1;
  var $147=(($146+16)|0);
  HEAP32[(($147)>>2)]=$145;
  ;
  return;
}
__ZN4jpgd3RowILi4EE4idctEPiPKs["X"]=1;

function _main() {
  var __stackBase__  = STACKTOP; STACKTOP += 12; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $width=__stackBase__;
      var $height=(__stackBase__)+(4);
      var $actual_comps=(__stackBase__)+(8);
      var $pImage_data;
      var $ch;
      $1=0;
      var $2=__ZN4jpgd31decompress_jpeg_image_from_fileEPKcPiS2_S2_i(((STRING_TABLE.__str5)|0), $width, $height, $actual_comps, 3);
      $pImage_data=$2;
      __label__ = 3; break;
    case 3: 
      var $4=$pImage_data;
      var $5=HEAPU8[($4)];
      var $6=(($5)&255);
      var $7=(($6)|0)!=0;
      if ($7) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      var $9=$pImage_data;
      var $10=HEAP8[($9)];
      $ch=$10;
      var $11=$ch;
      var $12=(($11)&255);
      var $13=_printf(((STRING_TABLE.__str6)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$12,tempInt));
      var $14=$pImage_data;
      var $15=(($14+1)|0);
      $pImage_data=$15;
      __label__ = 3; break;
    case 5: 
      STACKTOP = __stackBase__;
      return 0;
    default: assert(0, "bad label: " + __label__);
  }
}
Module["_main"] = _main;

function __ZN4jpgd4idctEPKsPhi($pSrc_ptr, $pDst_ptr, $block_max_zag) {
  var __stackBase__  = STACKTOP; STACKTOP += 256; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $k;
      var $i;
      var $temp=__stackBase__;
      var $pSrc;
      var $pTemp;
      var $pRow_tab;
      var $i1;
      var $nonzero_rows;
      $1=$pSrc_ptr;
      $2=$pDst_ptr;
      $3=$block_max_zag;
      var $4=$3;
      var $5=(($4)|0) >= 1;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __label__ = 5; break;
    case 4: 
      ___assert_func(((STRING_TABLE.__str114)|0), 246, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd4idctEPKsPhi)|0), ((STRING_TABLE.__str1115)|0));
      __label__ = 5; break;
    case 5: 
      var $9=$3;
      var $10=(($9)|0) <= 64;
      if ($10) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      __label__ = 8; break;
    case 7: 
      ___assert_func(((STRING_TABLE.__str114)|0), 247, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd4idctEPKsPhi)|0), ((STRING_TABLE.__str2116)|0));
      __label__ = 8; break;
    case 8: 
      var $14=$3;
      var $15=(($14)|0) <= 1;
      if ($15) { __label__ = 9; break; } else { __label__ = 17; break; }
    case 9: 
      var $17=$1;
      var $18=(($17)|0);
      var $19=HEAP16[(($18)>>1)];
      var $20=(($19 << 16) >> 16);
      var $21=((($20)+(4))|0);
      var $22=$21 >> 3;
      var $23=((($22)+(128))|0);
      $k=$23;
      var $24=$k;
      var $25=(($24)>>>0) > 255;
      if ($25) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $27=$k;
      var $28=$27 ^ -1;
      var $29=$28 >> 31;
      var $30=$29 & 255;
      var $34 = $30;__label__ = 12; break;
    case 11: 
      var $32=$k;
      var $34 = $32;__label__ = 12; break;
    case 12: 
      var $34;
      $k=$34;
      var $35=$k;
      var $36=$k;
      var $37=$36 << 8;
      var $38=$35 | $37;
      $k=$38;
      var $39=$k;
      var $40=$k;
      var $41=$40 << 16;
      var $42=$39 | $41;
      $k=$42;
      $i=8;
      __label__ = 13; break;
    case 13: 
      var $44=$i;
      var $45=(($44)|0) > 0;
      if ($45) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: 
      var $47=$k;
      var $48=$2;
      var $49=(($48)|0);
      var $50=$49;
      HEAP32[(($50)>>2)]=$47;
      var $51=$k;
      var $52=$2;
      var $53=(($52+4)|0);
      var $54=$53;
      HEAP32[(($54)>>2)]=$51;
      var $55=$2;
      var $56=(($55+8)|0);
      $2=$56;
      __label__ = 15; break;
    case 15: 
      var $58=$i;
      var $59=((($58)-(1))|0);
      $i=$59;
      __label__ = 13; break;
    case 16: 
      __label__ = 44; break;
    case 17: 
      var $62=$1;
      $pSrc=$62;
      var $63=(($temp)|0);
      $pTemp=$63;
      var $64=$3;
      var $65=((($64)-(1))|0);
      var $66=((($65<<3))|0);
      var $67=((STRING_TABLE.__ZN4jpgdL16s_idct_row_tableE+$66)|0);
      $pRow_tab=$67;
      $i1=8;
      __label__ = 18; break;
    case 18: 
      var $69=$i1;
      var $70=(($69)|0) > 0;
      if ($70) { __label__ = 19; break; } else { __label__ = 31; break; }
    case 19: 
      var $72=$pRow_tab;
      var $73=HEAPU8[($72)];
      var $74=(($73)&255);
      if ((($74)|0) == 0) {
        __label__ = 20; break;
      }
      else if ((($74)|0) == 1) {
        __label__ = 21; break;
      }
      else if ((($74)|0) == 2) {
        __label__ = 22; break;
      }
      else if ((($74)|0) == 3) {
        __label__ = 23; break;
      }
      else if ((($74)|0) == 4) {
        __label__ = 24; break;
      }
      else if ((($74)|0) == 5) {
        __label__ = 25; break;
      }
      else if ((($74)|0) == 6) {
        __label__ = 26; break;
      }
      else if ((($74)|0) == 7) {
        __label__ = 27; break;
      }
      else if ((($74)|0) == 8) {
        __label__ = 28; break;
      }
      else {
      __label__ = 29; break;
      }
      
    case 20: 
      var $76=$pTemp;
      var $77=$pSrc;
      __ZN4jpgd3RowILi0EE4idctEPiPKs($76, $77);
      __label__ = 29; break;
    case 21: 
      var $79=$pTemp;
      var $80=$pSrc;
      __ZN4jpgd3RowILi1EE4idctEPiPKs($79, $80);
      __label__ = 29; break;
    case 22: 
      var $82=$pTemp;
      var $83=$pSrc;
      __ZN4jpgd3RowILi2EE4idctEPiPKs($82, $83);
      __label__ = 29; break;
    case 23: 
      var $85=$pTemp;
      var $86=$pSrc;
      __ZN4jpgd3RowILi3EE4idctEPiPKs($85, $86);
      __label__ = 29; break;
    case 24: 
      var $88=$pTemp;
      var $89=$pSrc;
      __ZN4jpgd3RowILi4EE4idctEPiPKs($88, $89);
      __label__ = 29; break;
    case 25: 
      var $91=$pTemp;
      var $92=$pSrc;
      __ZN4jpgd3RowILi5EE4idctEPiPKs($91, $92);
      __label__ = 29; break;
    case 26: 
      var $94=$pTemp;
      var $95=$pSrc;
      __ZN4jpgd3RowILi6EE4idctEPiPKs($94, $95);
      __label__ = 29; break;
    case 27: 
      var $97=$pTemp;
      var $98=$pSrc;
      __ZN4jpgd3RowILi7EE4idctEPiPKs($97, $98);
      __label__ = 29; break;
    case 28: 
      var $100=$pTemp;
      var $101=$pSrc;
      __ZN4jpgd3RowILi8EE4idctEPiPKs($100, $101);
      __label__ = 29; break;
    case 29: 
      var $103=$pSrc;
      var $104=(($103+16)|0);
      $pSrc=$104;
      var $105=$pTemp;
      var $106=(($105+32)|0);
      $pTemp=$106;
      __label__ = 30; break;
    case 30: 
      var $108=$i1;
      var $109=((($108)-(1))|0);
      $i1=$109;
      var $110=$pRow_tab;
      var $111=(($110+1)|0);
      $pRow_tab=$111;
      __label__ = 18; break;
    case 31: 
      var $113=(($temp)|0);
      $pTemp=$113;
      var $114=$3;
      var $115=((($114)-(1))|0);
      var $116=((STRING_TABLE.__ZN4jpgdL16s_idct_col_tableE+$115)|0);
      var $117=HEAPU8[($116)];
      var $118=(($117)&255);
      $nonzero_rows=$118;
      $i1=8;
      __label__ = 32; break;
    case 32: 
      var $120=$i1;
      var $121=(($120)|0) > 0;
      if ($121) { __label__ = 33; break; } else { __label__ = 44; break; }
    case 33: 
      var $123=$nonzero_rows;
      if ((($123)|0) == 1) {
        __label__ = 34; break;
      }
      else if ((($123)|0) == 2) {
        __label__ = 35; break;
      }
      else if ((($123)|0) == 3) {
        __label__ = 36; break;
      }
      else if ((($123)|0) == 4) {
        __label__ = 37; break;
      }
      else if ((($123)|0) == 5) {
        __label__ = 38; break;
      }
      else if ((($123)|0) == 6) {
        __label__ = 39; break;
      }
      else if ((($123)|0) == 7) {
        __label__ = 40; break;
      }
      else if ((($123)|0) == 8) {
        __label__ = 41; break;
      }
      else {
      __label__ = 42; break;
      }
      
    case 34: 
      var $125=$2;
      var $126=$pTemp;
      __ZN4jpgd3ColILi1EE4idctEPhPKi($125, $126);
      __label__ = 42; break;
    case 35: 
      var $128=$2;
      var $129=$pTemp;
      __ZN4jpgd3ColILi2EE4idctEPhPKi($128, $129);
      __label__ = 42; break;
    case 36: 
      var $131=$2;
      var $132=$pTemp;
      __ZN4jpgd3ColILi3EE4idctEPhPKi($131, $132);
      __label__ = 42; break;
    case 37: 
      var $134=$2;
      var $135=$pTemp;
      __ZN4jpgd3ColILi4EE4idctEPhPKi($134, $135);
      __label__ = 42; break;
    case 38: 
      var $137=$2;
      var $138=$pTemp;
      __ZN4jpgd3ColILi5EE4idctEPhPKi($137, $138);
      __label__ = 42; break;
    case 39: 
      var $140=$2;
      var $141=$pTemp;
      __ZN4jpgd3ColILi6EE4idctEPhPKi($140, $141);
      __label__ = 42; break;
    case 40: 
      var $143=$2;
      var $144=$pTemp;
      __ZN4jpgd3ColILi7EE4idctEPhPKi($143, $144);
      __label__ = 42; break;
    case 41: 
      var $146=$2;
      var $147=$pTemp;
      __ZN4jpgd3ColILi8EE4idctEPhPKi($146, $147);
      __label__ = 42; break;
    case 42: 
      var $149=$pTemp;
      var $150=(($149+4)|0);
      $pTemp=$150;
      var $151=$2;
      var $152=(($151+1)|0);
      $2=$152;
      __label__ = 43; break;
    case 43: 
      var $154=$i1;
      var $155=((($154)-(1))|0);
      $i1=$155;
      __label__ = 32; break;
    case 44: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd4idctEPKsPhi["X"]=1;

function __ZN4jpgd3RowILi5EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $z2;
  var $z3;
  var $z1;
  var $tmp2;
  var $tmp3;
  var $tmp0;
  var $tmp1;
  var $tmp10;
  var $tmp13;
  var $tmp11;
  var $tmp12;
  var $atmp0;
  var $atmp1;
  var $atmp2;
  var $atmp3;
  var $bz1;
  var $bz2;
  var $bz3;
  var $bz4;
  var $bz5;
  var $az1;
  var $az2;
  var $az3;
  var $az4;
  var $btmp0;
  var $btmp1;
  var $btmp2;
  var $btmp3;
  $1=$pTemp;
  $2=$pSrc;
  var $3=$2;
  var $4=(($3+4)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  $z2=$6;
  $z3=0;
  var $7=$z2;
  var $8=(($7)|0);
  var $9=((($8)*(4433))|0);
  $z1=$9;
  var $10=$z1;
  var $11=(($10)|0);
  $tmp2=$11;
  var $12=$z1;
  var $13=$z2;
  var $14=((($13)*(6270))|0);
  var $15=((($12)+($14))|0);
  $tmp3=$15;
  var $16=$2;
  var $17=(($16)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  var $20=$2;
  var $21=(($20+8)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  var $24=((($19)+($23))|0);
  var $25=$24 << 13;
  $tmp0=$25;
  var $26=$2;
  var $27=(($26)|0);
  var $28=HEAP16[(($27)>>1)];
  var $29=(($28 << 16) >> 16);
  var $30=$2;
  var $31=(($30+8)|0);
  var $32=HEAP16[(($31)>>1)];
  var $33=(($32 << 16) >> 16);
  var $34=((($29)-($33))|0);
  var $35=$34 << 13;
  $tmp1=$35;
  var $36=$tmp0;
  var $37=$tmp3;
  var $38=((($36)+($37))|0);
  $tmp10=$38;
  var $39=$tmp0;
  var $40=$tmp3;
  var $41=((($39)-($40))|0);
  $tmp13=$41;
  var $42=$tmp1;
  var $43=$tmp2;
  var $44=((($42)+($43))|0);
  $tmp11=$44;
  var $45=$tmp1;
  var $46=$tmp2;
  var $47=((($45)-($46))|0);
  $tmp12=$47;
  $atmp0=0;
  $atmp1=0;
  var $48=$2;
  var $49=(($48+6)|0);
  var $50=HEAP16[(($49)>>1)];
  var $51=(($50 << 16) >> 16);
  $atmp2=$51;
  var $52=$2;
  var $53=(($52+2)|0);
  var $54=HEAP16[(($53)>>1)];
  var $55=(($54 << 16) >> 16);
  $atmp3=$55;
  var $56=$atmp3;
  var $57=(($56)|0);
  $bz1=$57;
  var $58=$atmp2;
  var $59=(($58)|0);
  $bz2=$59;
  var $60=$atmp2;
  var $61=(($60)|0);
  $bz3=$61;
  var $62=$atmp3;
  var $63=(($62)|0);
  $bz4=$63;
  var $64=$bz3;
  var $65=$bz4;
  var $66=((($64)+($65))|0);
  var $67=((($66)*(9633))|0);
  $bz5=$67;
  var $68=$bz1;
  var $69=((($68)*(-7373))|0);
  $az1=$69;
  var $70=$bz2;
  var $71=((($70)*(-20995))|0);
  $az2=$71;
  var $72=$bz3;
  var $73=((($72)*(-16069))|0);
  var $74=$bz5;
  var $75=((($73)+($74))|0);
  $az3=$75;
  var $76=$bz4;
  var $77=((($76)*(-3196))|0);
  var $78=$bz5;
  var $79=((($77)+($78))|0);
  $az4=$79;
  var $80=$az1;
  var $81=(($80)|0);
  var $82=$az3;
  var $83=((($81)+($82))|0);
  $btmp0=$83;
  var $84=$az2;
  var $85=(($84)|0);
  var $86=$az4;
  var $87=((($85)+($86))|0);
  $btmp1=$87;
  var $88=$atmp2;
  var $89=((($88)*(25172))|0);
  var $90=$az2;
  var $91=((($89)+($90))|0);
  var $92=$az3;
  var $93=((($91)+($92))|0);
  $btmp2=$93;
  var $94=$atmp3;
  var $95=((($94)*(12299))|0);
  var $96=$az1;
  var $97=((($95)+($96))|0);
  var $98=$az4;
  var $99=((($97)+($98))|0);
  $btmp3=$99;
  var $100=$tmp10;
  var $101=$btmp3;
  var $102=((($100)+($101))|0);
  var $103=((($102)+(1024))|0);
  var $104=$103 >> 11;
  var $105=$1;
  var $106=(($105)|0);
  HEAP32[(($106)>>2)]=$104;
  var $107=$tmp10;
  var $108=$btmp3;
  var $109=((($107)-($108))|0);
  var $110=((($109)+(1024))|0);
  var $111=$110 >> 11;
  var $112=$1;
  var $113=(($112+28)|0);
  HEAP32[(($113)>>2)]=$111;
  var $114=$tmp11;
  var $115=$btmp2;
  var $116=((($114)+($115))|0);
  var $117=((($116)+(1024))|0);
  var $118=$117 >> 11;
  var $119=$1;
  var $120=(($119+4)|0);
  HEAP32[(($120)>>2)]=$118;
  var $121=$tmp11;
  var $122=$btmp2;
  var $123=((($121)-($122))|0);
  var $124=((($123)+(1024))|0);
  var $125=$124 >> 11;
  var $126=$1;
  var $127=(($126+24)|0);
  HEAP32[(($127)>>2)]=$125;
  var $128=$tmp12;
  var $129=$btmp1;
  var $130=((($128)+($129))|0);
  var $131=((($130)+(1024))|0);
  var $132=$131 >> 11;
  var $133=$1;
  var $134=(($133+8)|0);
  HEAP32[(($134)>>2)]=$132;
  var $135=$tmp12;
  var $136=$btmp1;
  var $137=((($135)-($136))|0);
  var $138=((($137)+(1024))|0);
  var $139=$138 >> 11;
  var $140=$1;
  var $141=(($140+20)|0);
  HEAP32[(($141)>>2)]=$139;
  var $142=$tmp13;
  var $143=$btmp0;
  var $144=((($142)+($143))|0);
  var $145=((($144)+(1024))|0);
  var $146=$145 >> 11;
  var $147=$1;
  var $148=(($147+12)|0);
  HEAP32[(($148)>>2)]=$146;
  var $149=$tmp13;
  var $150=$btmp0;
  var $151=((($149)-($150))|0);
  var $152=((($151)+(1024))|0);
  var $153=$152 >> 11;
  var $154=$1;
  var $155=(($154+16)|0);
  HEAP32[(($155)>>2)]=$153;
  ;
  return;
}
__ZN4jpgd3RowILi5EE4idctEPiPKs["X"]=1;

function __ZN4jpgd3RowILi6EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $z2;
  var $z3;
  var $z1;
  var $tmp2;
  var $tmp3;
  var $tmp0;
  var $tmp1;
  var $tmp10;
  var $tmp13;
  var $tmp11;
  var $tmp12;
  var $atmp0;
  var $atmp1;
  var $atmp2;
  var $atmp3;
  var $bz1;
  var $bz2;
  var $bz3;
  var $bz4;
  var $bz5;
  var $az1;
  var $az2;
  var $az3;
  var $az4;
  var $btmp0;
  var $btmp1;
  var $btmp2;
  var $btmp3;
  $1=$pTemp;
  $2=$pSrc;
  var $3=$2;
  var $4=(($3+4)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  $z2=$6;
  $z3=0;
  var $7=$z2;
  var $8=(($7)|0);
  var $9=((($8)*(4433))|0);
  $z1=$9;
  var $10=$z1;
  var $11=(($10)|0);
  $tmp2=$11;
  var $12=$z1;
  var $13=$z2;
  var $14=((($13)*(6270))|0);
  var $15=((($12)+($14))|0);
  $tmp3=$15;
  var $16=$2;
  var $17=(($16)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  var $20=$2;
  var $21=(($20+8)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  var $24=((($19)+($23))|0);
  var $25=$24 << 13;
  $tmp0=$25;
  var $26=$2;
  var $27=(($26)|0);
  var $28=HEAP16[(($27)>>1)];
  var $29=(($28 << 16) >> 16);
  var $30=$2;
  var $31=(($30+8)|0);
  var $32=HEAP16[(($31)>>1)];
  var $33=(($32 << 16) >> 16);
  var $34=((($29)-($33))|0);
  var $35=$34 << 13;
  $tmp1=$35;
  var $36=$tmp0;
  var $37=$tmp3;
  var $38=((($36)+($37))|0);
  $tmp10=$38;
  var $39=$tmp0;
  var $40=$tmp3;
  var $41=((($39)-($40))|0);
  $tmp13=$41;
  var $42=$tmp1;
  var $43=$tmp2;
  var $44=((($42)+($43))|0);
  $tmp11=$44;
  var $45=$tmp1;
  var $46=$tmp2;
  var $47=((($45)-($46))|0);
  $tmp12=$47;
  $atmp0=0;
  var $48=$2;
  var $49=(($48+10)|0);
  var $50=HEAP16[(($49)>>1)];
  var $51=(($50 << 16) >> 16);
  $atmp1=$51;
  var $52=$2;
  var $53=(($52+6)|0);
  var $54=HEAP16[(($53)>>1)];
  var $55=(($54 << 16) >> 16);
  $atmp2=$55;
  var $56=$2;
  var $57=(($56+2)|0);
  var $58=HEAP16[(($57)>>1)];
  var $59=(($58 << 16) >> 16);
  $atmp3=$59;
  var $60=$atmp3;
  var $61=(($60)|0);
  $bz1=$61;
  var $62=$atmp1;
  var $63=$atmp2;
  var $64=((($62)+($63))|0);
  $bz2=$64;
  var $65=$atmp2;
  var $66=(($65)|0);
  $bz3=$66;
  var $67=$atmp1;
  var $68=$atmp3;
  var $69=((($67)+($68))|0);
  $bz4=$69;
  var $70=$bz3;
  var $71=$bz4;
  var $72=((($70)+($71))|0);
  var $73=((($72)*(9633))|0);
  $bz5=$73;
  var $74=$bz1;
  var $75=((($74)*(-7373))|0);
  $az1=$75;
  var $76=$bz2;
  var $77=((($76)*(-20995))|0);
  $az2=$77;
  var $78=$bz3;
  var $79=((($78)*(-16069))|0);
  var $80=$bz5;
  var $81=((($79)+($80))|0);
  $az3=$81;
  var $82=$bz4;
  var $83=((($82)*(-3196))|0);
  var $84=$bz5;
  var $85=((($83)+($84))|0);
  $az4=$85;
  var $86=$az1;
  var $87=(($86)|0);
  var $88=$az3;
  var $89=((($87)+($88))|0);
  $btmp0=$89;
  var $90=$atmp1;
  var $91=((($90)*(16819))|0);
  var $92=$az2;
  var $93=((($91)+($92))|0);
  var $94=$az4;
  var $95=((($93)+($94))|0);
  $btmp1=$95;
  var $96=$atmp2;
  var $97=((($96)*(25172))|0);
  var $98=$az2;
  var $99=((($97)+($98))|0);
  var $100=$az3;
  var $101=((($99)+($100))|0);
  $btmp2=$101;
  var $102=$atmp3;
  var $103=((($102)*(12299))|0);
  var $104=$az1;
  var $105=((($103)+($104))|0);
  var $106=$az4;
  var $107=((($105)+($106))|0);
  $btmp3=$107;
  var $108=$tmp10;
  var $109=$btmp3;
  var $110=((($108)+($109))|0);
  var $111=((($110)+(1024))|0);
  var $112=$111 >> 11;
  var $113=$1;
  var $114=(($113)|0);
  HEAP32[(($114)>>2)]=$112;
  var $115=$tmp10;
  var $116=$btmp3;
  var $117=((($115)-($116))|0);
  var $118=((($117)+(1024))|0);
  var $119=$118 >> 11;
  var $120=$1;
  var $121=(($120+28)|0);
  HEAP32[(($121)>>2)]=$119;
  var $122=$tmp11;
  var $123=$btmp2;
  var $124=((($122)+($123))|0);
  var $125=((($124)+(1024))|0);
  var $126=$125 >> 11;
  var $127=$1;
  var $128=(($127+4)|0);
  HEAP32[(($128)>>2)]=$126;
  var $129=$tmp11;
  var $130=$btmp2;
  var $131=((($129)-($130))|0);
  var $132=((($131)+(1024))|0);
  var $133=$132 >> 11;
  var $134=$1;
  var $135=(($134+24)|0);
  HEAP32[(($135)>>2)]=$133;
  var $136=$tmp12;
  var $137=$btmp1;
  var $138=((($136)+($137))|0);
  var $139=((($138)+(1024))|0);
  var $140=$139 >> 11;
  var $141=$1;
  var $142=(($141+8)|0);
  HEAP32[(($142)>>2)]=$140;
  var $143=$tmp12;
  var $144=$btmp1;
  var $145=((($143)-($144))|0);
  var $146=((($145)+(1024))|0);
  var $147=$146 >> 11;
  var $148=$1;
  var $149=(($148+20)|0);
  HEAP32[(($149)>>2)]=$147;
  var $150=$tmp13;
  var $151=$btmp0;
  var $152=((($150)+($151))|0);
  var $153=((($152)+(1024))|0);
  var $154=$153 >> 11;
  var $155=$1;
  var $156=(($155+12)|0);
  HEAP32[(($156)>>2)]=$154;
  var $157=$tmp13;
  var $158=$btmp0;
  var $159=((($157)-($158))|0);
  var $160=((($159)+(1024))|0);
  var $161=$160 >> 11;
  var $162=$1;
  var $163=(($162+16)|0);
  HEAP32[(($163)>>2)]=$161;
  ;
  return;
}
__ZN4jpgd3RowILi6EE4idctEPiPKs["X"]=1;

function __ZN4jpgd3RowILi7EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $z2;
  var $z3;
  var $z1;
  var $tmp2;
  var $tmp3;
  var $tmp0;
  var $tmp1;
  var $tmp10;
  var $tmp13;
  var $tmp11;
  var $tmp12;
  var $atmp0;
  var $atmp1;
  var $atmp2;
  var $atmp3;
  var $bz1;
  var $bz2;
  var $bz3;
  var $bz4;
  var $bz5;
  var $az1;
  var $az2;
  var $az3;
  var $az4;
  var $btmp0;
  var $btmp1;
  var $btmp2;
  var $btmp3;
  $1=$pTemp;
  $2=$pSrc;
  var $3=$2;
  var $4=(($3+4)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  $z2=$6;
  var $7=$2;
  var $8=(($7+12)|0);
  var $9=HEAP16[(($8)>>1)];
  var $10=(($9 << 16) >> 16);
  $z3=$10;
  var $11=$z2;
  var $12=$z3;
  var $13=((($11)+($12))|0);
  var $14=((($13)*(4433))|0);
  $z1=$14;
  var $15=$z1;
  var $16=$z3;
  var $17=((($16)*(-15137))|0);
  var $18=((($15)+($17))|0);
  $tmp2=$18;
  var $19=$z1;
  var $20=$z2;
  var $21=((($20)*(6270))|0);
  var $22=((($19)+($21))|0);
  $tmp3=$22;
  var $23=$2;
  var $24=(($23)|0);
  var $25=HEAP16[(($24)>>1)];
  var $26=(($25 << 16) >> 16);
  var $27=$2;
  var $28=(($27+8)|0);
  var $29=HEAP16[(($28)>>1)];
  var $30=(($29 << 16) >> 16);
  var $31=((($26)+($30))|0);
  var $32=$31 << 13;
  $tmp0=$32;
  var $33=$2;
  var $34=(($33)|0);
  var $35=HEAP16[(($34)>>1)];
  var $36=(($35 << 16) >> 16);
  var $37=$2;
  var $38=(($37+8)|0);
  var $39=HEAP16[(($38)>>1)];
  var $40=(($39 << 16) >> 16);
  var $41=((($36)-($40))|0);
  var $42=$41 << 13;
  $tmp1=$42;
  var $43=$tmp0;
  var $44=$tmp3;
  var $45=((($43)+($44))|0);
  $tmp10=$45;
  var $46=$tmp0;
  var $47=$tmp3;
  var $48=((($46)-($47))|0);
  $tmp13=$48;
  var $49=$tmp1;
  var $50=$tmp2;
  var $51=((($49)+($50))|0);
  $tmp11=$51;
  var $52=$tmp1;
  var $53=$tmp2;
  var $54=((($52)-($53))|0);
  $tmp12=$54;
  $atmp0=0;
  var $55=$2;
  var $56=(($55+10)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  $atmp1=$58;
  var $59=$2;
  var $60=(($59+6)|0);
  var $61=HEAP16[(($60)>>1)];
  var $62=(($61 << 16) >> 16);
  $atmp2=$62;
  var $63=$2;
  var $64=(($63+2)|0);
  var $65=HEAP16[(($64)>>1)];
  var $66=(($65 << 16) >> 16);
  $atmp3=$66;
  var $67=$atmp3;
  var $68=(($67)|0);
  $bz1=$68;
  var $69=$atmp1;
  var $70=$atmp2;
  var $71=((($69)+($70))|0);
  $bz2=$71;
  var $72=$atmp2;
  var $73=(($72)|0);
  $bz3=$73;
  var $74=$atmp1;
  var $75=$atmp3;
  var $76=((($74)+($75))|0);
  $bz4=$76;
  var $77=$bz3;
  var $78=$bz4;
  var $79=((($77)+($78))|0);
  var $80=((($79)*(9633))|0);
  $bz5=$80;
  var $81=$bz1;
  var $82=((($81)*(-7373))|0);
  $az1=$82;
  var $83=$bz2;
  var $84=((($83)*(-20995))|0);
  $az2=$84;
  var $85=$bz3;
  var $86=((($85)*(-16069))|0);
  var $87=$bz5;
  var $88=((($86)+($87))|0);
  $az3=$88;
  var $89=$bz4;
  var $90=((($89)*(-3196))|0);
  var $91=$bz5;
  var $92=((($90)+($91))|0);
  $az4=$92;
  var $93=$az1;
  var $94=(($93)|0);
  var $95=$az3;
  var $96=((($94)+($95))|0);
  $btmp0=$96;
  var $97=$atmp1;
  var $98=((($97)*(16819))|0);
  var $99=$az2;
  var $100=((($98)+($99))|0);
  var $101=$az4;
  var $102=((($100)+($101))|0);
  $btmp1=$102;
  var $103=$atmp2;
  var $104=((($103)*(25172))|0);
  var $105=$az2;
  var $106=((($104)+($105))|0);
  var $107=$az3;
  var $108=((($106)+($107))|0);
  $btmp2=$108;
  var $109=$atmp3;
  var $110=((($109)*(12299))|0);
  var $111=$az1;
  var $112=((($110)+($111))|0);
  var $113=$az4;
  var $114=((($112)+($113))|0);
  $btmp3=$114;
  var $115=$tmp10;
  var $116=$btmp3;
  var $117=((($115)+($116))|0);
  var $118=((($117)+(1024))|0);
  var $119=$118 >> 11;
  var $120=$1;
  var $121=(($120)|0);
  HEAP32[(($121)>>2)]=$119;
  var $122=$tmp10;
  var $123=$btmp3;
  var $124=((($122)-($123))|0);
  var $125=((($124)+(1024))|0);
  var $126=$125 >> 11;
  var $127=$1;
  var $128=(($127+28)|0);
  HEAP32[(($128)>>2)]=$126;
  var $129=$tmp11;
  var $130=$btmp2;
  var $131=((($129)+($130))|0);
  var $132=((($131)+(1024))|0);
  var $133=$132 >> 11;
  var $134=$1;
  var $135=(($134+4)|0);
  HEAP32[(($135)>>2)]=$133;
  var $136=$tmp11;
  var $137=$btmp2;
  var $138=((($136)-($137))|0);
  var $139=((($138)+(1024))|0);
  var $140=$139 >> 11;
  var $141=$1;
  var $142=(($141+24)|0);
  HEAP32[(($142)>>2)]=$140;
  var $143=$tmp12;
  var $144=$btmp1;
  var $145=((($143)+($144))|0);
  var $146=((($145)+(1024))|0);
  var $147=$146 >> 11;
  var $148=$1;
  var $149=(($148+8)|0);
  HEAP32[(($149)>>2)]=$147;
  var $150=$tmp12;
  var $151=$btmp1;
  var $152=((($150)-($151))|0);
  var $153=((($152)+(1024))|0);
  var $154=$153 >> 11;
  var $155=$1;
  var $156=(($155+20)|0);
  HEAP32[(($156)>>2)]=$154;
  var $157=$tmp13;
  var $158=$btmp0;
  var $159=((($157)+($158))|0);
  var $160=((($159)+(1024))|0);
  var $161=$160 >> 11;
  var $162=$1;
  var $163=(($162+12)|0);
  HEAP32[(($163)>>2)]=$161;
  var $164=$tmp13;
  var $165=$btmp0;
  var $166=((($164)-($165))|0);
  var $167=((($166)+(1024))|0);
  var $168=$167 >> 11;
  var $169=$1;
  var $170=(($169+16)|0);
  HEAP32[(($170)>>2)]=$168;
  ;
  return;
}
__ZN4jpgd3RowILi7EE4idctEPiPKs["X"]=1;

function __ZN4jpgd3RowILi8EE4idctEPiPKs($pTemp, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $z2;
  var $z3;
  var $z1;
  var $tmp2;
  var $tmp3;
  var $tmp0;
  var $tmp1;
  var $tmp10;
  var $tmp13;
  var $tmp11;
  var $tmp12;
  var $atmp0;
  var $atmp1;
  var $atmp2;
  var $atmp3;
  var $bz1;
  var $bz2;
  var $bz3;
  var $bz4;
  var $bz5;
  var $az1;
  var $az2;
  var $az3;
  var $az4;
  var $btmp0;
  var $btmp1;
  var $btmp2;
  var $btmp3;
  $1=$pTemp;
  $2=$pSrc;
  var $3=$2;
  var $4=(($3+4)|0);
  var $5=HEAP16[(($4)>>1)];
  var $6=(($5 << 16) >> 16);
  $z2=$6;
  var $7=$2;
  var $8=(($7+12)|0);
  var $9=HEAP16[(($8)>>1)];
  var $10=(($9 << 16) >> 16);
  $z3=$10;
  var $11=$z2;
  var $12=$z3;
  var $13=((($11)+($12))|0);
  var $14=((($13)*(4433))|0);
  $z1=$14;
  var $15=$z1;
  var $16=$z3;
  var $17=((($16)*(-15137))|0);
  var $18=((($15)+($17))|0);
  $tmp2=$18;
  var $19=$z1;
  var $20=$z2;
  var $21=((($20)*(6270))|0);
  var $22=((($19)+($21))|0);
  $tmp3=$22;
  var $23=$2;
  var $24=(($23)|0);
  var $25=HEAP16[(($24)>>1)];
  var $26=(($25 << 16) >> 16);
  var $27=$2;
  var $28=(($27+8)|0);
  var $29=HEAP16[(($28)>>1)];
  var $30=(($29 << 16) >> 16);
  var $31=((($26)+($30))|0);
  var $32=$31 << 13;
  $tmp0=$32;
  var $33=$2;
  var $34=(($33)|0);
  var $35=HEAP16[(($34)>>1)];
  var $36=(($35 << 16) >> 16);
  var $37=$2;
  var $38=(($37+8)|0);
  var $39=HEAP16[(($38)>>1)];
  var $40=(($39 << 16) >> 16);
  var $41=((($36)-($40))|0);
  var $42=$41 << 13;
  $tmp1=$42;
  var $43=$tmp0;
  var $44=$tmp3;
  var $45=((($43)+($44))|0);
  $tmp10=$45;
  var $46=$tmp0;
  var $47=$tmp3;
  var $48=((($46)-($47))|0);
  $tmp13=$48;
  var $49=$tmp1;
  var $50=$tmp2;
  var $51=((($49)+($50))|0);
  $tmp11=$51;
  var $52=$tmp1;
  var $53=$tmp2;
  var $54=((($52)-($53))|0);
  $tmp12=$54;
  var $55=$2;
  var $56=(($55+14)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  $atmp0=$58;
  var $59=$2;
  var $60=(($59+10)|0);
  var $61=HEAP16[(($60)>>1)];
  var $62=(($61 << 16) >> 16);
  $atmp1=$62;
  var $63=$2;
  var $64=(($63+6)|0);
  var $65=HEAP16[(($64)>>1)];
  var $66=(($65 << 16) >> 16);
  $atmp2=$66;
  var $67=$2;
  var $68=(($67+2)|0);
  var $69=HEAP16[(($68)>>1)];
  var $70=(($69 << 16) >> 16);
  $atmp3=$70;
  var $71=$atmp0;
  var $72=$atmp3;
  var $73=((($71)+($72))|0);
  $bz1=$73;
  var $74=$atmp1;
  var $75=$atmp2;
  var $76=((($74)+($75))|0);
  $bz2=$76;
  var $77=$atmp0;
  var $78=$atmp2;
  var $79=((($77)+($78))|0);
  $bz3=$79;
  var $80=$atmp1;
  var $81=$atmp3;
  var $82=((($80)+($81))|0);
  $bz4=$82;
  var $83=$bz3;
  var $84=$bz4;
  var $85=((($83)+($84))|0);
  var $86=((($85)*(9633))|0);
  $bz5=$86;
  var $87=$bz1;
  var $88=((($87)*(-7373))|0);
  $az1=$88;
  var $89=$bz2;
  var $90=((($89)*(-20995))|0);
  $az2=$90;
  var $91=$bz3;
  var $92=((($91)*(-16069))|0);
  var $93=$bz5;
  var $94=((($92)+($93))|0);
  $az3=$94;
  var $95=$bz4;
  var $96=((($95)*(-3196))|0);
  var $97=$bz5;
  var $98=((($96)+($97))|0);
  $az4=$98;
  var $99=$atmp0;
  var $100=((($99)*(2446))|0);
  var $101=$az1;
  var $102=((($100)+($101))|0);
  var $103=$az3;
  var $104=((($102)+($103))|0);
  $btmp0=$104;
  var $105=$atmp1;
  var $106=((($105)*(16819))|0);
  var $107=$az2;
  var $108=((($106)+($107))|0);
  var $109=$az4;
  var $110=((($108)+($109))|0);
  $btmp1=$110;
  var $111=$atmp2;
  var $112=((($111)*(25172))|0);
  var $113=$az2;
  var $114=((($112)+($113))|0);
  var $115=$az3;
  var $116=((($114)+($115))|0);
  $btmp2=$116;
  var $117=$atmp3;
  var $118=((($117)*(12299))|0);
  var $119=$az1;
  var $120=((($118)+($119))|0);
  var $121=$az4;
  var $122=((($120)+($121))|0);
  $btmp3=$122;
  var $123=$tmp10;
  var $124=$btmp3;
  var $125=((($123)+($124))|0);
  var $126=((($125)+(1024))|0);
  var $127=$126 >> 11;
  var $128=$1;
  var $129=(($128)|0);
  HEAP32[(($129)>>2)]=$127;
  var $130=$tmp10;
  var $131=$btmp3;
  var $132=((($130)-($131))|0);
  var $133=((($132)+(1024))|0);
  var $134=$133 >> 11;
  var $135=$1;
  var $136=(($135+28)|0);
  HEAP32[(($136)>>2)]=$134;
  var $137=$tmp11;
  var $138=$btmp2;
  var $139=((($137)+($138))|0);
  var $140=((($139)+(1024))|0);
  var $141=$140 >> 11;
  var $142=$1;
  var $143=(($142+4)|0);
  HEAP32[(($143)>>2)]=$141;
  var $144=$tmp11;
  var $145=$btmp2;
  var $146=((($144)-($145))|0);
  var $147=((($146)+(1024))|0);
  var $148=$147 >> 11;
  var $149=$1;
  var $150=(($149+24)|0);
  HEAP32[(($150)>>2)]=$148;
  var $151=$tmp12;
  var $152=$btmp1;
  var $153=((($151)+($152))|0);
  var $154=((($153)+(1024))|0);
  var $155=$154 >> 11;
  var $156=$1;
  var $157=(($156+8)|0);
  HEAP32[(($157)>>2)]=$155;
  var $158=$tmp12;
  var $159=$btmp1;
  var $160=((($158)-($159))|0);
  var $161=((($160)+(1024))|0);
  var $162=$161 >> 11;
  var $163=$1;
  var $164=(($163+20)|0);
  HEAP32[(($164)>>2)]=$162;
  var $165=$tmp13;
  var $166=$btmp0;
  var $167=((($165)+($166))|0);
  var $168=((($167)+(1024))|0);
  var $169=$168 >> 11;
  var $170=$1;
  var $171=(($170+12)|0);
  HEAP32[(($171)>>2)]=$169;
  var $172=$tmp13;
  var $173=$btmp0;
  var $174=((($172)-($173))|0);
  var $175=((($174)+(1024))|0);
  var $176=$175 >> 11;
  var $177=$1;
  var $178=(($177+16)|0);
  HEAP32[(($178)>>2)]=$176;
  ;
  return;
}
__ZN4jpgd3RowILi8EE4idctEPiPKs["X"]=1;

function __ZN4jpgd3ColILi1EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $dcval;
      var $dcval_clamped;
      $1=$pDst_ptr;
      $2=$pTemp;
      var $3=$2;
      var $4=(($3)|0);
      var $5=HEAP32[(($4)>>2)];
      var $6=((($5)+(4096))|0);
      var $7=((($6)+(16))|0);
      var $8=$7 >> 5;
      $dcval=$8;
      var $9=$dcval;
      var $10=(($9)>>>0) > 255;
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $12=$dcval;
      var $13=$12 ^ -1;
      var $14=$13 >> 31;
      var $15=$14 & 255;
      var $19 = $15;__label__ = 5; break;
    case 4: 
      var $17=$dcval;
      var $19 = $17;__label__ = 5; break;
    case 5: 
      var $19;
      var $20=(($19) & 255);
      $dcval_clamped=$20;
      var $21=$dcval_clamped;
      var $22=$1;
      var $23=(($22)|0);
      HEAP8[($23)]=$21;
      var $24=$dcval_clamped;
      var $25=$1;
      var $26=(($25+8)|0);
      HEAP8[($26)]=$24;
      var $27=$dcval_clamped;
      var $28=$1;
      var $29=(($28+16)|0);
      HEAP8[($29)]=$27;
      var $30=$dcval_clamped;
      var $31=$1;
      var $32=(($31+24)|0);
      HEAP8[($32)]=$30;
      var $33=$dcval_clamped;
      var $34=$1;
      var $35=(($34+32)|0);
      HEAP8[($35)]=$33;
      var $36=$dcval_clamped;
      var $37=$1;
      var $38=(($37+40)|0);
      HEAP8[($38)]=$36;
      var $39=$dcval_clamped;
      var $40=$1;
      var $41=(($40+48)|0);
      HEAP8[($41)]=$39;
      var $42=$dcval_clamped;
      var $43=$1;
      var $44=(($43+56)|0);
      HEAP8[($44)]=$42;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi1EE4idctEPhPKi["X"]=1;

function __ZN4jpgd3ColILi2EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $z2;
      var $z3;
      var $z1;
      var $tmp2;
      var $tmp3;
      var $tmp0;
      var $tmp1;
      var $tmp10;
      var $tmp13;
      var $tmp11;
      var $tmp12;
      var $atmp0;
      var $atmp1;
      var $atmp2;
      var $atmp3;
      var $bz1;
      var $bz2;
      var $bz3;
      var $bz4;
      var $bz5;
      var $az1;
      var $az2;
      var $az3;
      var $az4;
      var $btmp0;
      var $btmp1;
      var $btmp2;
      var $btmp3;
      var $i;
      $1=$pDst_ptr;
      $2=$pTemp;
      $z2=0;
      $z3=0;
      $z1=0;
      $tmp2=0;
      $tmp3=0;
      var $3=$2;
      var $4=(($3)|0);
      var $5=HEAP32[(($4)>>2)];
      var $6=(($5)|0);
      var $7=$6 << 13;
      $tmp0=$7;
      var $8=$2;
      var $9=(($8)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=(($10)|0);
      var $12=$11 << 13;
      $tmp1=$12;
      var $13=$tmp0;
      var $14=(($13)|0);
      $tmp10=$14;
      var $15=$tmp0;
      var $16=(($15)|0);
      $tmp13=$16;
      var $17=$tmp1;
      var $18=(($17)|0);
      $tmp11=$18;
      var $19=$tmp1;
      var $20=(($19)|0);
      $tmp12=$20;
      $atmp0=0;
      $atmp1=0;
      $atmp2=0;
      var $21=$2;
      var $22=(($21+32)|0);
      var $23=HEAP32[(($22)>>2)];
      $atmp3=$23;
      var $24=$atmp3;
      var $25=(($24)|0);
      $bz1=$25;
      $bz2=0;
      $bz3=0;
      var $26=$atmp3;
      var $27=(($26)|0);
      $bz4=$27;
      var $28=$bz4;
      var $29=(($28)|0);
      var $30=((($29)*(9633))|0);
      $bz5=$30;
      var $31=$bz1;
      var $32=((($31)*(-7373))|0);
      $az1=$32;
      $az2=0;
      var $33=$bz5;
      var $34=(($33)|0);
      $az3=$34;
      var $35=$bz4;
      var $36=((($35)*(-3196))|0);
      var $37=$bz5;
      var $38=((($36)+($37))|0);
      $az4=$38;
      var $39=$az1;
      var $40=(($39)|0);
      var $41=$az3;
      var $42=((($40)+($41))|0);
      $btmp0=$42;
      var $43=$az4;
      var $44=(($43)|0);
      $btmp1=$44;
      var $45=$az3;
      var $46=(($45)|0);
      $btmp2=$46;
      var $47=$atmp3;
      var $48=((($47)*(12299))|0);
      var $49=$az1;
      var $50=((($48)+($49))|0);
      var $51=$az4;
      var $52=((($50)+($51))|0);
      $btmp3=$52;
      var $53=$tmp10;
      var $54=$btmp3;
      var $55=((($53)+($54))|0);
      var $56=((($55)+(33554432))|0);
      var $57=((($56)+(131072))|0);
      var $58=$57 >> 18;
      $i=$58;
      var $59=$i;
      var $60=(($59)>>>0) > 255;
      if ($60) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $62=$i;
      var $63=$62 ^ -1;
      var $64=$63 >> 31;
      var $65=$64 & 255;
      var $69 = $65;__label__ = 5; break;
    case 4: 
      var $67=$i;
      var $69 = $67;__label__ = 5; break;
    case 5: 
      var $69;
      var $70=(($69) & 255);
      var $71=$1;
      var $72=(($71)|0);
      HEAP8[($72)]=$70;
      var $73=$tmp10;
      var $74=$btmp3;
      var $75=((($73)-($74))|0);
      var $76=((($75)+(33554432))|0);
      var $77=((($76)+(131072))|0);
      var $78=$77 >> 18;
      $i=$78;
      var $79=$i;
      var $80=(($79)>>>0) > 255;
      if ($80) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $82=$i;
      var $83=$82 ^ -1;
      var $84=$83 >> 31;
      var $85=$84 & 255;
      var $89 = $85;__label__ = 8; break;
    case 7: 
      var $87=$i;
      var $89 = $87;__label__ = 8; break;
    case 8: 
      var $89;
      var $90=(($89) & 255);
      var $91=$1;
      var $92=(($91+56)|0);
      HEAP8[($92)]=$90;
      var $93=$tmp11;
      var $94=$btmp2;
      var $95=((($93)+($94))|0);
      var $96=((($95)+(33554432))|0);
      var $97=((($96)+(131072))|0);
      var $98=$97 >> 18;
      $i=$98;
      var $99=$i;
      var $100=(($99)>>>0) > 255;
      if ($100) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $102=$i;
      var $103=$102 ^ -1;
      var $104=$103 >> 31;
      var $105=$104 & 255;
      var $109 = $105;__label__ = 11; break;
    case 10: 
      var $107=$i;
      var $109 = $107;__label__ = 11; break;
    case 11: 
      var $109;
      var $110=(($109) & 255);
      var $111=$1;
      var $112=(($111+8)|0);
      HEAP8[($112)]=$110;
      var $113=$tmp11;
      var $114=$btmp2;
      var $115=((($113)-($114))|0);
      var $116=((($115)+(33554432))|0);
      var $117=((($116)+(131072))|0);
      var $118=$117 >> 18;
      $i=$118;
      var $119=$i;
      var $120=(($119)>>>0) > 255;
      if ($120) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $122=$i;
      var $123=$122 ^ -1;
      var $124=$123 >> 31;
      var $125=$124 & 255;
      var $129 = $125;__label__ = 14; break;
    case 13: 
      var $127=$i;
      var $129 = $127;__label__ = 14; break;
    case 14: 
      var $129;
      var $130=(($129) & 255);
      var $131=$1;
      var $132=(($131+48)|0);
      HEAP8[($132)]=$130;
      var $133=$tmp12;
      var $134=$btmp1;
      var $135=((($133)+($134))|0);
      var $136=((($135)+(33554432))|0);
      var $137=((($136)+(131072))|0);
      var $138=$137 >> 18;
      $i=$138;
      var $139=$i;
      var $140=(($139)>>>0) > 255;
      if ($140) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $142=$i;
      var $143=$142 ^ -1;
      var $144=$143 >> 31;
      var $145=$144 & 255;
      var $149 = $145;__label__ = 17; break;
    case 16: 
      var $147=$i;
      var $149 = $147;__label__ = 17; break;
    case 17: 
      var $149;
      var $150=(($149) & 255);
      var $151=$1;
      var $152=(($151+16)|0);
      HEAP8[($152)]=$150;
      var $153=$tmp12;
      var $154=$btmp1;
      var $155=((($153)-($154))|0);
      var $156=((($155)+(33554432))|0);
      var $157=((($156)+(131072))|0);
      var $158=$157 >> 18;
      $i=$158;
      var $159=$i;
      var $160=(($159)>>>0) > 255;
      if ($160) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $162=$i;
      var $163=$162 ^ -1;
      var $164=$163 >> 31;
      var $165=$164 & 255;
      var $169 = $165;__label__ = 20; break;
    case 19: 
      var $167=$i;
      var $169 = $167;__label__ = 20; break;
    case 20: 
      var $169;
      var $170=(($169) & 255);
      var $171=$1;
      var $172=(($171+40)|0);
      HEAP8[($172)]=$170;
      var $173=$tmp13;
      var $174=$btmp0;
      var $175=((($173)+($174))|0);
      var $176=((($175)+(33554432))|0);
      var $177=((($176)+(131072))|0);
      var $178=$177 >> 18;
      $i=$178;
      var $179=$i;
      var $180=(($179)>>>0) > 255;
      if ($180) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $182=$i;
      var $183=$182 ^ -1;
      var $184=$183 >> 31;
      var $185=$184 & 255;
      var $189 = $185;__label__ = 23; break;
    case 22: 
      var $187=$i;
      var $189 = $187;__label__ = 23; break;
    case 23: 
      var $189;
      var $190=(($189) & 255);
      var $191=$1;
      var $192=(($191+24)|0);
      HEAP8[($192)]=$190;
      var $193=$tmp13;
      var $194=$btmp0;
      var $195=((($193)-($194))|0);
      var $196=((($195)+(33554432))|0);
      var $197=((($196)+(131072))|0);
      var $198=$197 >> 18;
      $i=$198;
      var $199=$i;
      var $200=(($199)>>>0) > 255;
      if ($200) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $202=$i;
      var $203=$202 ^ -1;
      var $204=$203 >> 31;
      var $205=$204 & 255;
      var $209 = $205;__label__ = 26; break;
    case 25: 
      var $207=$i;
      var $209 = $207;__label__ = 26; break;
    case 26: 
      var $209;
      var $210=(($209) & 255);
      var $211=$1;
      var $212=(($211+32)|0);
      HEAP8[($212)]=$210;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi2EE4idctEPhPKi["X"]=1;

function __ZN4jpgd3ColILi3EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $z2;
      var $z3;
      var $z1;
      var $tmp2;
      var $tmp3;
      var $tmp0;
      var $tmp1;
      var $tmp10;
      var $tmp13;
      var $tmp11;
      var $tmp12;
      var $atmp0;
      var $atmp1;
      var $atmp2;
      var $atmp3;
      var $bz1;
      var $bz2;
      var $bz3;
      var $bz4;
      var $bz5;
      var $az1;
      var $az2;
      var $az3;
      var $az4;
      var $btmp0;
      var $btmp1;
      var $btmp2;
      var $btmp3;
      var $i;
      $1=$pDst_ptr;
      $2=$pTemp;
      var $3=$2;
      var $4=(($3+64)|0);
      var $5=HEAP32[(($4)>>2)];
      $z2=$5;
      $z3=0;
      var $6=$z2;
      var $7=(($6)|0);
      var $8=((($7)*(4433))|0);
      $z1=$8;
      var $9=$z1;
      var $10=(($9)|0);
      $tmp2=$10;
      var $11=$z1;
      var $12=$z2;
      var $13=((($12)*(6270))|0);
      var $14=((($11)+($13))|0);
      $tmp3=$14;
      var $15=$2;
      var $16=(($15)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=(($17)|0);
      var $19=$18 << 13;
      $tmp0=$19;
      var $20=$2;
      var $21=(($20)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=(($22)|0);
      var $24=$23 << 13;
      $tmp1=$24;
      var $25=$tmp0;
      var $26=$tmp3;
      var $27=((($25)+($26))|0);
      $tmp10=$27;
      var $28=$tmp0;
      var $29=$tmp3;
      var $30=((($28)-($29))|0);
      $tmp13=$30;
      var $31=$tmp1;
      var $32=$tmp2;
      var $33=((($31)+($32))|0);
      $tmp11=$33;
      var $34=$tmp1;
      var $35=$tmp2;
      var $36=((($34)-($35))|0);
      $tmp12=$36;
      $atmp0=0;
      $atmp1=0;
      $atmp2=0;
      var $37=$2;
      var $38=(($37+32)|0);
      var $39=HEAP32[(($38)>>2)];
      $atmp3=$39;
      var $40=$atmp3;
      var $41=(($40)|0);
      $bz1=$41;
      $bz2=0;
      $bz3=0;
      var $42=$atmp3;
      var $43=(($42)|0);
      $bz4=$43;
      var $44=$bz4;
      var $45=(($44)|0);
      var $46=((($45)*(9633))|0);
      $bz5=$46;
      var $47=$bz1;
      var $48=((($47)*(-7373))|0);
      $az1=$48;
      $az2=0;
      var $49=$bz5;
      var $50=(($49)|0);
      $az3=$50;
      var $51=$bz4;
      var $52=((($51)*(-3196))|0);
      var $53=$bz5;
      var $54=((($52)+($53))|0);
      $az4=$54;
      var $55=$az1;
      var $56=(($55)|0);
      var $57=$az3;
      var $58=((($56)+($57))|0);
      $btmp0=$58;
      var $59=$az4;
      var $60=(($59)|0);
      $btmp1=$60;
      var $61=$az3;
      var $62=(($61)|0);
      $btmp2=$62;
      var $63=$atmp3;
      var $64=((($63)*(12299))|0);
      var $65=$az1;
      var $66=((($64)+($65))|0);
      var $67=$az4;
      var $68=((($66)+($67))|0);
      $btmp3=$68;
      var $69=$tmp10;
      var $70=$btmp3;
      var $71=((($69)+($70))|0);
      var $72=((($71)+(33554432))|0);
      var $73=((($72)+(131072))|0);
      var $74=$73 >> 18;
      $i=$74;
      var $75=$i;
      var $76=(($75)>>>0) > 255;
      if ($76) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $78=$i;
      var $79=$78 ^ -1;
      var $80=$79 >> 31;
      var $81=$80 & 255;
      var $85 = $81;__label__ = 5; break;
    case 4: 
      var $83=$i;
      var $85 = $83;__label__ = 5; break;
    case 5: 
      var $85;
      var $86=(($85) & 255);
      var $87=$1;
      var $88=(($87)|0);
      HEAP8[($88)]=$86;
      var $89=$tmp10;
      var $90=$btmp3;
      var $91=((($89)-($90))|0);
      var $92=((($91)+(33554432))|0);
      var $93=((($92)+(131072))|0);
      var $94=$93 >> 18;
      $i=$94;
      var $95=$i;
      var $96=(($95)>>>0) > 255;
      if ($96) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $98=$i;
      var $99=$98 ^ -1;
      var $100=$99 >> 31;
      var $101=$100 & 255;
      var $105 = $101;__label__ = 8; break;
    case 7: 
      var $103=$i;
      var $105 = $103;__label__ = 8; break;
    case 8: 
      var $105;
      var $106=(($105) & 255);
      var $107=$1;
      var $108=(($107+56)|0);
      HEAP8[($108)]=$106;
      var $109=$tmp11;
      var $110=$btmp2;
      var $111=((($109)+($110))|0);
      var $112=((($111)+(33554432))|0);
      var $113=((($112)+(131072))|0);
      var $114=$113 >> 18;
      $i=$114;
      var $115=$i;
      var $116=(($115)>>>0) > 255;
      if ($116) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $118=$i;
      var $119=$118 ^ -1;
      var $120=$119 >> 31;
      var $121=$120 & 255;
      var $125 = $121;__label__ = 11; break;
    case 10: 
      var $123=$i;
      var $125 = $123;__label__ = 11; break;
    case 11: 
      var $125;
      var $126=(($125) & 255);
      var $127=$1;
      var $128=(($127+8)|0);
      HEAP8[($128)]=$126;
      var $129=$tmp11;
      var $130=$btmp2;
      var $131=((($129)-($130))|0);
      var $132=((($131)+(33554432))|0);
      var $133=((($132)+(131072))|0);
      var $134=$133 >> 18;
      $i=$134;
      var $135=$i;
      var $136=(($135)>>>0) > 255;
      if ($136) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $138=$i;
      var $139=$138 ^ -1;
      var $140=$139 >> 31;
      var $141=$140 & 255;
      var $145 = $141;__label__ = 14; break;
    case 13: 
      var $143=$i;
      var $145 = $143;__label__ = 14; break;
    case 14: 
      var $145;
      var $146=(($145) & 255);
      var $147=$1;
      var $148=(($147+48)|0);
      HEAP8[($148)]=$146;
      var $149=$tmp12;
      var $150=$btmp1;
      var $151=((($149)+($150))|0);
      var $152=((($151)+(33554432))|0);
      var $153=((($152)+(131072))|0);
      var $154=$153 >> 18;
      $i=$154;
      var $155=$i;
      var $156=(($155)>>>0) > 255;
      if ($156) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $158=$i;
      var $159=$158 ^ -1;
      var $160=$159 >> 31;
      var $161=$160 & 255;
      var $165 = $161;__label__ = 17; break;
    case 16: 
      var $163=$i;
      var $165 = $163;__label__ = 17; break;
    case 17: 
      var $165;
      var $166=(($165) & 255);
      var $167=$1;
      var $168=(($167+16)|0);
      HEAP8[($168)]=$166;
      var $169=$tmp12;
      var $170=$btmp1;
      var $171=((($169)-($170))|0);
      var $172=((($171)+(33554432))|0);
      var $173=((($172)+(131072))|0);
      var $174=$173 >> 18;
      $i=$174;
      var $175=$i;
      var $176=(($175)>>>0) > 255;
      if ($176) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $178=$i;
      var $179=$178 ^ -1;
      var $180=$179 >> 31;
      var $181=$180 & 255;
      var $185 = $181;__label__ = 20; break;
    case 19: 
      var $183=$i;
      var $185 = $183;__label__ = 20; break;
    case 20: 
      var $185;
      var $186=(($185) & 255);
      var $187=$1;
      var $188=(($187+40)|0);
      HEAP8[($188)]=$186;
      var $189=$tmp13;
      var $190=$btmp0;
      var $191=((($189)+($190))|0);
      var $192=((($191)+(33554432))|0);
      var $193=((($192)+(131072))|0);
      var $194=$193 >> 18;
      $i=$194;
      var $195=$i;
      var $196=(($195)>>>0) > 255;
      if ($196) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $198=$i;
      var $199=$198 ^ -1;
      var $200=$199 >> 31;
      var $201=$200 & 255;
      var $205 = $201;__label__ = 23; break;
    case 22: 
      var $203=$i;
      var $205 = $203;__label__ = 23; break;
    case 23: 
      var $205;
      var $206=(($205) & 255);
      var $207=$1;
      var $208=(($207+24)|0);
      HEAP8[($208)]=$206;
      var $209=$tmp13;
      var $210=$btmp0;
      var $211=((($209)-($210))|0);
      var $212=((($211)+(33554432))|0);
      var $213=((($212)+(131072))|0);
      var $214=$213 >> 18;
      $i=$214;
      var $215=$i;
      var $216=(($215)>>>0) > 255;
      if ($216) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $218=$i;
      var $219=$218 ^ -1;
      var $220=$219 >> 31;
      var $221=$220 & 255;
      var $225 = $221;__label__ = 26; break;
    case 25: 
      var $223=$i;
      var $225 = $223;__label__ = 26; break;
    case 26: 
      var $225;
      var $226=(($225) & 255);
      var $227=$1;
      var $228=(($227+32)|0);
      HEAP8[($228)]=$226;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi3EE4idctEPhPKi["X"]=1;

function __ZN4jpgd3ColILi4EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $z2;
      var $z3;
      var $z1;
      var $tmp2;
      var $tmp3;
      var $tmp0;
      var $tmp1;
      var $tmp10;
      var $tmp13;
      var $tmp11;
      var $tmp12;
      var $atmp0;
      var $atmp1;
      var $atmp2;
      var $atmp3;
      var $bz1;
      var $bz2;
      var $bz3;
      var $bz4;
      var $bz5;
      var $az1;
      var $az2;
      var $az3;
      var $az4;
      var $btmp0;
      var $btmp1;
      var $btmp2;
      var $btmp3;
      var $i;
      $1=$pDst_ptr;
      $2=$pTemp;
      var $3=$2;
      var $4=(($3+64)|0);
      var $5=HEAP32[(($4)>>2)];
      $z2=$5;
      $z3=0;
      var $6=$z2;
      var $7=(($6)|0);
      var $8=((($7)*(4433))|0);
      $z1=$8;
      var $9=$z1;
      var $10=(($9)|0);
      $tmp2=$10;
      var $11=$z1;
      var $12=$z2;
      var $13=((($12)*(6270))|0);
      var $14=((($11)+($13))|0);
      $tmp3=$14;
      var $15=$2;
      var $16=(($15)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=(($17)|0);
      var $19=$18 << 13;
      $tmp0=$19;
      var $20=$2;
      var $21=(($20)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=(($22)|0);
      var $24=$23 << 13;
      $tmp1=$24;
      var $25=$tmp0;
      var $26=$tmp3;
      var $27=((($25)+($26))|0);
      $tmp10=$27;
      var $28=$tmp0;
      var $29=$tmp3;
      var $30=((($28)-($29))|0);
      $tmp13=$30;
      var $31=$tmp1;
      var $32=$tmp2;
      var $33=((($31)+($32))|0);
      $tmp11=$33;
      var $34=$tmp1;
      var $35=$tmp2;
      var $36=((($34)-($35))|0);
      $tmp12=$36;
      $atmp0=0;
      $atmp1=0;
      var $37=$2;
      var $38=(($37+96)|0);
      var $39=HEAP32[(($38)>>2)];
      $atmp2=$39;
      var $40=$2;
      var $41=(($40+32)|0);
      var $42=HEAP32[(($41)>>2)];
      $atmp3=$42;
      var $43=$atmp3;
      var $44=(($43)|0);
      $bz1=$44;
      var $45=$atmp2;
      var $46=(($45)|0);
      $bz2=$46;
      var $47=$atmp2;
      var $48=(($47)|0);
      $bz3=$48;
      var $49=$atmp3;
      var $50=(($49)|0);
      $bz4=$50;
      var $51=$bz3;
      var $52=$bz4;
      var $53=((($51)+($52))|0);
      var $54=((($53)*(9633))|0);
      $bz5=$54;
      var $55=$bz1;
      var $56=((($55)*(-7373))|0);
      $az1=$56;
      var $57=$bz2;
      var $58=((($57)*(-20995))|0);
      $az2=$58;
      var $59=$bz3;
      var $60=((($59)*(-16069))|0);
      var $61=$bz5;
      var $62=((($60)+($61))|0);
      $az3=$62;
      var $63=$bz4;
      var $64=((($63)*(-3196))|0);
      var $65=$bz5;
      var $66=((($64)+($65))|0);
      $az4=$66;
      var $67=$az1;
      var $68=(($67)|0);
      var $69=$az3;
      var $70=((($68)+($69))|0);
      $btmp0=$70;
      var $71=$az2;
      var $72=(($71)|0);
      var $73=$az4;
      var $74=((($72)+($73))|0);
      $btmp1=$74;
      var $75=$atmp2;
      var $76=((($75)*(25172))|0);
      var $77=$az2;
      var $78=((($76)+($77))|0);
      var $79=$az3;
      var $80=((($78)+($79))|0);
      $btmp2=$80;
      var $81=$atmp3;
      var $82=((($81)*(12299))|0);
      var $83=$az1;
      var $84=((($82)+($83))|0);
      var $85=$az4;
      var $86=((($84)+($85))|0);
      $btmp3=$86;
      var $87=$tmp10;
      var $88=$btmp3;
      var $89=((($87)+($88))|0);
      var $90=((($89)+(33554432))|0);
      var $91=((($90)+(131072))|0);
      var $92=$91 >> 18;
      $i=$92;
      var $93=$i;
      var $94=(($93)>>>0) > 255;
      if ($94) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $96=$i;
      var $97=$96 ^ -1;
      var $98=$97 >> 31;
      var $99=$98 & 255;
      var $103 = $99;__label__ = 5; break;
    case 4: 
      var $101=$i;
      var $103 = $101;__label__ = 5; break;
    case 5: 
      var $103;
      var $104=(($103) & 255);
      var $105=$1;
      var $106=(($105)|0);
      HEAP8[($106)]=$104;
      var $107=$tmp10;
      var $108=$btmp3;
      var $109=((($107)-($108))|0);
      var $110=((($109)+(33554432))|0);
      var $111=((($110)+(131072))|0);
      var $112=$111 >> 18;
      $i=$112;
      var $113=$i;
      var $114=(($113)>>>0) > 255;
      if ($114) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $116=$i;
      var $117=$116 ^ -1;
      var $118=$117 >> 31;
      var $119=$118 & 255;
      var $123 = $119;__label__ = 8; break;
    case 7: 
      var $121=$i;
      var $123 = $121;__label__ = 8; break;
    case 8: 
      var $123;
      var $124=(($123) & 255);
      var $125=$1;
      var $126=(($125+56)|0);
      HEAP8[($126)]=$124;
      var $127=$tmp11;
      var $128=$btmp2;
      var $129=((($127)+($128))|0);
      var $130=((($129)+(33554432))|0);
      var $131=((($130)+(131072))|0);
      var $132=$131 >> 18;
      $i=$132;
      var $133=$i;
      var $134=(($133)>>>0) > 255;
      if ($134) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $136=$i;
      var $137=$136 ^ -1;
      var $138=$137 >> 31;
      var $139=$138 & 255;
      var $143 = $139;__label__ = 11; break;
    case 10: 
      var $141=$i;
      var $143 = $141;__label__ = 11; break;
    case 11: 
      var $143;
      var $144=(($143) & 255);
      var $145=$1;
      var $146=(($145+8)|0);
      HEAP8[($146)]=$144;
      var $147=$tmp11;
      var $148=$btmp2;
      var $149=((($147)-($148))|0);
      var $150=((($149)+(33554432))|0);
      var $151=((($150)+(131072))|0);
      var $152=$151 >> 18;
      $i=$152;
      var $153=$i;
      var $154=(($153)>>>0) > 255;
      if ($154) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $156=$i;
      var $157=$156 ^ -1;
      var $158=$157 >> 31;
      var $159=$158 & 255;
      var $163 = $159;__label__ = 14; break;
    case 13: 
      var $161=$i;
      var $163 = $161;__label__ = 14; break;
    case 14: 
      var $163;
      var $164=(($163) & 255);
      var $165=$1;
      var $166=(($165+48)|0);
      HEAP8[($166)]=$164;
      var $167=$tmp12;
      var $168=$btmp1;
      var $169=((($167)+($168))|0);
      var $170=((($169)+(33554432))|0);
      var $171=((($170)+(131072))|0);
      var $172=$171 >> 18;
      $i=$172;
      var $173=$i;
      var $174=(($173)>>>0) > 255;
      if ($174) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $176=$i;
      var $177=$176 ^ -1;
      var $178=$177 >> 31;
      var $179=$178 & 255;
      var $183 = $179;__label__ = 17; break;
    case 16: 
      var $181=$i;
      var $183 = $181;__label__ = 17; break;
    case 17: 
      var $183;
      var $184=(($183) & 255);
      var $185=$1;
      var $186=(($185+16)|0);
      HEAP8[($186)]=$184;
      var $187=$tmp12;
      var $188=$btmp1;
      var $189=((($187)-($188))|0);
      var $190=((($189)+(33554432))|0);
      var $191=((($190)+(131072))|0);
      var $192=$191 >> 18;
      $i=$192;
      var $193=$i;
      var $194=(($193)>>>0) > 255;
      if ($194) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $196=$i;
      var $197=$196 ^ -1;
      var $198=$197 >> 31;
      var $199=$198 & 255;
      var $203 = $199;__label__ = 20; break;
    case 19: 
      var $201=$i;
      var $203 = $201;__label__ = 20; break;
    case 20: 
      var $203;
      var $204=(($203) & 255);
      var $205=$1;
      var $206=(($205+40)|0);
      HEAP8[($206)]=$204;
      var $207=$tmp13;
      var $208=$btmp0;
      var $209=((($207)+($208))|0);
      var $210=((($209)+(33554432))|0);
      var $211=((($210)+(131072))|0);
      var $212=$211 >> 18;
      $i=$212;
      var $213=$i;
      var $214=(($213)>>>0) > 255;
      if ($214) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $216=$i;
      var $217=$216 ^ -1;
      var $218=$217 >> 31;
      var $219=$218 & 255;
      var $223 = $219;__label__ = 23; break;
    case 22: 
      var $221=$i;
      var $223 = $221;__label__ = 23; break;
    case 23: 
      var $223;
      var $224=(($223) & 255);
      var $225=$1;
      var $226=(($225+24)|0);
      HEAP8[($226)]=$224;
      var $227=$tmp13;
      var $228=$btmp0;
      var $229=((($227)-($228))|0);
      var $230=((($229)+(33554432))|0);
      var $231=((($230)+(131072))|0);
      var $232=$231 >> 18;
      $i=$232;
      var $233=$i;
      var $234=(($233)>>>0) > 255;
      if ($234) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $236=$i;
      var $237=$236 ^ -1;
      var $238=$237 >> 31;
      var $239=$238 & 255;
      var $243 = $239;__label__ = 26; break;
    case 25: 
      var $241=$i;
      var $243 = $241;__label__ = 26; break;
    case 26: 
      var $243;
      var $244=(($243) & 255);
      var $245=$1;
      var $246=(($245+32)|0);
      HEAP8[($246)]=$244;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi4EE4idctEPhPKi["X"]=1;

function __ZN4jpgd3ColILi5EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $z2;
      var $z3;
      var $z1;
      var $tmp2;
      var $tmp3;
      var $tmp0;
      var $tmp1;
      var $tmp10;
      var $tmp13;
      var $tmp11;
      var $tmp12;
      var $atmp0;
      var $atmp1;
      var $atmp2;
      var $atmp3;
      var $bz1;
      var $bz2;
      var $bz3;
      var $bz4;
      var $bz5;
      var $az1;
      var $az2;
      var $az3;
      var $az4;
      var $btmp0;
      var $btmp1;
      var $btmp2;
      var $btmp3;
      var $i;
      $1=$pDst_ptr;
      $2=$pTemp;
      var $3=$2;
      var $4=(($3+64)|0);
      var $5=HEAP32[(($4)>>2)];
      $z2=$5;
      $z3=0;
      var $6=$z2;
      var $7=(($6)|0);
      var $8=((($7)*(4433))|0);
      $z1=$8;
      var $9=$z1;
      var $10=(($9)|0);
      $tmp2=$10;
      var $11=$z1;
      var $12=$z2;
      var $13=((($12)*(6270))|0);
      var $14=((($11)+($13))|0);
      $tmp3=$14;
      var $15=$2;
      var $16=(($15)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=$2;
      var $19=(($18+128)|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=((($17)+($20))|0);
      var $22=$21 << 13;
      $tmp0=$22;
      var $23=$2;
      var $24=(($23)|0);
      var $25=HEAP32[(($24)>>2)];
      var $26=$2;
      var $27=(($26+128)|0);
      var $28=HEAP32[(($27)>>2)];
      var $29=((($25)-($28))|0);
      var $30=$29 << 13;
      $tmp1=$30;
      var $31=$tmp0;
      var $32=$tmp3;
      var $33=((($31)+($32))|0);
      $tmp10=$33;
      var $34=$tmp0;
      var $35=$tmp3;
      var $36=((($34)-($35))|0);
      $tmp13=$36;
      var $37=$tmp1;
      var $38=$tmp2;
      var $39=((($37)+($38))|0);
      $tmp11=$39;
      var $40=$tmp1;
      var $41=$tmp2;
      var $42=((($40)-($41))|0);
      $tmp12=$42;
      $atmp0=0;
      $atmp1=0;
      var $43=$2;
      var $44=(($43+96)|0);
      var $45=HEAP32[(($44)>>2)];
      $atmp2=$45;
      var $46=$2;
      var $47=(($46+32)|0);
      var $48=HEAP32[(($47)>>2)];
      $atmp3=$48;
      var $49=$atmp3;
      var $50=(($49)|0);
      $bz1=$50;
      var $51=$atmp2;
      var $52=(($51)|0);
      $bz2=$52;
      var $53=$atmp2;
      var $54=(($53)|0);
      $bz3=$54;
      var $55=$atmp3;
      var $56=(($55)|0);
      $bz4=$56;
      var $57=$bz3;
      var $58=$bz4;
      var $59=((($57)+($58))|0);
      var $60=((($59)*(9633))|0);
      $bz5=$60;
      var $61=$bz1;
      var $62=((($61)*(-7373))|0);
      $az1=$62;
      var $63=$bz2;
      var $64=((($63)*(-20995))|0);
      $az2=$64;
      var $65=$bz3;
      var $66=((($65)*(-16069))|0);
      var $67=$bz5;
      var $68=((($66)+($67))|0);
      $az3=$68;
      var $69=$bz4;
      var $70=((($69)*(-3196))|0);
      var $71=$bz5;
      var $72=((($70)+($71))|0);
      $az4=$72;
      var $73=$az1;
      var $74=(($73)|0);
      var $75=$az3;
      var $76=((($74)+($75))|0);
      $btmp0=$76;
      var $77=$az2;
      var $78=(($77)|0);
      var $79=$az4;
      var $80=((($78)+($79))|0);
      $btmp1=$80;
      var $81=$atmp2;
      var $82=((($81)*(25172))|0);
      var $83=$az2;
      var $84=((($82)+($83))|0);
      var $85=$az3;
      var $86=((($84)+($85))|0);
      $btmp2=$86;
      var $87=$atmp3;
      var $88=((($87)*(12299))|0);
      var $89=$az1;
      var $90=((($88)+($89))|0);
      var $91=$az4;
      var $92=((($90)+($91))|0);
      $btmp3=$92;
      var $93=$tmp10;
      var $94=$btmp3;
      var $95=((($93)+($94))|0);
      var $96=((($95)+(33554432))|0);
      var $97=((($96)+(131072))|0);
      var $98=$97 >> 18;
      $i=$98;
      var $99=$i;
      var $100=(($99)>>>0) > 255;
      if ($100) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $102=$i;
      var $103=$102 ^ -1;
      var $104=$103 >> 31;
      var $105=$104 & 255;
      var $109 = $105;__label__ = 5; break;
    case 4: 
      var $107=$i;
      var $109 = $107;__label__ = 5; break;
    case 5: 
      var $109;
      var $110=(($109) & 255);
      var $111=$1;
      var $112=(($111)|0);
      HEAP8[($112)]=$110;
      var $113=$tmp10;
      var $114=$btmp3;
      var $115=((($113)-($114))|0);
      var $116=((($115)+(33554432))|0);
      var $117=((($116)+(131072))|0);
      var $118=$117 >> 18;
      $i=$118;
      var $119=$i;
      var $120=(($119)>>>0) > 255;
      if ($120) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $122=$i;
      var $123=$122 ^ -1;
      var $124=$123 >> 31;
      var $125=$124 & 255;
      var $129 = $125;__label__ = 8; break;
    case 7: 
      var $127=$i;
      var $129 = $127;__label__ = 8; break;
    case 8: 
      var $129;
      var $130=(($129) & 255);
      var $131=$1;
      var $132=(($131+56)|0);
      HEAP8[($132)]=$130;
      var $133=$tmp11;
      var $134=$btmp2;
      var $135=((($133)+($134))|0);
      var $136=((($135)+(33554432))|0);
      var $137=((($136)+(131072))|0);
      var $138=$137 >> 18;
      $i=$138;
      var $139=$i;
      var $140=(($139)>>>0) > 255;
      if ($140) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $142=$i;
      var $143=$142 ^ -1;
      var $144=$143 >> 31;
      var $145=$144 & 255;
      var $149 = $145;__label__ = 11; break;
    case 10: 
      var $147=$i;
      var $149 = $147;__label__ = 11; break;
    case 11: 
      var $149;
      var $150=(($149) & 255);
      var $151=$1;
      var $152=(($151+8)|0);
      HEAP8[($152)]=$150;
      var $153=$tmp11;
      var $154=$btmp2;
      var $155=((($153)-($154))|0);
      var $156=((($155)+(33554432))|0);
      var $157=((($156)+(131072))|0);
      var $158=$157 >> 18;
      $i=$158;
      var $159=$i;
      var $160=(($159)>>>0) > 255;
      if ($160) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $162=$i;
      var $163=$162 ^ -1;
      var $164=$163 >> 31;
      var $165=$164 & 255;
      var $169 = $165;__label__ = 14; break;
    case 13: 
      var $167=$i;
      var $169 = $167;__label__ = 14; break;
    case 14: 
      var $169;
      var $170=(($169) & 255);
      var $171=$1;
      var $172=(($171+48)|0);
      HEAP8[($172)]=$170;
      var $173=$tmp12;
      var $174=$btmp1;
      var $175=((($173)+($174))|0);
      var $176=((($175)+(33554432))|0);
      var $177=((($176)+(131072))|0);
      var $178=$177 >> 18;
      $i=$178;
      var $179=$i;
      var $180=(($179)>>>0) > 255;
      if ($180) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $182=$i;
      var $183=$182 ^ -1;
      var $184=$183 >> 31;
      var $185=$184 & 255;
      var $189 = $185;__label__ = 17; break;
    case 16: 
      var $187=$i;
      var $189 = $187;__label__ = 17; break;
    case 17: 
      var $189;
      var $190=(($189) & 255);
      var $191=$1;
      var $192=(($191+16)|0);
      HEAP8[($192)]=$190;
      var $193=$tmp12;
      var $194=$btmp1;
      var $195=((($193)-($194))|0);
      var $196=((($195)+(33554432))|0);
      var $197=((($196)+(131072))|0);
      var $198=$197 >> 18;
      $i=$198;
      var $199=$i;
      var $200=(($199)>>>0) > 255;
      if ($200) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $202=$i;
      var $203=$202 ^ -1;
      var $204=$203 >> 31;
      var $205=$204 & 255;
      var $209 = $205;__label__ = 20; break;
    case 19: 
      var $207=$i;
      var $209 = $207;__label__ = 20; break;
    case 20: 
      var $209;
      var $210=(($209) & 255);
      var $211=$1;
      var $212=(($211+40)|0);
      HEAP8[($212)]=$210;
      var $213=$tmp13;
      var $214=$btmp0;
      var $215=((($213)+($214))|0);
      var $216=((($215)+(33554432))|0);
      var $217=((($216)+(131072))|0);
      var $218=$217 >> 18;
      $i=$218;
      var $219=$i;
      var $220=(($219)>>>0) > 255;
      if ($220) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $222=$i;
      var $223=$222 ^ -1;
      var $224=$223 >> 31;
      var $225=$224 & 255;
      var $229 = $225;__label__ = 23; break;
    case 22: 
      var $227=$i;
      var $229 = $227;__label__ = 23; break;
    case 23: 
      var $229;
      var $230=(($229) & 255);
      var $231=$1;
      var $232=(($231+24)|0);
      HEAP8[($232)]=$230;
      var $233=$tmp13;
      var $234=$btmp0;
      var $235=((($233)-($234))|0);
      var $236=((($235)+(33554432))|0);
      var $237=((($236)+(131072))|0);
      var $238=$237 >> 18;
      $i=$238;
      var $239=$i;
      var $240=(($239)>>>0) > 255;
      if ($240) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $242=$i;
      var $243=$242 ^ -1;
      var $244=$243 >> 31;
      var $245=$244 & 255;
      var $249 = $245;__label__ = 26; break;
    case 25: 
      var $247=$i;
      var $249 = $247;__label__ = 26; break;
    case 26: 
      var $249;
      var $250=(($249) & 255);
      var $251=$1;
      var $252=(($251+32)|0);
      HEAP8[($252)]=$250;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi5EE4idctEPhPKi["X"]=1;

function __ZN4jpgd3ColILi6EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $z2;
      var $z3;
      var $z1;
      var $tmp2;
      var $tmp3;
      var $tmp0;
      var $tmp1;
      var $tmp10;
      var $tmp13;
      var $tmp11;
      var $tmp12;
      var $atmp0;
      var $atmp1;
      var $atmp2;
      var $atmp3;
      var $bz1;
      var $bz2;
      var $bz3;
      var $bz4;
      var $bz5;
      var $az1;
      var $az2;
      var $az3;
      var $az4;
      var $btmp0;
      var $btmp1;
      var $btmp2;
      var $btmp3;
      var $i;
      $1=$pDst_ptr;
      $2=$pTemp;
      var $3=$2;
      var $4=(($3+64)|0);
      var $5=HEAP32[(($4)>>2)];
      $z2=$5;
      $z3=0;
      var $6=$z2;
      var $7=(($6)|0);
      var $8=((($7)*(4433))|0);
      $z1=$8;
      var $9=$z1;
      var $10=(($9)|0);
      $tmp2=$10;
      var $11=$z1;
      var $12=$z2;
      var $13=((($12)*(6270))|0);
      var $14=((($11)+($13))|0);
      $tmp3=$14;
      var $15=$2;
      var $16=(($15)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=$2;
      var $19=(($18+128)|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=((($17)+($20))|0);
      var $22=$21 << 13;
      $tmp0=$22;
      var $23=$2;
      var $24=(($23)|0);
      var $25=HEAP32[(($24)>>2)];
      var $26=$2;
      var $27=(($26+128)|0);
      var $28=HEAP32[(($27)>>2)];
      var $29=((($25)-($28))|0);
      var $30=$29 << 13;
      $tmp1=$30;
      var $31=$tmp0;
      var $32=$tmp3;
      var $33=((($31)+($32))|0);
      $tmp10=$33;
      var $34=$tmp0;
      var $35=$tmp3;
      var $36=((($34)-($35))|0);
      $tmp13=$36;
      var $37=$tmp1;
      var $38=$tmp2;
      var $39=((($37)+($38))|0);
      $tmp11=$39;
      var $40=$tmp1;
      var $41=$tmp2;
      var $42=((($40)-($41))|0);
      $tmp12=$42;
      $atmp0=0;
      var $43=$2;
      var $44=(($43+160)|0);
      var $45=HEAP32[(($44)>>2)];
      $atmp1=$45;
      var $46=$2;
      var $47=(($46+96)|0);
      var $48=HEAP32[(($47)>>2)];
      $atmp2=$48;
      var $49=$2;
      var $50=(($49+32)|0);
      var $51=HEAP32[(($50)>>2)];
      $atmp3=$51;
      var $52=$atmp3;
      var $53=(($52)|0);
      $bz1=$53;
      var $54=$atmp1;
      var $55=$atmp2;
      var $56=((($54)+($55))|0);
      $bz2=$56;
      var $57=$atmp2;
      var $58=(($57)|0);
      $bz3=$58;
      var $59=$atmp1;
      var $60=$atmp3;
      var $61=((($59)+($60))|0);
      $bz4=$61;
      var $62=$bz3;
      var $63=$bz4;
      var $64=((($62)+($63))|0);
      var $65=((($64)*(9633))|0);
      $bz5=$65;
      var $66=$bz1;
      var $67=((($66)*(-7373))|0);
      $az1=$67;
      var $68=$bz2;
      var $69=((($68)*(-20995))|0);
      $az2=$69;
      var $70=$bz3;
      var $71=((($70)*(-16069))|0);
      var $72=$bz5;
      var $73=((($71)+($72))|0);
      $az3=$73;
      var $74=$bz4;
      var $75=((($74)*(-3196))|0);
      var $76=$bz5;
      var $77=((($75)+($76))|0);
      $az4=$77;
      var $78=$az1;
      var $79=(($78)|0);
      var $80=$az3;
      var $81=((($79)+($80))|0);
      $btmp0=$81;
      var $82=$atmp1;
      var $83=((($82)*(16819))|0);
      var $84=$az2;
      var $85=((($83)+($84))|0);
      var $86=$az4;
      var $87=((($85)+($86))|0);
      $btmp1=$87;
      var $88=$atmp2;
      var $89=((($88)*(25172))|0);
      var $90=$az2;
      var $91=((($89)+($90))|0);
      var $92=$az3;
      var $93=((($91)+($92))|0);
      $btmp2=$93;
      var $94=$atmp3;
      var $95=((($94)*(12299))|0);
      var $96=$az1;
      var $97=((($95)+($96))|0);
      var $98=$az4;
      var $99=((($97)+($98))|0);
      $btmp3=$99;
      var $100=$tmp10;
      var $101=$btmp3;
      var $102=((($100)+($101))|0);
      var $103=((($102)+(33554432))|0);
      var $104=((($103)+(131072))|0);
      var $105=$104 >> 18;
      $i=$105;
      var $106=$i;
      var $107=(($106)>>>0) > 255;
      if ($107) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $109=$i;
      var $110=$109 ^ -1;
      var $111=$110 >> 31;
      var $112=$111 & 255;
      var $116 = $112;__label__ = 5; break;
    case 4: 
      var $114=$i;
      var $116 = $114;__label__ = 5; break;
    case 5: 
      var $116;
      var $117=(($116) & 255);
      var $118=$1;
      var $119=(($118)|0);
      HEAP8[($119)]=$117;
      var $120=$tmp10;
      var $121=$btmp3;
      var $122=((($120)-($121))|0);
      var $123=((($122)+(33554432))|0);
      var $124=((($123)+(131072))|0);
      var $125=$124 >> 18;
      $i=$125;
      var $126=$i;
      var $127=(($126)>>>0) > 255;
      if ($127) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $129=$i;
      var $130=$129 ^ -1;
      var $131=$130 >> 31;
      var $132=$131 & 255;
      var $136 = $132;__label__ = 8; break;
    case 7: 
      var $134=$i;
      var $136 = $134;__label__ = 8; break;
    case 8: 
      var $136;
      var $137=(($136) & 255);
      var $138=$1;
      var $139=(($138+56)|0);
      HEAP8[($139)]=$137;
      var $140=$tmp11;
      var $141=$btmp2;
      var $142=((($140)+($141))|0);
      var $143=((($142)+(33554432))|0);
      var $144=((($143)+(131072))|0);
      var $145=$144 >> 18;
      $i=$145;
      var $146=$i;
      var $147=(($146)>>>0) > 255;
      if ($147) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $149=$i;
      var $150=$149 ^ -1;
      var $151=$150 >> 31;
      var $152=$151 & 255;
      var $156 = $152;__label__ = 11; break;
    case 10: 
      var $154=$i;
      var $156 = $154;__label__ = 11; break;
    case 11: 
      var $156;
      var $157=(($156) & 255);
      var $158=$1;
      var $159=(($158+8)|0);
      HEAP8[($159)]=$157;
      var $160=$tmp11;
      var $161=$btmp2;
      var $162=((($160)-($161))|0);
      var $163=((($162)+(33554432))|0);
      var $164=((($163)+(131072))|0);
      var $165=$164 >> 18;
      $i=$165;
      var $166=$i;
      var $167=(($166)>>>0) > 255;
      if ($167) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $169=$i;
      var $170=$169 ^ -1;
      var $171=$170 >> 31;
      var $172=$171 & 255;
      var $176 = $172;__label__ = 14; break;
    case 13: 
      var $174=$i;
      var $176 = $174;__label__ = 14; break;
    case 14: 
      var $176;
      var $177=(($176) & 255);
      var $178=$1;
      var $179=(($178+48)|0);
      HEAP8[($179)]=$177;
      var $180=$tmp12;
      var $181=$btmp1;
      var $182=((($180)+($181))|0);
      var $183=((($182)+(33554432))|0);
      var $184=((($183)+(131072))|0);
      var $185=$184 >> 18;
      $i=$185;
      var $186=$i;
      var $187=(($186)>>>0) > 255;
      if ($187) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $189=$i;
      var $190=$189 ^ -1;
      var $191=$190 >> 31;
      var $192=$191 & 255;
      var $196 = $192;__label__ = 17; break;
    case 16: 
      var $194=$i;
      var $196 = $194;__label__ = 17; break;
    case 17: 
      var $196;
      var $197=(($196) & 255);
      var $198=$1;
      var $199=(($198+16)|0);
      HEAP8[($199)]=$197;
      var $200=$tmp12;
      var $201=$btmp1;
      var $202=((($200)-($201))|0);
      var $203=((($202)+(33554432))|0);
      var $204=((($203)+(131072))|0);
      var $205=$204 >> 18;
      $i=$205;
      var $206=$i;
      var $207=(($206)>>>0) > 255;
      if ($207) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $209=$i;
      var $210=$209 ^ -1;
      var $211=$210 >> 31;
      var $212=$211 & 255;
      var $216 = $212;__label__ = 20; break;
    case 19: 
      var $214=$i;
      var $216 = $214;__label__ = 20; break;
    case 20: 
      var $216;
      var $217=(($216) & 255);
      var $218=$1;
      var $219=(($218+40)|0);
      HEAP8[($219)]=$217;
      var $220=$tmp13;
      var $221=$btmp0;
      var $222=((($220)+($221))|0);
      var $223=((($222)+(33554432))|0);
      var $224=((($223)+(131072))|0);
      var $225=$224 >> 18;
      $i=$225;
      var $226=$i;
      var $227=(($226)>>>0) > 255;
      if ($227) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $229=$i;
      var $230=$229 ^ -1;
      var $231=$230 >> 31;
      var $232=$231 & 255;
      var $236 = $232;__label__ = 23; break;
    case 22: 
      var $234=$i;
      var $236 = $234;__label__ = 23; break;
    case 23: 
      var $236;
      var $237=(($236) & 255);
      var $238=$1;
      var $239=(($238+24)|0);
      HEAP8[($239)]=$237;
      var $240=$tmp13;
      var $241=$btmp0;
      var $242=((($240)-($241))|0);
      var $243=((($242)+(33554432))|0);
      var $244=((($243)+(131072))|0);
      var $245=$244 >> 18;
      $i=$245;
      var $246=$i;
      var $247=(($246)>>>0) > 255;
      if ($247) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $249=$i;
      var $250=$249 ^ -1;
      var $251=$250 >> 31;
      var $252=$251 & 255;
      var $256 = $252;__label__ = 26; break;
    case 25: 
      var $254=$i;
      var $256 = $254;__label__ = 26; break;
    case 26: 
      var $256;
      var $257=(($256) & 255);
      var $258=$1;
      var $259=(($258+32)|0);
      HEAP8[($259)]=$257;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi6EE4idctEPhPKi["X"]=1;

function __ZN4jpgd3ColILi7EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $z2;
      var $z3;
      var $z1;
      var $tmp2;
      var $tmp3;
      var $tmp0;
      var $tmp1;
      var $tmp10;
      var $tmp13;
      var $tmp11;
      var $tmp12;
      var $atmp0;
      var $atmp1;
      var $atmp2;
      var $atmp3;
      var $bz1;
      var $bz2;
      var $bz3;
      var $bz4;
      var $bz5;
      var $az1;
      var $az2;
      var $az3;
      var $az4;
      var $btmp0;
      var $btmp1;
      var $btmp2;
      var $btmp3;
      var $i;
      $1=$pDst_ptr;
      $2=$pTemp;
      var $3=$2;
      var $4=(($3+64)|0);
      var $5=HEAP32[(($4)>>2)];
      $z2=$5;
      var $6=$2;
      var $7=(($6+192)|0);
      var $8=HEAP32[(($7)>>2)];
      $z3=$8;
      var $9=$z2;
      var $10=$z3;
      var $11=((($9)+($10))|0);
      var $12=((($11)*(4433))|0);
      $z1=$12;
      var $13=$z1;
      var $14=$z3;
      var $15=((($14)*(-15137))|0);
      var $16=((($13)+($15))|0);
      $tmp2=$16;
      var $17=$z1;
      var $18=$z2;
      var $19=((($18)*(6270))|0);
      var $20=((($17)+($19))|0);
      $tmp3=$20;
      var $21=$2;
      var $22=(($21)|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=$2;
      var $25=(($24+128)|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=((($23)+($26))|0);
      var $28=$27 << 13;
      $tmp0=$28;
      var $29=$2;
      var $30=(($29)|0);
      var $31=HEAP32[(($30)>>2)];
      var $32=$2;
      var $33=(($32+128)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=((($31)-($34))|0);
      var $36=$35 << 13;
      $tmp1=$36;
      var $37=$tmp0;
      var $38=$tmp3;
      var $39=((($37)+($38))|0);
      $tmp10=$39;
      var $40=$tmp0;
      var $41=$tmp3;
      var $42=((($40)-($41))|0);
      $tmp13=$42;
      var $43=$tmp1;
      var $44=$tmp2;
      var $45=((($43)+($44))|0);
      $tmp11=$45;
      var $46=$tmp1;
      var $47=$tmp2;
      var $48=((($46)-($47))|0);
      $tmp12=$48;
      $atmp0=0;
      var $49=$2;
      var $50=(($49+160)|0);
      var $51=HEAP32[(($50)>>2)];
      $atmp1=$51;
      var $52=$2;
      var $53=(($52+96)|0);
      var $54=HEAP32[(($53)>>2)];
      $atmp2=$54;
      var $55=$2;
      var $56=(($55+32)|0);
      var $57=HEAP32[(($56)>>2)];
      $atmp3=$57;
      var $58=$atmp3;
      var $59=(($58)|0);
      $bz1=$59;
      var $60=$atmp1;
      var $61=$atmp2;
      var $62=((($60)+($61))|0);
      $bz2=$62;
      var $63=$atmp2;
      var $64=(($63)|0);
      $bz3=$64;
      var $65=$atmp1;
      var $66=$atmp3;
      var $67=((($65)+($66))|0);
      $bz4=$67;
      var $68=$bz3;
      var $69=$bz4;
      var $70=((($68)+($69))|0);
      var $71=((($70)*(9633))|0);
      $bz5=$71;
      var $72=$bz1;
      var $73=((($72)*(-7373))|0);
      $az1=$73;
      var $74=$bz2;
      var $75=((($74)*(-20995))|0);
      $az2=$75;
      var $76=$bz3;
      var $77=((($76)*(-16069))|0);
      var $78=$bz5;
      var $79=((($77)+($78))|0);
      $az3=$79;
      var $80=$bz4;
      var $81=((($80)*(-3196))|0);
      var $82=$bz5;
      var $83=((($81)+($82))|0);
      $az4=$83;
      var $84=$az1;
      var $85=(($84)|0);
      var $86=$az3;
      var $87=((($85)+($86))|0);
      $btmp0=$87;
      var $88=$atmp1;
      var $89=((($88)*(16819))|0);
      var $90=$az2;
      var $91=((($89)+($90))|0);
      var $92=$az4;
      var $93=((($91)+($92))|0);
      $btmp1=$93;
      var $94=$atmp2;
      var $95=((($94)*(25172))|0);
      var $96=$az2;
      var $97=((($95)+($96))|0);
      var $98=$az3;
      var $99=((($97)+($98))|0);
      $btmp2=$99;
      var $100=$atmp3;
      var $101=((($100)*(12299))|0);
      var $102=$az1;
      var $103=((($101)+($102))|0);
      var $104=$az4;
      var $105=((($103)+($104))|0);
      $btmp3=$105;
      var $106=$tmp10;
      var $107=$btmp3;
      var $108=((($106)+($107))|0);
      var $109=((($108)+(33554432))|0);
      var $110=((($109)+(131072))|0);
      var $111=$110 >> 18;
      $i=$111;
      var $112=$i;
      var $113=(($112)>>>0) > 255;
      if ($113) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $115=$i;
      var $116=$115 ^ -1;
      var $117=$116 >> 31;
      var $118=$117 & 255;
      var $122 = $118;__label__ = 5; break;
    case 4: 
      var $120=$i;
      var $122 = $120;__label__ = 5; break;
    case 5: 
      var $122;
      var $123=(($122) & 255);
      var $124=$1;
      var $125=(($124)|0);
      HEAP8[($125)]=$123;
      var $126=$tmp10;
      var $127=$btmp3;
      var $128=((($126)-($127))|0);
      var $129=((($128)+(33554432))|0);
      var $130=((($129)+(131072))|0);
      var $131=$130 >> 18;
      $i=$131;
      var $132=$i;
      var $133=(($132)>>>0) > 255;
      if ($133) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $135=$i;
      var $136=$135 ^ -1;
      var $137=$136 >> 31;
      var $138=$137 & 255;
      var $142 = $138;__label__ = 8; break;
    case 7: 
      var $140=$i;
      var $142 = $140;__label__ = 8; break;
    case 8: 
      var $142;
      var $143=(($142) & 255);
      var $144=$1;
      var $145=(($144+56)|0);
      HEAP8[($145)]=$143;
      var $146=$tmp11;
      var $147=$btmp2;
      var $148=((($146)+($147))|0);
      var $149=((($148)+(33554432))|0);
      var $150=((($149)+(131072))|0);
      var $151=$150 >> 18;
      $i=$151;
      var $152=$i;
      var $153=(($152)>>>0) > 255;
      if ($153) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $155=$i;
      var $156=$155 ^ -1;
      var $157=$156 >> 31;
      var $158=$157 & 255;
      var $162 = $158;__label__ = 11; break;
    case 10: 
      var $160=$i;
      var $162 = $160;__label__ = 11; break;
    case 11: 
      var $162;
      var $163=(($162) & 255);
      var $164=$1;
      var $165=(($164+8)|0);
      HEAP8[($165)]=$163;
      var $166=$tmp11;
      var $167=$btmp2;
      var $168=((($166)-($167))|0);
      var $169=((($168)+(33554432))|0);
      var $170=((($169)+(131072))|0);
      var $171=$170 >> 18;
      $i=$171;
      var $172=$i;
      var $173=(($172)>>>0) > 255;
      if ($173) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $175=$i;
      var $176=$175 ^ -1;
      var $177=$176 >> 31;
      var $178=$177 & 255;
      var $182 = $178;__label__ = 14; break;
    case 13: 
      var $180=$i;
      var $182 = $180;__label__ = 14; break;
    case 14: 
      var $182;
      var $183=(($182) & 255);
      var $184=$1;
      var $185=(($184+48)|0);
      HEAP8[($185)]=$183;
      var $186=$tmp12;
      var $187=$btmp1;
      var $188=((($186)+($187))|0);
      var $189=((($188)+(33554432))|0);
      var $190=((($189)+(131072))|0);
      var $191=$190 >> 18;
      $i=$191;
      var $192=$i;
      var $193=(($192)>>>0) > 255;
      if ($193) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $195=$i;
      var $196=$195 ^ -1;
      var $197=$196 >> 31;
      var $198=$197 & 255;
      var $202 = $198;__label__ = 17; break;
    case 16: 
      var $200=$i;
      var $202 = $200;__label__ = 17; break;
    case 17: 
      var $202;
      var $203=(($202) & 255);
      var $204=$1;
      var $205=(($204+16)|0);
      HEAP8[($205)]=$203;
      var $206=$tmp12;
      var $207=$btmp1;
      var $208=((($206)-($207))|0);
      var $209=((($208)+(33554432))|0);
      var $210=((($209)+(131072))|0);
      var $211=$210 >> 18;
      $i=$211;
      var $212=$i;
      var $213=(($212)>>>0) > 255;
      if ($213) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $215=$i;
      var $216=$215 ^ -1;
      var $217=$216 >> 31;
      var $218=$217 & 255;
      var $222 = $218;__label__ = 20; break;
    case 19: 
      var $220=$i;
      var $222 = $220;__label__ = 20; break;
    case 20: 
      var $222;
      var $223=(($222) & 255);
      var $224=$1;
      var $225=(($224+40)|0);
      HEAP8[($225)]=$223;
      var $226=$tmp13;
      var $227=$btmp0;
      var $228=((($226)+($227))|0);
      var $229=((($228)+(33554432))|0);
      var $230=((($229)+(131072))|0);
      var $231=$230 >> 18;
      $i=$231;
      var $232=$i;
      var $233=(($232)>>>0) > 255;
      if ($233) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $235=$i;
      var $236=$235 ^ -1;
      var $237=$236 >> 31;
      var $238=$237 & 255;
      var $242 = $238;__label__ = 23; break;
    case 22: 
      var $240=$i;
      var $242 = $240;__label__ = 23; break;
    case 23: 
      var $242;
      var $243=(($242) & 255);
      var $244=$1;
      var $245=(($244+24)|0);
      HEAP8[($245)]=$243;
      var $246=$tmp13;
      var $247=$btmp0;
      var $248=((($246)-($247))|0);
      var $249=((($248)+(33554432))|0);
      var $250=((($249)+(131072))|0);
      var $251=$250 >> 18;
      $i=$251;
      var $252=$i;
      var $253=(($252)>>>0) > 255;
      if ($253) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $255=$i;
      var $256=$255 ^ -1;
      var $257=$256 >> 31;
      var $258=$257 & 255;
      var $262 = $258;__label__ = 26; break;
    case 25: 
      var $260=$i;
      var $262 = $260;__label__ = 26; break;
    case 26: 
      var $262;
      var $263=(($262) & 255);
      var $264=$1;
      var $265=(($264+32)|0);
      HEAP8[($265)]=$263;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi7EE4idctEPhPKi["X"]=1;

function __ZN4jpgd3ColILi8EE4idctEPhPKi($pDst_ptr, $pTemp) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $z2;
      var $z3;
      var $z1;
      var $tmp2;
      var $tmp3;
      var $tmp0;
      var $tmp1;
      var $tmp10;
      var $tmp13;
      var $tmp11;
      var $tmp12;
      var $atmp0;
      var $atmp1;
      var $atmp2;
      var $atmp3;
      var $bz1;
      var $bz2;
      var $bz3;
      var $bz4;
      var $bz5;
      var $az1;
      var $az2;
      var $az3;
      var $az4;
      var $btmp0;
      var $btmp1;
      var $btmp2;
      var $btmp3;
      var $i;
      $1=$pDst_ptr;
      $2=$pTemp;
      var $3=$2;
      var $4=(($3+64)|0);
      var $5=HEAP32[(($4)>>2)];
      $z2=$5;
      var $6=$2;
      var $7=(($6+192)|0);
      var $8=HEAP32[(($7)>>2)];
      $z3=$8;
      var $9=$z2;
      var $10=$z3;
      var $11=((($9)+($10))|0);
      var $12=((($11)*(4433))|0);
      $z1=$12;
      var $13=$z1;
      var $14=$z3;
      var $15=((($14)*(-15137))|0);
      var $16=((($13)+($15))|0);
      $tmp2=$16;
      var $17=$z1;
      var $18=$z2;
      var $19=((($18)*(6270))|0);
      var $20=((($17)+($19))|0);
      $tmp3=$20;
      var $21=$2;
      var $22=(($21)|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=$2;
      var $25=(($24+128)|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=((($23)+($26))|0);
      var $28=$27 << 13;
      $tmp0=$28;
      var $29=$2;
      var $30=(($29)|0);
      var $31=HEAP32[(($30)>>2)];
      var $32=$2;
      var $33=(($32+128)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=((($31)-($34))|0);
      var $36=$35 << 13;
      $tmp1=$36;
      var $37=$tmp0;
      var $38=$tmp3;
      var $39=((($37)+($38))|0);
      $tmp10=$39;
      var $40=$tmp0;
      var $41=$tmp3;
      var $42=((($40)-($41))|0);
      $tmp13=$42;
      var $43=$tmp1;
      var $44=$tmp2;
      var $45=((($43)+($44))|0);
      $tmp11=$45;
      var $46=$tmp1;
      var $47=$tmp2;
      var $48=((($46)-($47))|0);
      $tmp12=$48;
      var $49=$2;
      var $50=(($49+224)|0);
      var $51=HEAP32[(($50)>>2)];
      $atmp0=$51;
      var $52=$2;
      var $53=(($52+160)|0);
      var $54=HEAP32[(($53)>>2)];
      $atmp1=$54;
      var $55=$2;
      var $56=(($55+96)|0);
      var $57=HEAP32[(($56)>>2)];
      $atmp2=$57;
      var $58=$2;
      var $59=(($58+32)|0);
      var $60=HEAP32[(($59)>>2)];
      $atmp3=$60;
      var $61=$atmp0;
      var $62=$atmp3;
      var $63=((($61)+($62))|0);
      $bz1=$63;
      var $64=$atmp1;
      var $65=$atmp2;
      var $66=((($64)+($65))|0);
      $bz2=$66;
      var $67=$atmp0;
      var $68=$atmp2;
      var $69=((($67)+($68))|0);
      $bz3=$69;
      var $70=$atmp1;
      var $71=$atmp3;
      var $72=((($70)+($71))|0);
      $bz4=$72;
      var $73=$bz3;
      var $74=$bz4;
      var $75=((($73)+($74))|0);
      var $76=((($75)*(9633))|0);
      $bz5=$76;
      var $77=$bz1;
      var $78=((($77)*(-7373))|0);
      $az1=$78;
      var $79=$bz2;
      var $80=((($79)*(-20995))|0);
      $az2=$80;
      var $81=$bz3;
      var $82=((($81)*(-16069))|0);
      var $83=$bz5;
      var $84=((($82)+($83))|0);
      $az3=$84;
      var $85=$bz4;
      var $86=((($85)*(-3196))|0);
      var $87=$bz5;
      var $88=((($86)+($87))|0);
      $az4=$88;
      var $89=$atmp0;
      var $90=((($89)*(2446))|0);
      var $91=$az1;
      var $92=((($90)+($91))|0);
      var $93=$az3;
      var $94=((($92)+($93))|0);
      $btmp0=$94;
      var $95=$atmp1;
      var $96=((($95)*(16819))|0);
      var $97=$az2;
      var $98=((($96)+($97))|0);
      var $99=$az4;
      var $100=((($98)+($99))|0);
      $btmp1=$100;
      var $101=$atmp2;
      var $102=((($101)*(25172))|0);
      var $103=$az2;
      var $104=((($102)+($103))|0);
      var $105=$az3;
      var $106=((($104)+($105))|0);
      $btmp2=$106;
      var $107=$atmp3;
      var $108=((($107)*(12299))|0);
      var $109=$az1;
      var $110=((($108)+($109))|0);
      var $111=$az4;
      var $112=((($110)+($111))|0);
      $btmp3=$112;
      var $113=$tmp10;
      var $114=$btmp3;
      var $115=((($113)+($114))|0);
      var $116=((($115)+(33554432))|0);
      var $117=((($116)+(131072))|0);
      var $118=$117 >> 18;
      $i=$118;
      var $119=$i;
      var $120=(($119)>>>0) > 255;
      if ($120) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $122=$i;
      var $123=$122 ^ -1;
      var $124=$123 >> 31;
      var $125=$124 & 255;
      var $129 = $125;__label__ = 5; break;
    case 4: 
      var $127=$i;
      var $129 = $127;__label__ = 5; break;
    case 5: 
      var $129;
      var $130=(($129) & 255);
      var $131=$1;
      var $132=(($131)|0);
      HEAP8[($132)]=$130;
      var $133=$tmp10;
      var $134=$btmp3;
      var $135=((($133)-($134))|0);
      var $136=((($135)+(33554432))|0);
      var $137=((($136)+(131072))|0);
      var $138=$137 >> 18;
      $i=$138;
      var $139=$i;
      var $140=(($139)>>>0) > 255;
      if ($140) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $142=$i;
      var $143=$142 ^ -1;
      var $144=$143 >> 31;
      var $145=$144 & 255;
      var $149 = $145;__label__ = 8; break;
    case 7: 
      var $147=$i;
      var $149 = $147;__label__ = 8; break;
    case 8: 
      var $149;
      var $150=(($149) & 255);
      var $151=$1;
      var $152=(($151+56)|0);
      HEAP8[($152)]=$150;
      var $153=$tmp11;
      var $154=$btmp2;
      var $155=((($153)+($154))|0);
      var $156=((($155)+(33554432))|0);
      var $157=((($156)+(131072))|0);
      var $158=$157 >> 18;
      $i=$158;
      var $159=$i;
      var $160=(($159)>>>0) > 255;
      if ($160) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      var $162=$i;
      var $163=$162 ^ -1;
      var $164=$163 >> 31;
      var $165=$164 & 255;
      var $169 = $165;__label__ = 11; break;
    case 10: 
      var $167=$i;
      var $169 = $167;__label__ = 11; break;
    case 11: 
      var $169;
      var $170=(($169) & 255);
      var $171=$1;
      var $172=(($171+8)|0);
      HEAP8[($172)]=$170;
      var $173=$tmp11;
      var $174=$btmp2;
      var $175=((($173)-($174))|0);
      var $176=((($175)+(33554432))|0);
      var $177=((($176)+(131072))|0);
      var $178=$177 >> 18;
      $i=$178;
      var $179=$i;
      var $180=(($179)>>>0) > 255;
      if ($180) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $182=$i;
      var $183=$182 ^ -1;
      var $184=$183 >> 31;
      var $185=$184 & 255;
      var $189 = $185;__label__ = 14; break;
    case 13: 
      var $187=$i;
      var $189 = $187;__label__ = 14; break;
    case 14: 
      var $189;
      var $190=(($189) & 255);
      var $191=$1;
      var $192=(($191+48)|0);
      HEAP8[($192)]=$190;
      var $193=$tmp12;
      var $194=$btmp1;
      var $195=((($193)+($194))|0);
      var $196=((($195)+(33554432))|0);
      var $197=((($196)+(131072))|0);
      var $198=$197 >> 18;
      $i=$198;
      var $199=$i;
      var $200=(($199)>>>0) > 255;
      if ($200) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $202=$i;
      var $203=$202 ^ -1;
      var $204=$203 >> 31;
      var $205=$204 & 255;
      var $209 = $205;__label__ = 17; break;
    case 16: 
      var $207=$i;
      var $209 = $207;__label__ = 17; break;
    case 17: 
      var $209;
      var $210=(($209) & 255);
      var $211=$1;
      var $212=(($211+16)|0);
      HEAP8[($212)]=$210;
      var $213=$tmp12;
      var $214=$btmp1;
      var $215=((($213)-($214))|0);
      var $216=((($215)+(33554432))|0);
      var $217=((($216)+(131072))|0);
      var $218=$217 >> 18;
      $i=$218;
      var $219=$i;
      var $220=(($219)>>>0) > 255;
      if ($220) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $222=$i;
      var $223=$222 ^ -1;
      var $224=$223 >> 31;
      var $225=$224 & 255;
      var $229 = $225;__label__ = 20; break;
    case 19: 
      var $227=$i;
      var $229 = $227;__label__ = 20; break;
    case 20: 
      var $229;
      var $230=(($229) & 255);
      var $231=$1;
      var $232=(($231+40)|0);
      HEAP8[($232)]=$230;
      var $233=$tmp13;
      var $234=$btmp0;
      var $235=((($233)+($234))|0);
      var $236=((($235)+(33554432))|0);
      var $237=((($236)+(131072))|0);
      var $238=$237 >> 18;
      $i=$238;
      var $239=$i;
      var $240=(($239)>>>0) > 255;
      if ($240) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $242=$i;
      var $243=$242 ^ -1;
      var $244=$243 >> 31;
      var $245=$244 & 255;
      var $249 = $245;__label__ = 23; break;
    case 22: 
      var $247=$i;
      var $249 = $247;__label__ = 23; break;
    case 23: 
      var $249;
      var $250=(($249) & 255);
      var $251=$1;
      var $252=(($251+24)|0);
      HEAP8[($252)]=$250;
      var $253=$tmp13;
      var $254=$btmp0;
      var $255=((($253)-($254))|0);
      var $256=((($255)+(33554432))|0);
      var $257=((($256)+(131072))|0);
      var $258=$257 >> 18;
      $i=$258;
      var $259=$i;
      var $260=(($259)>>>0) > 255;
      if ($260) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $262=$i;
      var $263=$262 ^ -1;
      var $264=$263 >> 31;
      var $265=$264 & 255;
      var $269 = $265;__label__ = 26; break;
    case 25: 
      var $267=$i;
      var $269 = $267;__label__ = 26; break;
    case 26: 
      var $269;
      var $270=(($269) & 255);
      var $271=$1;
      var $272=(($271+32)|0);
      HEAP8[($272)]=$270;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd3ColILi8EE4idctEPhPKi["X"]=1;

function __ZN4jpgd12jpeg_decoder10word_clearEPvtj($this, $p, $c, $n) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $pD;
      var $l;
      var $h;
      $1=$this;
      $2=$p;
      $3=$c;
      $4=$n;
      var $5=$1;
      var $6=$2;
      $pD=$6;
      var $7=$3;
      var $8=(($7)&65535);
      var $9=$8 & 255;
      var $10=(($9) & 255);
      $l=$10;
      var $11=$3;
      var $12=(($11)&65535);
      var $13=$12 >> 8;
      var $14=$13 & 255;
      var $15=(($14) & 255);
      $h=$15;
      __label__ = 3; break;
    case 3: 
      var $17=$4;
      var $18=(($17)|0)!=0;
      if ($18) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      var $20=$l;
      var $21=$pD;
      var $22=(($21)|0);
      HEAP8[($22)]=$20;
      var $23=$h;
      var $24=$pD;
      var $25=(($24+1)|0);
      HEAP8[($25)]=$23;
      var $26=$pD;
      var $27=(($26+2)|0);
      $pD=$27;
      var $28=$4;
      var $29=((($28)-(1))|0);
      $4=$29;
      __label__ = 3; break;
    case 5: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd8idct_4x4EPKsPh($pSrc_ptr, $pDst_ptr) {
  var __stackBase__  = STACKTOP; STACKTOP += 256; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $temp=__stackBase__;
      var $pTemp;
      var $pSrc;
      var $i;
      var $i1;
      $1=$pSrc_ptr;
      $2=$pDst_ptr;
      var $3=(($temp)|0);
      $pTemp=$3;
      var $4=$1;
      $pSrc=$4;
      $i=4;
      __label__ = 3; break;
    case 3: 
      var $6=$i;
      var $7=(($6)|0) > 0;
      if ($7) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $9=$pTemp;
      var $10=$pSrc;
      __ZN4jpgd3RowILi4EE4idctEPiPKs($9, $10);
      var $11=$pSrc;
      var $12=(($11+16)|0);
      $pSrc=$12;
      var $13=$pTemp;
      var $14=(($13+32)|0);
      $pTemp=$14;
      __label__ = 5; break;
    case 5: 
      var $16=$i;
      var $17=((($16)-(1))|0);
      $i=$17;
      __label__ = 3; break;
    case 6: 
      var $19=(($temp)|0);
      $pTemp=$19;
      $i1=8;
      __label__ = 7; break;
    case 7: 
      var $21=$i1;
      var $22=(($21)|0) > 0;
      if ($22) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      var $24=$2;
      var $25=$pTemp;
      __ZN4jpgd3ColILi4EE4idctEPhPKi($24, $25);
      var $26=$pTemp;
      var $27=(($26+4)|0);
      $pTemp=$27;
      var $28=$2;
      var $29=(($28+1)|0);
      $2=$29;
      __label__ = 9; break;
    case 9: 
      var $31=$i1;
      var $32=((($31)-(1))|0);
      $i1=$32;
      __label__ = 7; break;
    case 10: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd8idct_4x4EPKsPh["X"]=1;

function __ZN4jpgd12jpeg_decoder15free_all_blocksEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $b;
      var $n;
      $1=$this;
      var $2=$1;
      var $3=(($2+52)|0);
      HEAP32[(($3)>>2)]=0;
      var $4=(($2+40)|0);
      var $5=HEAP32[(($4)>>2)];
      $b=$5;
      __label__ = 3; break;
    case 3: 
      var $7=$b;
      var $8=(($7)|0)!=0;
      if ($8) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      var $10=$b;
      var $11=(($10)|0);
      var $12=HEAP32[(($11)>>2)];
      $n=$12;
      var $13=$b;
      var $14=$13;
      __ZN4jpgdL9jpgd_freeEPv($14);
      var $15=$n;
      $b=$15;
      __label__ = 3; break;
    case 5: 
      var $17=(($2+40)|0);
      HEAP32[(($17)>>2)]=0;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgdL9jpgd_freeEPv($p) {
  ;
  var __label__;

  var $1;
  $1=$p;
  var $2=$1;
  _free($2);
  ;
  return;
}


function __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($this, $status) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$this;
  $2=$status;
  var $3=$1;
  var $4=$2;
  var $5=(($3+13296)|0);
  HEAP32[(($5)>>2)]=$4;
  __ZN4jpgd12jpeg_decoder15free_all_blocksEv($3);
  var $6=(($3)|0);
  var $7=(($6)|0);
  var $8=$2;
  _longjmp($7, $8);
  ;
  return;
}


function __ZN4jpgdL11jpgd_mallocEj($nSize) {
  ;
  var __label__;

  var $1;
  $1=$nSize;
  var $2=$1;
  var $3=_malloc($2);
  ;
  return $3;
}


function __ZN4jpgd12jpeg_decoder5allocEjb($this, $nSize, $zero) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $rv;
      var $b;
      var $capacity;
      var $b1;
      $1=$this;
      $2=$nSize;
      var $4=(($zero)&1);
      $3=$4;
      var $5=$1;
      var $6=$2;
      var $7=(($6)>>>0) > 1;
      if ($7) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $9=$2;
      var $12 = $9;__label__ = 5; break;
    case 4: 
      var $12 = 1;__label__ = 5; break;
    case 5: 
      var $12;
      var $13=((($12)+(3))|0);
      var $14=$13 & -4;
      $2=$14;
      $rv=0;
      var $15=(($5+40)|0);
      var $16=HEAP32[(($15)>>2)];
      $b=$16;
      __label__ = 6; break;
    case 6: 
      var $18=$b;
      var $19=(($18)|0)!=0;
      if ($19) { __label__ = 7; break; } else { __label__ = 11; break; }
    case 7: 
      var $21=$b;
      var $22=(($21+4)|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=$2;
      var $25=((($23)+($24))|0);
      var $26=$b;
      var $27=(($26+8)|0);
      var $28=HEAPU32[(($27)>>2)];
      var $29=(($25)>>>0) <= (($28)>>>0);
      if ($29) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $31=$b;
      var $32=(($31+12)|0);
      var $33=(($32)|0);
      var $34=$b;
      var $35=(($34+4)|0);
      var $36=HEAP32[(($35)>>2)];
      var $37=(($33+$36)|0);
      $rv=$37;
      var $38=$2;
      var $39=$b;
      var $40=(($39+4)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=((($41)+($38))|0);
      HEAP32[(($40)>>2)]=$42;
      __label__ = 11; break;
    case 9: 
      __label__ = 10; break;
    case 10: 
      var $45=$b;
      var $46=(($45)|0);
      var $47=HEAP32[(($46)>>2)];
      $b=$47;
      __label__ = 6; break;
    case 11: 
      var $49=$rv;
      var $50=(($49)|0)!=0;
      if ($50) { __label__ = 18; break; } else { __label__ = 12; break; }
    case 12: 
      var $52=$2;
      var $53=((($52)+(2047))|0);
      var $54=$53 & -2048;
      var $55=32512 > (($54)>>>0);
      if ($55) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      var $62 = 32512;__label__ = 15; break;
    case 14: 
      var $58=$2;
      var $59=((($58)+(2047))|0);
      var $60=$59 & -2048;
      var $62 = $60;__label__ = 15; break;
    case 15: 
      var $62;
      $capacity=$62;
      var $63=$capacity;
      var $64=((($63)+(16))|0);
      var $65=__ZN4jpgdL11jpgd_mallocEj($64);
      var $66=$65;
      $b1=$66;
      var $67=$b1;
      var $68=(($67)|0)!=0;
      if ($68) { __label__ = 17; break; } else { __label__ = 16; break; }
    case 16: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($5, -224);
      throw "Reached an unreachable!"
    case 17: 
      var $71=(($5+40)|0);
      var $72=HEAP32[(($71)>>2)];
      var $73=$b1;
      var $74=(($73)|0);
      HEAP32[(($74)>>2)]=$72;
      var $75=$b1;
      var $76=(($5+40)|0);
      HEAP32[(($76)>>2)]=$75;
      var $77=$2;
      var $78=$b1;
      var $79=(($78+4)|0);
      HEAP32[(($79)>>2)]=$77;
      var $80=$capacity;
      var $81=$b1;
      var $82=(($81+8)|0);
      HEAP32[(($82)>>2)]=$80;
      var $83=$b1;
      var $84=(($83+12)|0);
      var $85=(($84)|0);
      $rv=$85;
      __label__ = 18; break;
    case 18: 
      var $87=$3;
      var $88=(($87) & 1);
      if ($88) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      var $90=$rv;
      var $91=$2;
      _memset($90, 0, $91, 1);
      __label__ = 20; break;
    case 20: 
      var $93=$rv;
      ;
      return $93;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder5allocEjb["X"]=1;

function __ZN4jpgd12jpeg_decoder14prep_in_bufferEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $bytes_read;
      $1=$this;
      var $2=$1;
      var $3=(($2+492)|0);
      HEAP32[(($3)>>2)]=0;
      var $4=(($2+629)|0);
      var $5=(($4)|0);
      var $6=(($2+488)|0);
      HEAP32[(($6)>>2)]=$5;
      var $7=(($2+500)|0);
      var $8=HEAP8[($7)];
      var $9=(($8) & 1);
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __label__ = 12; break;
    case 4: 
      __label__ = 5; break;
    case 5: 
      var $13=(($2+52)|0);
      var $14=HEAP32[(($13)>>2)];
      var $15=$14;
      var $16=HEAP32[(($15)>>2)];
      var $17=(($16+8)|0);
      var $18=HEAP32[(($17)>>2)];
      var $19=(($2+629)|0);
      var $20=(($19)|0);
      var $21=(($2+492)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=(($20+$22)|0);
      var $24=(($2+492)|0);
      var $25=HEAP32[(($24)>>2)];
      var $26=(((8192)-($25))|0);
      var $27=(($2+500)|0);
      var $28=FUNCTION_TABLE[$18]($14, $23, $26, $27);
      $bytes_read=$28;
      var $29=$bytes_read;
      var $30=(($29)|0)==-1;
      if ($30) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -225);
      throw "Reached an unreachable!"
    case 7: 
      var $33=$bytes_read;
      var $34=(($2+492)|0);
      var $35=HEAP32[(($34)>>2)];
      var $36=((($35)+($33))|0);
      HEAP32[(($34)>>2)]=$36;
      __label__ = 8; break;
    case 8: 
      var $38=(($2+492)|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=(($39)|0) < 8192;
      if ($40) { __label__ = 9; break; } else { var $47 = 0;__label__ = 10; break; }
    case 9: 
      var $42=(($2+500)|0);
      var $43=HEAP8[($42)];
      var $44=(($43) & 1);
      var $45=$44 ^ 1;
      var $47 = $45;__label__ = 10; break;
    case 10: 
      var $47;
      if ($47) { __label__ = 5; break; } else { __label__ = 11; break; }
    case 11: 
      var $49=(($2+492)|0);
      var $50=HEAP32[(($49)>>2)];
      var $51=(($2+13304)|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=((($52)+($50))|0);
      HEAP32[(($51)>>2)]=$53;
      var $54=(($2+488)|0);
      var $55=HEAP32[(($54)>>2)];
      var $56=(($2+492)|0);
      var $57=HEAP32[(($56)>>2)];
      var $58=(($55+$57)|0);
      __ZN4jpgd12jpeg_decoder10word_clearEPvtj($2, $58, -9729, 64);
      __label__ = 12; break;
    case 12: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder14prep_in_bufferEv["X"]=1;

function __ZN4jpgd12jpeg_decoder8get_bitsEi($this, $num_bits) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $c1;
      var $c2;
      $2=$this;
      $3=$num_bits;
      var $4=$2;
      var $5=$3;
      var $6=(($5)|0)!=0;
      if ($6) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      $1=0;
      __label__ = 11; break;
    case 4: 
      var $9=(($4+9084)|0);
      var $10=HEAPU32[(($9)>>2)];
      var $11=$3;
      var $12=(((32)-($11))|0);
      var $13=$10 >>> (($12)>>>0);
      $i=$13;
      var $14=$3;
      var $15=(($4+9080)|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=((($16)-($14))|0);
      HEAP32[(($15)>>2)]=$17;
      var $18=(($17)|0) <= 0;
      if ($18) { __label__ = 5; break; } else { __label__ = 9; break; }
    case 5: 
      var $20=(($4+9080)|0);
      var $21=HEAP32[(($20)>>2)];
      var $22=$3;
      var $23=((($22)+($21))|0);
      $3=$23;
      var $24=(($4+9084)|0);
      var $25=HEAP32[(($24)>>2)];
      var $26=$25 << $23;
      HEAP32[(($24)>>2)]=$26;
      var $27=__ZN4jpgd12jpeg_decoder8get_charEv($4);
      $c1=$27;
      var $28=__ZN4jpgd12jpeg_decoder8get_charEv($4);
      $c2=$28;
      var $29=(($4+9084)|0);
      var $30=HEAP32[(($29)>>2)];
      var $31=$30 & -65536;
      var $32=$c1;
      var $33=$32 << 8;
      var $34=$31 | $33;
      var $35=$c2;
      var $36=$34 | $35;
      var $37=(($4+9084)|0);
      HEAP32[(($37)>>2)]=$36;
      var $38=(($4+9080)|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=(((-$39))|0);
      var $41=(($4+9084)|0);
      var $42=HEAP32[(($41)>>2)];
      var $43=$42 << $40;
      HEAP32[(($41)>>2)]=$43;
      var $44=(($4+9080)|0);
      var $45=HEAP32[(($44)>>2)];
      var $46=((($45)+(16))|0);
      HEAP32[(($44)>>2)]=$46;
      var $47=(($4+9080)|0);
      var $48=HEAP32[(($47)>>2)];
      var $49=(($48)|0) >= 0;
      if ($49) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      __label__ = 8; break;
    case 7: 
      ___assert_func(((STRING_TABLE.__str114)|0), 446, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder8get_bitsEi)|0), ((STRING_TABLE.__str16130)|0));
      __label__ = 8; break;
    case 8: 
      __label__ = 10; break;
    case 9: 
      var $54=$3;
      var $55=(($4+9084)|0);
      var $56=HEAP32[(($55)>>2)];
      var $57=$56 << $54;
      HEAP32[(($55)>>2)]=$57;
      __label__ = 10; break;
    case 10: 
      var $59=$i;
      $1=$59;
      __label__ = 11; break;
    case 11: 
      var $61=$1;
      ;
      return $61;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder8get_bitsEi["X"]=1;

function __ZN4jpgd12jpeg_decoder11next_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $c;
      var $bytes;
      $1=$this;
      var $2=$1;
      $bytes=0;
      __label__ = 3; break;
    case 3: 
      __label__ = 4; break;
    case 4: 
      var $5=$bytes;
      var $6=((($5)+(1))|0);
      $bytes=$6;
      var $7=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $c=$7;
      __label__ = 5; break;
    case 5: 
      var $9=$c;
      var $10=(($9)|0)!=255;
      if ($10) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 6: 
      __label__ = 7; break;
    case 7: 
      var $13=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $c=$13;
      __label__ = 8; break;
    case 8: 
      var $15=$c;
      var $16=(($15)|0)==255;
      if ($16) { __label__ = 7; break; } else { __label__ = 9; break; }
    case 9: 
      __label__ = 10; break;
    case 10: 
      var $19=$c;
      var $20=(($19)|0)==0;
      if ($20) { __label__ = 3; break; } else { __label__ = 11; break; }
    case 11: 
      var $22=$c;
      ;
      return $22;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder15read_dht_markerEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 276; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $index;
      var $count;
      var $huff_num=__stackBase__;
      var $huff_val=(__stackBase__)+(20);
      var $num_left;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      $num_left=$3;
      var $4=$num_left;
      var $5=(($4)>>>0) < 2;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -254);
      throw "Reached an unreachable!"
    case 4: 
      var $8=$num_left;
      var $9=((($8)-(2))|0);
      $num_left=$9;
      __label__ = 5; break;
    case 5: 
      var $11=$num_left;
      var $12=(($11)|0)!=0;
      if ($12) { __label__ = 6; break; } else { __label__ = 27; break; }
    case 6: 
      var $14=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $index=$14;
      var $15=(($huff_num)|0);
      HEAP8[($15)]=0;
      $count=0;
      $i=1;
      __label__ = 7; break;
    case 7: 
      var $17=$i;
      var $18=(($17)|0) <= 16;
      if ($18) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      var $20=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $21=(($20) & 255);
      var $22=$i;
      var $23=(($huff_num+$22)|0);
      HEAP8[($23)]=$21;
      var $24=$i;
      var $25=(($huff_num+$24)|0);
      var $26=HEAPU8[($25)];
      var $27=(($26)&255);
      var $28=$count;
      var $29=((($28)+($27))|0);
      $count=$29;
      __label__ = 9; break;
    case 9: 
      var $31=$i;
      var $32=((($31)+(1))|0);
      $i=$32;
      __label__ = 7; break;
    case 10: 
      var $34=$count;
      var $35=(($34)|0) > 255;
      if ($35) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -256);
      throw "Reached an unreachable!"
    case 12: 
      $i=0;
      __label__ = 13; break;
    case 13: 
      var $39=$i;
      var $40=$count;
      var $41=(($39)|0) < (($40)|0);
      if ($41) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: 
      var $43=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $44=(($43) & 255);
      var $45=$i;
      var $46=(($huff_val+$45)|0);
      HEAP8[($46)]=$44;
      __label__ = 15; break;
    case 15: 
      var $48=$i;
      var $49=((($48)+(1))|0);
      $i=$49;
      __label__ = 13; break;
    case 16: 
      var $51=$count;
      var $52=((($51)+(17))|0);
      $i=$52;
      var $53=$num_left;
      var $54=$i;
      var $55=(($53)>>>0) < (($54)>>>0);
      if ($55) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -254);
      throw "Reached an unreachable!"
    case 18: 
      var $58=$i;
      var $59=$num_left;
      var $60=((($59)-($58))|0);
      $num_left=$60;
      var $61=$index;
      var $62=$61 & 16;
      var $63=(($62)|0) > 16;
      if ($63) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -255);
      throw "Reached an unreachable!"
    case 20: 
      var $66=$index;
      var $67=$66 & 15;
      var $68=$index;
      var $69=$68 & 16;
      var $70=$69 >> 4;
      var $71=((($70<<2))|0);
      var $72=((($67)+($71))|0);
      $index=$72;
      var $73=$index;
      var $74=(($73)|0) >= 8;
      if ($74) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -255);
      throw "Reached an unreachable!"
    case 22: 
      var $77=$index;
      var $78=(($2+68)|0);
      var $79=(($78+($77<<2))|0);
      var $80=HEAP32[(($79)>>2)];
      var $81=(($80)|0)!=0;
      if ($81) { __label__ = 24; break; } else { __label__ = 23; break; }
    case 23: 
      var $83=__ZN4jpgd12jpeg_decoder5allocEjb($2, 17, 0);
      var $84=$index;
      var $85=(($2+68)|0);
      var $86=(($85+($84<<2))|0);
      HEAP32[(($86)>>2)]=$83;
      __label__ = 24; break;
    case 24: 
      var $88=$index;
      var $89=(($2+100)|0);
      var $90=(($89+($88<<2))|0);
      var $91=HEAP32[(($90)>>2)];
      var $92=(($91)|0)!=0;
      if ($92) { __label__ = 26; break; } else { __label__ = 25; break; }
    case 25: 
      var $94=__ZN4jpgd12jpeg_decoder5allocEjb($2, 256, 0);
      var $95=$index;
      var $96=(($2+100)|0);
      var $97=(($96+($95<<2))|0);
      HEAP32[(($97)>>2)]=$94;
      __label__ = 26; break;
    case 26: 
      var $99=$index;
      var $100=$99 & 16;
      var $101=(($100)|0)!=0;
      var $102=(($101)&1);
      var $103=$index;
      var $104=(($2+60)|0);
      var $105=(($104+$103)|0);
      HEAP8[($105)]=$102;
      var $106=$index;
      var $107=(($2+68)|0);
      var $108=(($107+($106<<2))|0);
      var $109=HEAP32[(($108)>>2)];
      var $110=(($huff_num)|0);
      assert(17 % 1 === 0, 'memcpy given ' + 17 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');for (var $$src = $110, $$dest = $109, $$stop = $$src + 17; $$src < $$stop; $$src++, $$dest++) {
        HEAP8[$$dest] = HEAP8[$$src]
      };
      var $111=$index;
      var $112=(($2+100)|0);
      var $113=(($112+($111<<2))|0);
      var $114=HEAP32[(($113)>>2)];
      var $115=(($huff_val)|0);
      assert(256 % 1 === 0, 'memcpy given ' + 256 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($114, $115, 256, 1);
      __label__ = 5; break;
    case 27: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder15read_dht_markerEv["X"]=1;

function __ZN4jpgd12jpeg_decoder15read_dqt_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $n;
      var $i;
      var $prec;
      var $num_left;
      var $temp;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      $num_left=$3;
      var $4=$num_left;
      var $5=(($4)>>>0) < 2;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -253);
      throw "Reached an unreachable!"
    case 4: 
      var $8=$num_left;
      var $9=((($8)-(2))|0);
      $num_left=$9;
      __label__ = 5; break;
    case 5: 
      var $11=$num_left;
      var $12=(($11)|0)!=0;
      if ($12) { __label__ = 6; break; } else { __label__ = 21; break; }
    case 6: 
      var $14=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $n=$14;
      var $15=$n;
      var $16=$15 >> 4;
      $prec=$16;
      var $17=$n;
      var $18=$17 & 15;
      $n=$18;
      var $19=$n;
      var $20=(($19)|0) >= 4;
      if ($20) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -252);
      throw "Reached an unreachable!"
    case 8: 
      var $23=$n;
      var $24=(($2+132)|0);
      var $25=(($24+($23<<2))|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=(($26)|0)!=0;
      if ($27) { __label__ = 10; break; } else { __label__ = 9; break; }
    case 9: 
      var $29=__ZN4jpgd12jpeg_decoder5allocEjb($2, 128, 0);
      var $30=$29;
      var $31=$n;
      var $32=(($2+132)|0);
      var $33=(($32+($31<<2))|0);
      HEAP32[(($33)>>2)]=$30;
      __label__ = 10; break;
    case 10: 
      $i=0;
      __label__ = 11; break;
    case 11: 
      var $36=$i;
      var $37=(($36)|0) < 64;
      if ($37) { __label__ = 12; break; } else { __label__ = 16; break; }
    case 12: 
      var $39=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $temp=$39;
      var $40=$prec;
      var $41=(($40)|0)!=0;
      if ($41) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      var $43=$temp;
      var $44=$43 << 8;
      var $45=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $46=((($44)+($45))|0);
      $temp=$46;
      __label__ = 14; break;
    case 14: 
      var $48=$temp;
      var $49=(($48) & 65535);
      var $50=$i;
      var $51=$n;
      var $52=(($2+132)|0);
      var $53=(($52+($51<<2))|0);
      var $54=HEAP32[(($53)>>2)];
      var $55=(($54+($50<<1))|0);
      HEAP16[(($55)>>1)]=$49;
      __label__ = 15; break;
    case 15: 
      var $57=$i;
      var $58=((($57)+(1))|0);
      $i=$58;
      __label__ = 11; break;
    case 16: 
      $i=65;
      var $60=$prec;
      var $61=(($60)|0)!=0;
      if ($61) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      var $63=$i;
      var $64=((($63)+(64))|0);
      $i=$64;
      __label__ = 18; break;
    case 18: 
      var $66=$num_left;
      var $67=$i;
      var $68=(($66)>>>0) < (($67)>>>0);
      if ($68) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -237);
      throw "Reached an unreachable!"
    case 20: 
      var $71=$i;
      var $72=$num_left;
      var $73=((($72)-($71))|0);
      $num_left=$73;
      __label__ = 5; break;
    case 21: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder15read_dqt_markerEv["X"]=1;

function __ZN4jpgd12jpeg_decoder15read_sof_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $num_left;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      $num_left=$3;
      var $4=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $5=(($4)|0)!=8;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -251);
      throw "Reached an unreachable!"
    case 4: 
      var $8=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      var $9=(($2+48)|0);
      HEAP32[(($9)>>2)]=$8;
      var $10=(($2+48)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=(($11)|0) < 1;
      if ($12) { __label__ = 6; break; } else { __label__ = 5; break; }
    case 5: 
      var $14=(($2+48)|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=(($15)|0) > 16384;
      if ($16) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -250);
      throw "Reached an unreachable!"
    case 7: 
      var $19=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      var $20=(($2+44)|0);
      HEAP32[(($20)>>2)]=$19;
      var $21=(($2+44)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=(($22)|0) < 1;
      if ($23) { __label__ = 9; break; } else { __label__ = 8; break; }
    case 8: 
      var $25=(($2+44)|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=(($26)|0) > 16384;
      if ($27) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -249);
      throw "Reached an unreachable!"
    case 10: 
      var $30=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $31=(($2+152)|0);
      HEAP32[(($31)>>2)]=$30;
      var $32=(($2+152)|0);
      var $33=HEAP32[(($32)>>2)];
      var $34=(($33)|0) > 4;
      if ($34) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -248);
      throw "Reached an unreachable!"
    case 12: 
      var $37=$num_left;
      var $38=(($2+152)|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=((($39)*(3))|0);
      var $41=((($40)+(8))|0);
      var $42=(($37)|0)!=(($41)|0);
      if ($42) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -247);
      throw "Reached an unreachable!"
    case 14: 
      $i=0;
      __label__ = 15; break;
    case 15: 
      var $46=$i;
      var $47=(($2+152)|0);
      var $48=HEAP32[(($47)>>2)];
      var $49=(($46)|0) < (($48)|0);
      if ($49) { __label__ = 16; break; } else { __label__ = 18; break; }
    case 16: 
      var $51=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $52=$i;
      var $53=(($2+204)|0);
      var $54=(($53+($52<<2))|0);
      HEAP32[(($54)>>2)]=$51;
      var $55=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 4);
      var $56=$i;
      var $57=(($2+156)|0);
      var $58=(($57+($56<<2))|0);
      HEAP32[(($58)>>2)]=$55;
      var $59=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 4);
      var $60=$i;
      var $61=(($2+172)|0);
      var $62=(($61+($60<<2))|0);
      HEAP32[(($62)>>2)]=$59;
      var $63=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $64=$i;
      var $65=(($2+188)|0);
      var $66=(($65+($64<<2))|0);
      HEAP32[(($66)>>2)]=$63;
      __label__ = 17; break;
    case 17: 
      var $68=$i;
      var $69=((($68)+(1))|0);
      $i=$69;
      __label__ = 15; break;
    case 18: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder15read_sof_markerEv["X"]=1;

function __ZN4jpgd12jpeg_decoder20skip_variable_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $num_left;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      $num_left=$3;
      var $4=$num_left;
      var $5=(($4)>>>0) < 2;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -246);
      throw "Reached an unreachable!"
    case 4: 
      var $8=$num_left;
      var $9=((($8)-(2))|0);
      $num_left=$9;
      __label__ = 5; break;
    case 5: 
      var $11=$num_left;
      var $12=(($11)|0)!=0;
      if ($12) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $14=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $15=$num_left;
      var $16=((($15)-(1))|0);
      $num_left=$16;
      __label__ = 5; break;
    case 7: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder15read_dri_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      var $4=(($3)|0)!=4;
      if ($4) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -245);
      throw "Reached an unreachable!"
    case 4: 
      var $7=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      var $8=(($2+9088)|0);
      HEAP32[(($8)>>2)]=$7;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder15read_sos_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $num_left;
      var $i;
      var $ci;
      var $n;
      var $c;
      var $cc;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      $num_left=$3;
      var $4=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $n=$4;
      var $5=$n;
      var $6=(($2+252)|0);
      HEAP32[(($6)>>2)]=$5;
      var $7=$num_left;
      var $8=((($7)-(3))|0);
      $num_left=$8;
      var $9=$num_left;
      var $10=$n;
      var $11=((($10<<1))|0);
      var $12=((($11)+(3))|0);
      var $13=(($9)|0)!=(($12)|0);
      if ($13) { __label__ = 5; break; } else { __label__ = 3; break; }
    case 3: 
      var $15=$n;
      var $16=(($15)|0) < 1;
      if ($16) { __label__ = 5; break; } else { __label__ = 4; break; }
    case 4: 
      var $18=$n;
      var $19=(($18)|0) > 4;
      if ($19) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -244);
      throw "Reached an unreachable!"
    case 6: 
      $i=0;
      __label__ = 7; break;
    case 7: 
      var $23=$i;
      var $24=$n;
      var $25=(($23)|0) < (($24)|0);
      if ($25) { __label__ = 8; break; } else { __label__ = 18; break; }
    case 8: 
      var $27=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $cc=$27;
      var $28=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $c=$28;
      var $29=$num_left;
      var $30=((($29)-(2))|0);
      $num_left=$30;
      $ci=0;
      __label__ = 9; break;
    case 9: 
      var $32=$ci;
      var $33=(($2+152)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=(($32)|0) < (($34)|0);
      if ($35) { __label__ = 10; break; } else { __label__ = 14; break; }
    case 10: 
      var $37=$cc;
      var $38=$ci;
      var $39=(($2+204)|0);
      var $40=(($39+($38<<2))|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($37)|0)==(($41)|0);
      if ($42) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: 
      __label__ = 14; break;
    case 12: 
      __label__ = 13; break;
    case 13: 
      var $46=$ci;
      var $47=((($46)+(1))|0);
      $ci=$47;
      __label__ = 9; break;
    case 14: 
      var $49=$ci;
      var $50=(($2+152)|0);
      var $51=HEAP32[(($50)>>2)];
      var $52=(($49)|0) >= (($51)|0);
      if ($52) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -243);
      throw "Reached an unreachable!"
    case 16: 
      var $55=$ci;
      var $56=$i;
      var $57=(($2+256)|0);
      var $58=(($57+($56<<2))|0);
      HEAP32[(($58)>>2)]=$55;
      var $59=$c;
      var $60=$59 >> 4;
      var $61=$60 & 15;
      var $62=$ci;
      var $63=(($2+272)|0);
      var $64=(($63+($62<<2))|0);
      HEAP32[(($64)>>2)]=$61;
      var $65=$c;
      var $66=$65 & 15;
      var $67=((($66)+(4))|0);
      var $68=$ci;
      var $69=(($2+288)|0);
      var $70=(($69+($68<<2))|0);
      HEAP32[(($70)>>2)]=$67;
      __label__ = 17; break;
    case 17: 
      var $72=$i;
      var $73=((($72)+(1))|0);
      $i=$73;
      __label__ = 7; break;
    case 18: 
      var $75=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $76=(($2+304)|0);
      HEAP32[(($76)>>2)]=$75;
      var $77=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $78=(($2+308)|0);
      HEAP32[(($78)>>2)]=$77;
      var $79=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 4);
      var $80=(($2+316)|0);
      HEAP32[(($80)>>2)]=$79;
      var $81=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 4);
      var $82=(($2+312)|0);
      HEAP32[(($82)>>2)]=$81;
      var $83=(($2+56)|0);
      var $84=HEAP32[(($83)>>2)];
      var $85=(($84)|0)!=0;
      if ($85) { __label__ = 20; break; } else { __label__ = 19; break; }
    case 19: 
      var $87=(($2+304)|0);
      HEAP32[(($87)>>2)]=0;
      var $88=(($2+308)|0);
      HEAP32[(($88)>>2)]=63;
      __label__ = 20; break;
    case 20: 
      var $90=$num_left;
      var $91=((($90)-(3))|0);
      $num_left=$91;
      __label__ = 21; break;
    case 21: 
      var $93=$num_left;
      var $94=(($93)|0)!=0;
      if ($94) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: 
      var $96=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      var $97=$num_left;
      var $98=((($97)-(1))|0);
      $num_left=$98;
      __label__ = 21; break;
    case 23: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder15read_sos_markerEv["X"]=1;

function __ZN4jpgd12jpeg_decoder15process_markersEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $c;
      $1=$this;
      var $2=$1;
      __label__ = 3; break;
    case 3: 
      var $4=__ZN4jpgd12jpeg_decoder11next_markerEv($2);
      $c=$4;
      var $5=$c;
      if ((($5)|0) == 192 || (($5)|0) == 193 || (($5)|0) == 194 || (($5)|0) == 195 || (($5)|0) == 197 || (($5)|0) == 198 || (($5)|0) == 199 || (($5)|0) == 201 || (($5)|0) == 202 || (($5)|0) == 203 || (($5)|0) == 205 || (($5)|0) == 206 || (($5)|0) == 207 || (($5)|0) == 216 || (($5)|0) == 217 || (($5)|0) == 218) {
        __label__ = 4; break;
      }
      else if ((($5)|0) == 196) {
        __label__ = 5; break;
      }
      else if ((($5)|0) == 204) {
        __label__ = 6; break;
      }
      else if ((($5)|0) == 219) {
        __label__ = 7; break;
      }
      else if ((($5)|0) == 221) {
        __label__ = 8; break;
      }
      else if ((($5)|0) == 200 || (($5)|0) == 208 || (($5)|0) == 209 || (($5)|0) == 210 || (($5)|0) == 211 || (($5)|0) == 212 || (($5)|0) == 213 || (($5)|0) == 214 || (($5)|0) == 215 || (($5)|0) == 1) {
        __label__ = 9; break;
      }
      else {
      __label__ = 10; break;
      }
      
    case 4: 
      var $7=$c;
      ;
      return $7;
    case 5: 
      __ZN4jpgd12jpeg_decoder15read_dht_markerEv($2);
      __label__ = 11; break;
    case 6: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -241);
      throw "Reached an unreachable!"
    case 7: 
      __ZN4jpgd12jpeg_decoder15read_dqt_markerEv($2);
      __label__ = 11; break;
    case 8: 
      __ZN4jpgd12jpeg_decoder15read_dri_markerEv($2);
      __label__ = 11; break;
    case 9: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -240);
      throw "Reached an unreachable!"
    case 10: 
      __ZN4jpgd12jpeg_decoder20skip_variable_markerEv($2);
      __label__ = 11; break;
    case 11: 
      __label__ = 3; break;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder15create_look_upsEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $k;
      $1=$this;
      var $2=$1;
      $i=0;
      __label__ = 3; break;
    case 3: 
      var $4=$i;
      var $5=(($4)|0) <= 255;
      if ($5) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $7=$i;
      var $8=((($7)-(128))|0);
      $k=$8;
      var $9=$k;
      var $10=((($9)*(91881))|0);
      var $11=((($10)+(32768))|0);
      var $12=$11 >> 16;
      var $13=$i;
      var $14=(($2+9192)|0);
      var $15=(($14+($13<<2))|0);
      HEAP32[(($15)>>2)]=$12;
      var $16=$k;
      var $17=((($16)*(116130))|0);
      var $18=((($17)+(32768))|0);
      var $19=$18 >> 16;
      var $20=$i;
      var $21=(($2+10216)|0);
      var $22=(($21+($20<<2))|0);
      HEAP32[(($22)>>2)]=$19;
      var $23=$k;
      var $24=((($23)*(-46802))|0);
      var $25=$i;
      var $26=(($2+11240)|0);
      var $27=(($26+($25<<2))|0);
      HEAP32[(($27)>>2)]=$24;
      var $28=$k;
      var $29=((($28)*(-22554))|0);
      var $30=((($29)+(32768))|0);
      var $31=$i;
      var $32=(($2+12264)|0);
      var $33=(($32+($31<<2))|0);
      HEAP32[(($33)>>2)]=$30;
      __label__ = 5; break;
    case 5: 
      var $35=$i;
      var $36=((($35)+(1))|0);
      $i=$36;
      __label__ = 3; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder10stuff_charEh($this, $q) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$this;
  $2=$q;
  var $3=$1;
  var $4=$2;
  var $5=(($3+488)|0);
  var $6=HEAP32[(($5)>>2)];
  var $7=((($6)-(1))|0);
  HEAP32[(($5)>>2)]=$7;
  HEAP8[($7)]=$4;
  var $8=(($3+492)|0);
  var $9=HEAP32[(($8)>>2)];
  var $10=((($9)+(1))|0);
  HEAP32[(($8)>>2)]=$10;
  ;
  return;
}


function __ZN4jpgd12jpeg_decoder4initEPNS_19jpeg_decoder_streamE($this, $pStream) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $i;
      $1=$this;
      $2=$pStream;
      var $3=$1;
      var $4=(($3+40)|0);
      HEAP32[(($4)>>2)]=0;
      var $5=(($3+13296)|0);
      HEAP32[(($5)>>2)]=0;
      var $6=(($3+13300)|0);
      HEAP8[($6)]=0;
      var $7=(($3+48)|0);
      HEAP32[(($7)>>2)]=0;
      var $8=(($3+44)|0);
      HEAP32[(($8)>>2)]=0;
      var $9=$2;
      var $10=(($3+52)|0);
      HEAP32[(($10)>>2)]=$9;
      var $11=(($3+56)|0);
      HEAP32[(($11)>>2)]=0;
      var $12=(($3+60)|0);
      var $13=(($12)|0);
      HEAP8[($13)]=0; HEAP8[(($13)+(1))]=0; HEAP8[(($13)+(2))]=0; HEAP8[(($13)+(3))]=0; HEAP8[(($13)+(4))]=0; HEAP8[(($13)+(5))]=0; HEAP8[(($13)+(6))]=0; HEAP8[(($13)+(7))]=0;
      var $14=(($3+68)|0);
      var $15=(($14)|0);
      var $16=$15;
      HEAP32[(($16)>>2)]=0; HEAP32[((($16)+(4))>>2)]=0; HEAP32[((($16)+(8))>>2)]=0; HEAP32[((($16)+(12))>>2)]=0; HEAP32[((($16)+(16))>>2)]=0; HEAP32[((($16)+(20))>>2)]=0; HEAP32[((($16)+(24))>>2)]=0; HEAP32[((($16)+(28))>>2)]=0;
      var $17=(($3+100)|0);
      var $18=(($17)|0);
      var $19=$18;
      HEAP32[(($19)>>2)]=0; HEAP32[((($19)+(4))>>2)]=0; HEAP32[((($19)+(8))>>2)]=0; HEAP32[((($19)+(12))>>2)]=0; HEAP32[((($19)+(16))>>2)]=0; HEAP32[((($19)+(20))>>2)]=0; HEAP32[((($19)+(24))>>2)]=0; HEAP32[((($19)+(28))>>2)]=0;
      var $20=(($3+132)|0);
      var $21=(($20)|0);
      var $22=$21;
      HEAP32[(($22)>>2)]=0; HEAP32[((($22)+(4))>>2)]=0; HEAP32[((($22)+(8))>>2)]=0; HEAP32[((($22)+(12))>>2)]=0;
      var $23=(($3+148)|0);
      HEAP32[(($23)>>2)]=0;
      var $24=(($3+152)|0);
      HEAP32[(($24)>>2)]=0;
      var $25=(($3+156)|0);
      var $26=(($25)|0);
      var $27=$26;
      HEAP32[(($27)>>2)]=0; HEAP32[((($27)+(4))>>2)]=0; HEAP32[((($27)+(8))>>2)]=0; HEAP32[((($27)+(12))>>2)]=0;
      var $28=(($3+172)|0);
      var $29=(($28)|0);
      var $30=$29;
      HEAP32[(($30)>>2)]=0; HEAP32[((($30)+(4))>>2)]=0; HEAP32[((($30)+(8))>>2)]=0; HEAP32[((($30)+(12))>>2)]=0;
      var $31=(($3+188)|0);
      var $32=(($31)|0);
      var $33=$32;
      HEAP32[(($33)>>2)]=0; HEAP32[((($33)+(4))>>2)]=0; HEAP32[((($33)+(8))>>2)]=0; HEAP32[((($33)+(12))>>2)]=0;
      var $34=(($3+204)|0);
      var $35=(($34)|0);
      var $36=$35;
      HEAP32[(($36)>>2)]=0; HEAP32[((($36)+(4))>>2)]=0; HEAP32[((($36)+(8))>>2)]=0; HEAP32[((($36)+(12))>>2)]=0;
      var $37=(($3+220)|0);
      var $38=(($37)|0);
      var $39=$38;
      HEAP32[(($39)>>2)]=0; HEAP32[((($39)+(4))>>2)]=0; HEAP32[((($39)+(8))>>2)]=0; HEAP32[((($39)+(12))>>2)]=0;
      var $40=(($3+236)|0);
      var $41=(($40)|0);
      var $42=$41;
      HEAP32[(($42)>>2)]=0; HEAP32[((($42)+(4))>>2)]=0; HEAP32[((($42)+(8))>>2)]=0; HEAP32[((($42)+(12))>>2)]=0;
      var $43=(($3+252)|0);
      HEAP32[(($43)>>2)]=0;
      var $44=(($3+256)|0);
      var $45=(($44)|0);
      var $46=$45;
      HEAP32[(($46)>>2)]=0; HEAP32[((($46)+(4))>>2)]=0; HEAP32[((($46)+(8))>>2)]=0; HEAP32[((($46)+(12))>>2)]=0;
      var $47=(($3+272)|0);
      var $48=(($47)|0);
      var $49=$48;
      HEAP32[(($49)>>2)]=0; HEAP32[((($49)+(4))>>2)]=0; HEAP32[((($49)+(8))>>2)]=0; HEAP32[((($49)+(12))>>2)]=0;
      var $50=(($3+288)|0);
      var $51=(($50)|0);
      var $52=$51;
      HEAP32[(($52)>>2)]=0; HEAP32[((($52)+(4))>>2)]=0; HEAP32[((($52)+(8))>>2)]=0; HEAP32[((($52)+(12))>>2)]=0;
      var $53=(($3+304)|0);
      HEAP32[(($53)>>2)]=0;
      var $54=(($3+308)|0);
      HEAP32[(($54)>>2)]=0;
      var $55=(($3+312)|0);
      HEAP32[(($55)>>2)]=0;
      var $56=(($3+316)|0);
      HEAP32[(($56)>>2)]=0;
      var $57=(($3+320)|0);
      HEAP32[(($57)>>2)]=0;
      var $58=(($3+324)|0);
      HEAP32[(($58)>>2)]=0;
      var $59=(($3+328)|0);
      HEAP32[(($59)>>2)]=0;
      var $60=(($3+332)|0);
      HEAP32[(($60)>>2)]=0;
      var $61=(($3+336)|0);
      HEAP32[(($61)>>2)]=0;
      var $62=(($3+340)|0);
      HEAP32[(($62)>>2)]=0;
      var $63=(($3+9116)|0);
      HEAP32[(($63)>>2)]=0;
      var $64=(($3+9108)|0);
      HEAP32[(($64)>>2)]=0;
      var $65=(($3+9112)|0);
      HEAP32[(($65)>>2)]=0;
      var $66=(($3+9120)|0);
      HEAP8[($66)]=0;
      var $67=(($3+344)|0);
      var $68=(($67)|0);
      var $69=$68;
      for (var $$dest = $69>>2, $$stop = $$dest + 10; $$dest < $$stop; $$dest++) {
        HEAP32[$$dest] = 0
      };
      var $70=(($3+384)|0);
      HEAP32[(($70)>>2)]=0;
      var $71=(($3+388)|0);
      HEAP32[(($71)>>2)]=0;
      var $72=(($3+392)|0);
      HEAP32[(($72)>>2)]=0;
      var $73=(($3+396)|0);
      HEAP32[(($73)>>2)]=0;
      var $74=(($3+400)|0);
      HEAP32[(($74)>>2)]=0;
      var $75=(($3+404)|0);
      var $76=(($75)|0);
      var $77=$76;
      HEAP32[(($77)>>2)]=0; HEAP32[((($77)+(4))>>2)]=0; HEAP32[((($77)+(8))>>2)]=0; HEAP32[((($77)+(12))>>2)]=0; HEAP32[((($77)+(16))>>2)]=0; HEAP32[((($77)+(20))>>2)]=0; HEAP32[((($77)+(24))>>2)]=0; HEAP32[((($77)+(28))>>2)]=0;
      var $78=(($3+436)|0);
      var $79=(($78)|0);
      var $80=$79;
      HEAP32[(($80)>>2)]=0; HEAP32[((($80)+(4))>>2)]=0; HEAP32[((($80)+(8))>>2)]=0; HEAP32[((($80)+(12))>>2)]=0;
      var $81=(($3+452)|0);
      var $82=(($81)|0);
      var $83=$82;
      HEAP32[(($83)>>2)]=0; HEAP32[((($83)+(4))>>2)]=0; HEAP32[((($83)+(8))>>2)]=0; HEAP32[((($83)+(12))>>2)]=0;
      var $84=(($3+472)|0);
      var $85=(($84)|0);
      var $86=$85;
      HEAP32[(($86)>>2)]=0; HEAP32[((($86)+(4))>>2)]=0; HEAP32[((($86)+(8))>>2)]=0; HEAP32[((($86)+(12))>>2)]=0;
      var $87=(($3+468)|0);
      HEAP32[(($87)>>2)]=0;
      var $88=(($3+472)|0);
      var $89=(($88)|0);
      var $90=$89;
      HEAP32[(($90)>>2)]=0; HEAP32[((($90)+(4))>>2)]=0; HEAP32[((($90)+(8))>>2)]=0; HEAP32[((($90)+(12))>>2)]=0;
      var $91=(($3+629)|0);
      var $92=(($91)|0);
      var $93=(($3+488)|0);
      HEAP32[(($93)>>2)]=$92;
      var $94=(($3+492)|0);
      HEAP32[(($94)>>2)]=0;
      var $95=(($3+500)|0);
      HEAP8[($95)]=0;
      var $96=(($3+496)|0);
      HEAP32[(($96)>>2)]=0;
      var $97=(($3+501)|0);
      var $98=(($97)|0);
      _memset($98, 0, 128, 1);
      var $99=(($3+629)|0);
      var $100=(($99)|0);
      _memset($100, 0, 8320, 1);
      var $101=(($3+8949)|0);
      var $102=(($101)|0);
      _memset($102, 0, 128, 1);
      var $103=(($3+9088)|0);
      HEAP32[(($103)>>2)]=0;
      var $104=(($3+9092)|0);
      HEAP32[(($104)>>2)]=0;
      var $105=(($3+9096)|0);
      HEAP32[(($105)>>2)]=0;
      var $106=(($3+9100)|0);
      HEAP32[(($106)>>2)]=0;
      var $107=(($3+9104)|0);
      HEAP32[(($107)>>2)]=0;
      var $108=(($3+9124)|0);
      HEAP32[(($108)>>2)]=0;
      var $109=(($3+9128)|0);
      var $110=(($109)|0);
      var $111=$110;
      HEAP32[(($111)>>2)]=0; HEAP32[((($111)+(4))>>2)]=0; HEAP32[((($111)+(8))>>2)]=0; HEAP32[((($111)+(12))>>2)]=0;
      var $112=(($3+9144)|0);
      HEAP32[(($112)>>2)]=0;
      var $113=(($3+9188)|0);
      HEAP32[(($113)>>2)]=0;
      var $114=(($3+13304)|0);
      HEAP32[(($114)>>2)]=0;
      var $115=(($3+13288)|0);
      HEAP32[(($115)>>2)]=0;
      var $116=(($3+13292)|0);
      HEAP32[(($116)>>2)]=0;
      __ZN4jpgd12jpeg_decoder14prep_in_bufferEv($3);
      var $117=(($3+9080)|0);
      HEAP32[(($117)>>2)]=16;
      var $118=(($3+9084)|0);
      HEAP32[(($118)>>2)]=0;
      var $119=__ZN4jpgd12jpeg_decoder8get_bitsEi($3, 16);
      var $120=__ZN4jpgd12jpeg_decoder8get_bitsEi($3, 16);
      $i=0;
      __label__ = 3; break;
    case 3: 
      var $122=$i;
      var $123=(($122)|0) < 10;
      if ($123) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $125=$i;
      var $126=(($3+9148)|0);
      var $127=(($126+($125<<2))|0);
      HEAP32[(($127)>>2)]=64;
      __label__ = 5; break;
    case 5: 
      var $129=$i;
      var $130=((($129)+(1))|0);
      $i=$130;
      __label__ = 3; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder4initEPNS_19jpeg_decoder_streamE["X"]=1;

function __ZN4jpgd12jpeg_decoder13fix_in_bufferEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$this;
      var $2=$1;
      var $3=(($2+9080)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=$4 & 7;
      var $6=(($5)|0)==0;
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __label__ = 5; break;
    case 4: 
      ___assert_func(((STRING_TABLE.__str114)|0), 1479, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder13fix_in_bufferEv)|0), ((STRING_TABLE.__str3117)|0));
      __label__ = 5; break;
    case 5: 
      var $10=(($2+9080)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=(($11)|0)==16;
      if ($12) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $14=(($2+9084)|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=$15 & 255;
      var $17=(($16) & 255);
      __ZN4jpgd12jpeg_decoder10stuff_charEh($2, $17);
      __label__ = 7; break;
    case 7: 
      var $19=(($2+9080)|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=(($20)|0) >= 8;
      if ($21) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $23=(($2+9084)|0);
      var $24=HEAPU32[(($23)>>2)];
      var $25=$24 >>> 8;
      var $26=$25 & 255;
      var $27=(($26) & 255);
      __ZN4jpgd12jpeg_decoder10stuff_charEh($2, $27);
      __label__ = 9; break;
    case 9: 
      var $29=(($2+9084)|0);
      var $30=HEAPU32[(($29)>>2)];
      var $31=$30 >>> 16;
      var $32=$31 & 255;
      var $33=(($32) & 255);
      __ZN4jpgd12jpeg_decoder10stuff_charEh($2, $33);
      var $34=(($2+9084)|0);
      var $35=HEAPU32[(($34)>>2)];
      var $36=$35 >>> 24;
      var $37=$36 & 255;
      var $38=(($37) & 255);
      __ZN4jpgd12jpeg_decoder10stuff_charEh($2, $38);
      var $39=(($2+9080)|0);
      HEAP32[(($39)>>2)]=16;
      var $40=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($2, 16);
      var $41=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($2, 16);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($this, $num_bits) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $c1;
      var $c2;
      $2=$this;
      $3=$num_bits;
      var $4=$2;
      var $5=$3;
      var $6=(($5)|0)!=0;
      if ($6) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      $1=0;
      __label__ = 16; break;
    case 4: 
      var $9=(($4+9084)|0);
      var $10=HEAPU32[(($9)>>2)];
      var $11=$3;
      var $12=(((32)-($11))|0);
      var $13=$10 >>> (($12)>>>0);
      $i=$13;
      var $14=$3;
      var $15=(($4+9080)|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=((($16)-($14))|0);
      HEAP32[(($15)>>2)]=$17;
      var $18=(($17)|0) <= 0;
      if ($18) { __label__ = 5; break; } else { __label__ = 14; break; }
    case 5: 
      var $20=(($4+9080)|0);
      var $21=HEAP32[(($20)>>2)];
      var $22=$3;
      var $23=((($22)+($21))|0);
      $3=$23;
      var $24=(($4+9084)|0);
      var $25=HEAP32[(($24)>>2)];
      var $26=$25 << $23;
      HEAP32[(($24)>>2)]=$26;
      var $27=(($4+492)|0);
      var $28=HEAP32[(($27)>>2)];
      var $29=(($28)|0) < 2;
      if ($29) { __label__ = 8; break; } else { __label__ = 6; break; }
    case 6: 
      var $31=(($4+488)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32)|0);
      var $34=HEAPU8[($33)];
      var $35=(($34)&255);
      var $36=(($35)|0)==255;
      if ($36) { __label__ = 8; break; } else { __label__ = 7; break; }
    case 7: 
      var $38=(($4+488)|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=(($39+1)|0);
      var $41=HEAPU8[($40)];
      var $42=(($41)&255);
      var $43=(($42)|0)==255;
      if ($43) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $45=__ZN4jpgd12jpeg_decoder9get_octetEv($4);
      var $46=(($45)&255);
      $c1=$46;
      var $47=__ZN4jpgd12jpeg_decoder9get_octetEv($4);
      var $48=(($47)&255);
      $c2=$48;
      var $49=$c1;
      var $50=$49 << 8;
      var $51=$c2;
      var $52=$50 | $51;
      var $53=(($4+9084)|0);
      var $54=HEAP32[(($53)>>2)];
      var $55=$54 | $52;
      HEAP32[(($53)>>2)]=$55;
      __label__ = 10; break;
    case 9: 
      var $57=(($4+488)|0);
      var $58=HEAP32[(($57)>>2)];
      var $59=(($58)|0);
      var $60=HEAPU8[($59)];
      var $61=(($60)&255);
      var $62=$61 << 8;
      var $63=(($4+488)|0);
      var $64=HEAP32[(($63)>>2)];
      var $65=(($64+1)|0);
      var $66=HEAPU8[($65)];
      var $67=(($66)&255);
      var $68=$62 | $67;
      var $69=(($4+9084)|0);
      var $70=HEAP32[(($69)>>2)];
      var $71=$70 | $68;
      HEAP32[(($69)>>2)]=$71;
      var $72=(($4+492)|0);
      var $73=HEAP32[(($72)>>2)];
      var $74=((($73)-(2))|0);
      HEAP32[(($72)>>2)]=$74;
      var $75=(($4+488)|0);
      var $76=HEAP32[(($75)>>2)];
      var $77=(($76+2)|0);
      HEAP32[(($75)>>2)]=$77;
      __label__ = 10; break;
    case 10: 
      var $79=(($4+9080)|0);
      var $80=HEAP32[(($79)>>2)];
      var $81=(((-$80))|0);
      var $82=(($4+9084)|0);
      var $83=HEAP32[(($82)>>2)];
      var $84=$83 << $81;
      HEAP32[(($82)>>2)]=$84;
      var $85=(($4+9080)|0);
      var $86=HEAP32[(($85)>>2)];
      var $87=((($86)+(16))|0);
      HEAP32[(($85)>>2)]=$87;
      var $88=(($4+9080)|0);
      var $89=HEAP32[(($88)>>2)];
      var $90=(($89)|0) >= 0;
      if ($90) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: 
      __label__ = 13; break;
    case 12: 
      ___assert_func(((STRING_TABLE.__str114)|0), 483, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder19get_bits_no_markersEi)|0), ((STRING_TABLE.__str16130)|0));
      __label__ = 13; break;
    case 13: 
      __label__ = 15; break;
    case 14: 
      var $95=$3;
      var $96=(($4+9084)|0);
      var $97=HEAP32[(($96)>>2)];
      var $98=$97 << $95;
      HEAP32[(($96)>>2)]=$98;
      __label__ = 15; break;
    case 15: 
      var $100=$i;
      $1=$100;
      __label__ = 16; break;
    case 16: 
      var $102=$1;
      ;
      return $102;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi["X"]=1;

function __ZN4jpgd12jpeg_decoder13transform_mcuEi($this, $mcu_row) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $pSrc_ptr;
      var $pDst_ptr;
      var $mcu_block;
      $1=$this;
      $2=$mcu_row;
      var $3=$1;
      var $4=(($3+9144)|0);
      var $5=HEAP32[(($4)>>2)];
      $pSrc_ptr=$5;
      var $6=(($3+9188)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=$2;
      var $9=(($3+328)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=((($8)*($10))|0);
      var $12=((($11<<6))|0);
      var $13=(($7+$12)|0);
      $pDst_ptr=$13;
      $mcu_block=0;
      __label__ = 3; break;
    case 3: 
      var $15=$mcu_block;
      var $16=(($3+328)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=(($15)|0) < (($17)|0);
      if ($18) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $20=$pSrc_ptr;
      var $21=$pDst_ptr;
      var $22=$mcu_block;
      var $23=(($3+9148)|0);
      var $24=(($23+($22<<2))|0);
      var $25=HEAP32[(($24)>>2)];
      __ZN4jpgd4idctEPKsPhi($20, $21, $25);
      var $26=$pSrc_ptr;
      var $27=(($26+128)|0);
      $pSrc_ptr=$27;
      var $28=$pDst_ptr;
      var $29=(($28+64)|0);
      $pDst_ptr=$29;
      __label__ = 5; break;
    case 5: 
      var $31=$mcu_block;
      var $32=((($31)+(1))|0);
      $mcu_block=$32;
      __label__ = 3; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder17locate_soi_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $lastchar;
      var $thischar;
      var $bytesleft;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $lastchar=$3;
      var $4=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $thischar=$4;
      var $5=$lastchar;
      var $6=(($5)|0)==255;
      if ($6) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: 
      var $8=$thischar;
      var $9=(($8)|0)==216;
      if ($9) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      __label__ = 18; break;
    case 5: 
      $bytesleft=4096;
      __label__ = 6; break;
    case 6: 
      var $13=$bytesleft;
      var $14=((($13)-(1))|0);
      $bytesleft=$14;
      var $15=(($14)|0)==0;
      if ($15) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -239);
      throw "Reached an unreachable!"
    case 8: 
      var $18=$thischar;
      $lastchar=$18;
      var $19=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 8);
      $thischar=$19;
      var $20=$lastchar;
      var $21=(($20)|0)==255;
      if ($21) { __label__ = 9; break; } else { __label__ = 15; break; }
    case 9: 
      var $23=$thischar;
      var $24=(($23)|0)==216;
      if ($24) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      __label__ = 16; break;
    case 11: 
      var $27=$thischar;
      var $28=(($27)|0)==217;
      if ($28) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -239);
      throw "Reached an unreachable!"
    case 13: 
      __label__ = 14; break;
    case 14: 
      __label__ = 15; break;
    case 15: 
      __label__ = 6; break;
    case 16: 
      var $34=(($2+9084)|0);
      var $35=HEAPU32[(($34)>>2)];
      var $36=$35 >>> 24;
      var $37=$36 & 255;
      $thischar=$37;
      var $38=$thischar;
      var $39=(($38)|0)!=255;
      if ($39) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -239);
      throw "Reached an unreachable!"
    case 18: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder17locate_soi_markerEv["X"]=1;

function __ZN4jpgd12jpeg_decoder17locate_sof_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $c;
      $1=$this;
      var $2=$1;
      __ZN4jpgd12jpeg_decoder17locate_soi_markerEv($2);
      var $3=__ZN4jpgd12jpeg_decoder15process_markersEv($2);
      $c=$3;
      var $4=$c;
      if ((($4)|0) == 194) {
        __label__ = 3; break;
      }
      else if ((($4)|0) == 192 || (($4)|0) == 193) {
        __label__ = 4; break;
      }
      else if ((($4)|0) == 201) {
        __label__ = 5; break;
      }
      else {
      __label__ = 6; break;
      }
      
    case 3: 
      var $6=(($2+56)|0);
      HEAP32[(($6)>>2)]=1;
      __label__ = 4; break;
    case 4: 
      __ZN4jpgd12jpeg_decoder15read_sof_markerEv($2);
      __label__ = 7; break;
    case 5: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -241);
      throw "Reached an unreachable!"
    case 6: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -238);
      throw "Reached an unreachable!"
    case 7: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder17locate_sos_markerEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $c;
      $2=$this;
      var $3=$2;
      var $4=__ZN4jpgd12jpeg_decoder15process_markersEv($3);
      $c=$4;
      var $5=$c;
      var $6=(($5)|0)==217;
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      $1=0;
      __label__ = 8; break;
    case 4: 
      var $9=$c;
      var $10=(($9)|0)!=218;
      if ($10) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($3, -240);
      throw "Reached an unreachable!"
    case 6: 
      __label__ = 7; break;
    case 7: 
      __ZN4jpgd12jpeg_decoder15read_sos_markerEv($3);
      $1=1;
      __label__ = 8; break;
    case 8: 
      var $15=$1;
      ;
      return $15;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder20transform_mcu_expandEi($this, $mcu_row) {
  var __stackBase__  = STACKTOP; STACKTOP += 512; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $pSrc_ptr;
      var $pDst_ptr;
      var $mcu_block;
      var $temp_block=__stackBase__;
      var $i;
      var $P=(__stackBase__)+(128);
      var $Q=(__stackBase__)+(192);
      var $R=(__stackBase__)+(256);
      var $S=(__stackBase__)+(320);
      var $max_zag;
      var $a=(__stackBase__)+(384);
      var $b;
      var $c=(__stackBase__)+(448);
      var $d;
      $1=$this;
      $2=$mcu_row;
      var $3=$1;
      var $4=(($3+9144)|0);
      var $5=HEAP32[(($4)>>2)];
      $pSrc_ptr=$5;
      var $6=(($3+9188)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=$2;
      var $9=(($3+9108)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=((($8)*($10))|0);
      var $12=((($11<<6))|0);
      var $13=(($7+$12)|0);
      $pDst_ptr=$13;
      $mcu_block=0;
      __label__ = 3; break;
    case 3: 
      var $15=$mcu_block;
      var $16=(($3+9116)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=(($15)|0) < (($17)|0);
      if ($18) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $20=$pSrc_ptr;
      var $21=$pDst_ptr;
      var $22=$mcu_block;
      var $23=(($3+9148)|0);
      var $24=(($23+($22<<2))|0);
      var $25=HEAP32[(($24)>>2)];
      __ZN4jpgd4idctEPKsPhi($20, $21, $25);
      var $26=$pSrc_ptr;
      var $27=(($26+128)|0);
      $pSrc_ptr=$27;
      var $28=$pDst_ptr;
      var $29=(($28+64)|0);
      $pDst_ptr=$29;
      __label__ = 5; break;
    case 5: 
      var $31=$mcu_block;
      var $32=((($31)+(1))|0);
      $mcu_block=$32;
      __label__ = 3; break;
    case 6: 
      $i=0;
      __label__ = 7; break;
    case 7: 
      var $35=$i;
      var $36=(($35)|0) < 2;
      if ($36) { __label__ = 8; break; } else { __label__ = 35; break; }
    case 8: 
      __ZN4jpgd12DCT_Upsample8Matrix44C1Ev($P);
      __ZN4jpgd12DCT_Upsample8Matrix44C1Ev($Q);
      __ZN4jpgd12DCT_Upsample8Matrix44C1Ev($R);
      __ZN4jpgd12DCT_Upsample8Matrix44C1Ev($S);
      var $38=$mcu_block;
      var $39=(($3+9148)|0);
      var $40=(($39+($38<<2))|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($41)|0) >= 1;
      if ($42) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      __label__ = 11; break;
    case 10: 
      ___assert_func(((STRING_TABLE.__str114)|0), 1537, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder20transform_mcu_expandEi)|0), ((STRING_TABLE.__str4118)|0));
      __label__ = 11; break;
    case 11: 
      var $46=$mcu_block;
      var $47=(($3+9148)|0);
      var $48=(($47+($46<<2))|0);
      var $49=HEAP32[(($48)>>2)];
      var $50=(($49)|0) <= 64;
      if ($50) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      __label__ = 14; break;
    case 13: 
      ___assert_func(((STRING_TABLE.__str114)|0), 1538, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder20transform_mcu_expandEi)|0), ((STRING_TABLE.__str5119)|0));
      __label__ = 14; break;
    case 14: 
      var $54=$mcu_block;
      var $55=((($54)+(1))|0);
      $mcu_block=$55;
      var $56=(($3+9148)|0);
      var $57=(($56+($54<<2))|0);
      var $58=HEAP32[(($57)>>2)];
      var $59=((($58)-(1))|0);
      $max_zag=$59;
      var $60=$max_zag;
      var $61=(($60)|0) <= 0;
      if ($61) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      $max_zag=0;
      __label__ = 16; break;
    case 16: 
      var $64=$max_zag;
      var $65=((STRING_TABLE.__ZN4jpgdL8s_max_rcE+$64)|0);
      var $66=HEAPU8[($65)];
      var $67=(($66)&255);
      if ((($67)|0) == 17) {
        __label__ = 17; break;
      }
      else if ((($67)|0) == 18) {
        __label__ = 18; break;
      }
      else if ((($67)|0) == 34) {
        __label__ = 19; break;
      }
      else if ((($67)|0) == 50) {
        __label__ = 20; break;
      }
      else if ((($67)|0) == 51) {
        __label__ = 21; break;
      }
      else if ((($67)|0) == 52) {
        __label__ = 22; break;
      }
      else if ((($67)|0) == 68) {
        __label__ = 23; break;
      }
      else if ((($67)|0) == 84) {
        __label__ = 24; break;
      }
      else if ((($67)|0) == 85) {
        __label__ = 25; break;
      }
      else if ((($67)|0) == 86) {
        __label__ = 26; break;
      }
      else if ((($67)|0) == 102) {
        __label__ = 27; break;
      }
      else if ((($67)|0) == 118) {
        __label__ = 28; break;
      }
      else if ((($67)|0) == 119) {
        __label__ = 29; break;
      }
      else if ((($67)|0) == 120) {
        __label__ = 30; break;
      }
      else if ((($67)|0) == 136) {
        __label__ = 31; break;
      }
      else {
      __label__ = 32; break;
      }
      
    case 17: 
      var $69=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $69);
      var $70=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $70);
      __label__ = 33; break;
    case 18: 
      var $72=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $72);
      var $73=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $73);
      __label__ = 33; break;
    case 19: 
      var $75=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $75);
      var $76=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $76);
      __label__ = 33; break;
    case 20: 
      var $78=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $78);
      var $79=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $79);
      __label__ = 33; break;
    case 21: 
      var $81=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $81);
      var $82=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $82);
      __label__ = 33; break;
    case 22: 
      var $84=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $84);
      var $85=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $85);
      __label__ = 33; break;
    case 23: 
      var $87=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $87);
      var $88=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $88);
      __label__ = 33; break;
    case 24: 
      var $90=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $90);
      var $91=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $91);
      __label__ = 33; break;
    case 25: 
      var $93=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $93);
      var $94=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $94);
      __label__ = 33; break;
    case 26: 
      var $96=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $96);
      var $97=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $97);
      __label__ = 33; break;
    case 27: 
      var $99=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $99);
      var $100=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $100);
      __label__ = 33; break;
    case 28: 
      var $102=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $102);
      var $103=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $103);
      __label__ = 33; break;
    case 29: 
      var $105=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $105);
      var $106=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $106);
      __label__ = 33; break;
    case 30: 
      var $108=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $108);
      var $109=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $109);
      __label__ = 33; break;
    case 31: 
      var $111=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3P_QILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $111);
      var $112=$pSrc_ptr;
      __ZN4jpgd12DCT_Upsample3R_SILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $112);
      __label__ = 33; break;
    case 32: 
      ___assert_func(((STRING_TABLE.__str114)|0), 1605, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder20transform_mcu_expandEi)|0), ((STRING_TABLE.__str6120)|0));
      __label__ = 33; break;
    case 33: 
      __ZN4jpgd12DCT_UpsampleplERKNS0_8Matrix44ES3_($a, $P, $Q);
      var $115=__ZN4jpgd12DCT_Upsample8Matrix44mIERKS1_($P, $Q);
      $b=$P;
      __ZN4jpgd12DCT_UpsampleplERKNS0_8Matrix44ES3_($c, $R, $S);
      var $116=__ZN4jpgd12DCT_Upsample8Matrix44mIERKS1_($R, $S);
      $d=$R;
      var $117=(($temp_block)|0);
      __ZN4jpgd12DCT_Upsample8Matrix4413add_and_storeEPsRKS1_S4_($117, $a, $c);
      var $118=(($temp_block)|0);
      var $119=$pDst_ptr;
      __ZN4jpgd8idct_4x4EPKsPh($118, $119);
      var $120=$pDst_ptr;
      var $121=(($120+64)|0);
      $pDst_ptr=$121;
      var $122=(($temp_block)|0);
      __ZN4jpgd12DCT_Upsample8Matrix4413sub_and_storeEPsRKS1_S4_($122, $a, $c);
      var $123=(($temp_block)|0);
      var $124=$pDst_ptr;
      __ZN4jpgd8idct_4x4EPKsPh($123, $124);
      var $125=$pDst_ptr;
      var $126=(($125+64)|0);
      $pDst_ptr=$126;
      var $127=(($temp_block)|0);
      var $128=$b;
      var $129=$d;
      __ZN4jpgd12DCT_Upsample8Matrix4413add_and_storeEPsRKS1_S4_($127, $128, $129);
      var $130=(($temp_block)|0);
      var $131=$pDst_ptr;
      __ZN4jpgd8idct_4x4EPKsPh($130, $131);
      var $132=$pDst_ptr;
      var $133=(($132+64)|0);
      $pDst_ptr=$133;
      var $134=(($temp_block)|0);
      var $135=$b;
      var $136=$d;
      __ZN4jpgd12DCT_Upsample8Matrix4413sub_and_storeEPsRKS1_S4_($134, $135, $136);
      var $137=(($temp_block)|0);
      var $138=$pDst_ptr;
      __ZN4jpgd8idct_4x4EPKsPh($137, $138);
      var $139=$pDst_ptr;
      var $140=(($139+64)|0);
      $pDst_ptr=$140;
      var $141=$pSrc_ptr;
      var $142=(($141+128)|0);
      $pSrc_ptr=$142;
      __label__ = 34; break;
    case 34: 
      var $144=$i;
      var $145=((($144)+(1))|0);
      $i=$145;
      __label__ = 7; break;
    case 35: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder20transform_mcu_expandEi["X"]=1;

function __ZN4jpgd12DCT_Upsample8Matrix44C1Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZN4jpgd12DCT_Upsample8Matrix44C2Ev($2);
  ;
  return;
}


function __ZN4jpgd12DCT_Upsample3P_QILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  $X001=0;
  $X002=0;
  $X003=0;
  $X004=0;
  $X005=0;
  $X006=0;
  $X007=0;
  $X010=0;
  $X011=0;
  $X012=0;
  $X013=0;
  $X014=0;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  $X030=0;
  $X031=0;
  $X032=0;
  $X033=0;
  $X034=0;
  $X035=0;
  $X036=0;
  $X037=0;
  var $8=$X000;
  var $9=$1;
  var $10=__ZN4jpgd12DCT_Upsample8Matrix442atEii($9, 0, 0);
  HEAP32[(($10)>>2)]=$8;
  var $11=$1;
  var $12=__ZN4jpgd12DCT_Upsample8Matrix442atEii($11, 0, 1);
  HEAP32[(($12)>>2)]=0;
  var $13=$1;
  var $14=__ZN4jpgd12DCT_Upsample8Matrix442atEii($13, 0, 2);
  HEAP32[(($14)>>2)]=0;
  var $15=$1;
  var $16=__ZN4jpgd12DCT_Upsample8Matrix442atEii($15, 0, 3);
  HEAP32[(($16)>>2)]=0;
  var $17=$1;
  var $18=__ZN4jpgd12DCT_Upsample8Matrix442atEii($17, 1, 0);
  HEAP32[(($18)>>2)]=0;
  var $19=$1;
  var $20=__ZN4jpgd12DCT_Upsample8Matrix442atEii($19, 1, 1);
  HEAP32[(($20)>>2)]=0;
  var $21=$1;
  var $22=__ZN4jpgd12DCT_Upsample8Matrix442atEii($21, 1, 2);
  HEAP32[(($22)>>2)]=0;
  var $23=$1;
  var $24=__ZN4jpgd12DCT_Upsample8Matrix442atEii($23, 1, 3);
  HEAP32[(($24)>>2)]=0;
  var $25=$1;
  var $26=__ZN4jpgd12DCT_Upsample8Matrix442atEii($25, 2, 0);
  HEAP32[(($26)>>2)]=0;
  var $27=$1;
  var $28=__ZN4jpgd12DCT_Upsample8Matrix442atEii($27, 2, 1);
  HEAP32[(($28)>>2)]=0;
  var $29=$1;
  var $30=__ZN4jpgd12DCT_Upsample8Matrix442atEii($29, 2, 2);
  HEAP32[(($30)>>2)]=0;
  var $31=$1;
  var $32=__ZN4jpgd12DCT_Upsample8Matrix442atEii($31, 2, 3);
  HEAP32[(($32)>>2)]=0;
  var $33=$1;
  var $34=__ZN4jpgd12DCT_Upsample8Matrix442atEii($33, 3, 0);
  HEAP32[(($34)>>2)]=0;
  var $35=$1;
  var $36=__ZN4jpgd12DCT_Upsample8Matrix442atEii($35, 3, 1);
  HEAP32[(($36)>>2)]=0;
  var $37=$1;
  var $38=__ZN4jpgd12DCT_Upsample8Matrix442atEii($37, 3, 2);
  HEAP32[(($38)>>2)]=0;
  var $39=$1;
  var $40=__ZN4jpgd12DCT_Upsample8Matrix442atEii($39, 3, 3);
  HEAP32[(($40)>>2)]=0;
  var $41=$2;
  var $42=__ZN4jpgd12DCT_Upsample8Matrix442atEii($41, 0, 0);
  HEAP32[(($42)>>2)]=0;
  var $43=$2;
  var $44=__ZN4jpgd12DCT_Upsample8Matrix442atEii($43, 0, 1);
  HEAP32[(($44)>>2)]=0;
  var $45=$2;
  var $46=__ZN4jpgd12DCT_Upsample8Matrix442atEii($45, 0, 2);
  HEAP32[(($46)>>2)]=0;
  var $47=$2;
  var $48=__ZN4jpgd12DCT_Upsample8Matrix442atEii($47, 0, 3);
  HEAP32[(($48)>>2)]=0;
  var $49=$2;
  var $50=__ZN4jpgd12DCT_Upsample8Matrix442atEii($49, 1, 0);
  HEAP32[(($50)>>2)]=0;
  var $51=$2;
  var $52=__ZN4jpgd12DCT_Upsample8Matrix442atEii($51, 1, 1);
  HEAP32[(($52)>>2)]=0;
  var $53=$2;
  var $54=__ZN4jpgd12DCT_Upsample8Matrix442atEii($53, 1, 2);
  HEAP32[(($54)>>2)]=0;
  var $55=$2;
  var $56=__ZN4jpgd12DCT_Upsample8Matrix442atEii($55, 1, 3);
  HEAP32[(($56)>>2)]=0;
  var $57=$2;
  var $58=__ZN4jpgd12DCT_Upsample8Matrix442atEii($57, 2, 0);
  HEAP32[(($58)>>2)]=0;
  var $59=$2;
  var $60=__ZN4jpgd12DCT_Upsample8Matrix442atEii($59, 2, 1);
  HEAP32[(($60)>>2)]=0;
  var $61=$2;
  var $62=__ZN4jpgd12DCT_Upsample8Matrix442atEii($61, 2, 2);
  HEAP32[(($62)>>2)]=0;
  var $63=$2;
  var $64=__ZN4jpgd12DCT_Upsample8Matrix442atEii($63, 2, 3);
  HEAP32[(($64)>>2)]=0;
  var $65=$2;
  var $66=__ZN4jpgd12DCT_Upsample8Matrix442atEii($65, 3, 0);
  HEAP32[(($66)>>2)]=0;
  var $67=$2;
  var $68=__ZN4jpgd12DCT_Upsample8Matrix442atEii($67, 3, 1);
  HEAP32[(($68)>>2)]=0;
  var $69=$2;
  var $70=__ZN4jpgd12DCT_Upsample8Matrix442atEii($69, 3, 2);
  HEAP32[(($70)>>2)]=0;
  var $71=$2;
  var $72=__ZN4jpgd12DCT_Upsample8Matrix442atEii($71, 3, 3);
  HEAP32[(($72)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  $X100=0;
  $X101=0;
  $X102=0;
  $X103=0;
  $X104=0;
  $X105=0;
  $X106=0;
  $X107=0;
  $X110=0;
  $X111=0;
  $X112=0;
  $X113=0;
  $X114=0;
  $X115=0;
  $X116=0;
  $X117=0;
  $X120=0;
  $X121=0;
  $X122=0;
  $X123=0;
  $X124=0;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $4=$1;
  var $5=__ZN4jpgd12DCT_Upsample8Matrix442atEii($4, 0, 0);
  HEAP32[(($5)>>2)]=0;
  var $6=$1;
  var $7=__ZN4jpgd12DCT_Upsample8Matrix442atEii($6, 0, 1);
  HEAP32[(($7)>>2)]=0;
  var $8=$1;
  var $9=__ZN4jpgd12DCT_Upsample8Matrix442atEii($8, 0, 2);
  HEAP32[(($9)>>2)]=0;
  var $10=$1;
  var $11=__ZN4jpgd12DCT_Upsample8Matrix442atEii($10, 0, 3);
  HEAP32[(($11)>>2)]=0;
  var $12=$1;
  var $13=__ZN4jpgd12DCT_Upsample8Matrix442atEii($12, 1, 0);
  HEAP32[(($13)>>2)]=0;
  var $14=$1;
  var $15=__ZN4jpgd12DCT_Upsample8Matrix442atEii($14, 1, 1);
  HEAP32[(($15)>>2)]=0;
  var $16=$1;
  var $17=__ZN4jpgd12DCT_Upsample8Matrix442atEii($16, 1, 2);
  HEAP32[(($17)>>2)]=0;
  var $18=$1;
  var $19=__ZN4jpgd12DCT_Upsample8Matrix442atEii($18, 1, 3);
  HEAP32[(($19)>>2)]=0;
  var $20=$1;
  var $21=__ZN4jpgd12DCT_Upsample8Matrix442atEii($20, 2, 0);
  HEAP32[(($21)>>2)]=0;
  var $22=$1;
  var $23=__ZN4jpgd12DCT_Upsample8Matrix442atEii($22, 2, 1);
  HEAP32[(($23)>>2)]=0;
  var $24=$1;
  var $25=__ZN4jpgd12DCT_Upsample8Matrix442atEii($24, 2, 2);
  HEAP32[(($25)>>2)]=0;
  var $26=$1;
  var $27=__ZN4jpgd12DCT_Upsample8Matrix442atEii($26, 2, 3);
  HEAP32[(($27)>>2)]=0;
  var $28=$1;
  var $29=__ZN4jpgd12DCT_Upsample8Matrix442atEii($28, 3, 0);
  HEAP32[(($29)>>2)]=0;
  var $30=$1;
  var $31=__ZN4jpgd12DCT_Upsample8Matrix442atEii($30, 3, 1);
  HEAP32[(($31)>>2)]=0;
  var $32=$1;
  var $33=__ZN4jpgd12DCT_Upsample8Matrix442atEii($32, 3, 2);
  HEAP32[(($33)>>2)]=0;
  var $34=$1;
  var $35=__ZN4jpgd12DCT_Upsample8Matrix442atEii($34, 3, 3);
  HEAP32[(($35)>>2)]=0;
  var $36=$2;
  var $37=__ZN4jpgd12DCT_Upsample8Matrix442atEii($36, 0, 0);
  HEAP32[(($37)>>2)]=0;
  var $38=$2;
  var $39=__ZN4jpgd12DCT_Upsample8Matrix442atEii($38, 0, 1);
  HEAP32[(($39)>>2)]=0;
  var $40=$2;
  var $41=__ZN4jpgd12DCT_Upsample8Matrix442atEii($40, 0, 2);
  HEAP32[(($41)>>2)]=0;
  var $42=$2;
  var $43=__ZN4jpgd12DCT_Upsample8Matrix442atEii($42, 0, 3);
  HEAP32[(($43)>>2)]=0;
  var $44=$2;
  var $45=__ZN4jpgd12DCT_Upsample8Matrix442atEii($44, 1, 0);
  HEAP32[(($45)>>2)]=0;
  var $46=$2;
  var $47=__ZN4jpgd12DCT_Upsample8Matrix442atEii($46, 1, 1);
  HEAP32[(($47)>>2)]=0;
  var $48=$2;
  var $49=__ZN4jpgd12DCT_Upsample8Matrix442atEii($48, 1, 2);
  HEAP32[(($49)>>2)]=0;
  var $50=$2;
  var $51=__ZN4jpgd12DCT_Upsample8Matrix442atEii($50, 1, 3);
  HEAP32[(($51)>>2)]=0;
  var $52=$2;
  var $53=__ZN4jpgd12DCT_Upsample8Matrix442atEii($52, 2, 0);
  HEAP32[(($53)>>2)]=0;
  var $54=$2;
  var $55=__ZN4jpgd12DCT_Upsample8Matrix442atEii($54, 2, 1);
  HEAP32[(($55)>>2)]=0;
  var $56=$2;
  var $57=__ZN4jpgd12DCT_Upsample8Matrix442atEii($56, 2, 2);
  HEAP32[(($57)>>2)]=0;
  var $58=$2;
  var $59=__ZN4jpgd12DCT_Upsample8Matrix442atEii($58, 2, 3);
  HEAP32[(($59)>>2)]=0;
  var $60=$2;
  var $61=__ZN4jpgd12DCT_Upsample8Matrix442atEii($60, 3, 0);
  HEAP32[(($61)>>2)]=0;
  var $62=$2;
  var $63=__ZN4jpgd12DCT_Upsample8Matrix442atEii($62, 3, 1);
  HEAP32[(($63)>>2)]=0;
  var $64=$2;
  var $65=__ZN4jpgd12DCT_Upsample8Matrix442atEii($64, 3, 2);
  HEAP32[(($65)>>2)]=0;
  var $66=$2;
  var $67=__ZN4jpgd12DCT_Upsample8Matrix442atEii($66, 3, 3);
  HEAP32[(($67)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  $X001=0;
  $X002=0;
  $X003=0;
  $X004=0;
  $X005=0;
  $X006=0;
  $X007=0;
  var $8=$3;
  var $9=(($8+2)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  var $12=((($11)*(426))|0);
  var $13=(($12)|0);
  var $14=(($13)|0);
  var $15=(($14)|0);
  var $16=((($15)+(512))|0);
  var $17=$16 >> 10;
  $X010=$17;
  $X011=0;
  $X012=0;
  $X013=0;
  $X014=0;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  var $18=$3;
  var $19=(($18+2)|0);
  var $20=HEAP16[(($19)>>1)];
  var $21=(($20 << 16) >> 16);
  var $22=((($21)*(23))|0);
  var $23=(($22)|0);
  var $24=(($23)|0);
  var $25=(($24)|0);
  var $26=((($25)+(512))|0);
  var $27=$26 >> 10;
  $X030=$27;
  $X031=0;
  $X032=0;
  $X033=0;
  $X034=0;
  $X035=0;
  $X036=0;
  $X037=0;
  var $28=$X000;
  var $29=$1;
  var $30=__ZN4jpgd12DCT_Upsample8Matrix442atEii($29, 0, 0);
  HEAP32[(($30)>>2)]=$28;
  var $31=$1;
  var $32=__ZN4jpgd12DCT_Upsample8Matrix442atEii($31, 0, 1);
  HEAP32[(($32)>>2)]=0;
  var $33=$1;
  var $34=__ZN4jpgd12DCT_Upsample8Matrix442atEii($33, 0, 2);
  HEAP32[(($34)>>2)]=0;
  var $35=$1;
  var $36=__ZN4jpgd12DCT_Upsample8Matrix442atEii($35, 0, 3);
  HEAP32[(($36)>>2)]=0;
  var $37=$X010;
  var $38=$1;
  var $39=__ZN4jpgd12DCT_Upsample8Matrix442atEii($38, 1, 0);
  HEAP32[(($39)>>2)]=$37;
  var $40=$1;
  var $41=__ZN4jpgd12DCT_Upsample8Matrix442atEii($40, 1, 1);
  HEAP32[(($41)>>2)]=0;
  var $42=$1;
  var $43=__ZN4jpgd12DCT_Upsample8Matrix442atEii($42, 1, 2);
  HEAP32[(($43)>>2)]=0;
  var $44=$1;
  var $45=__ZN4jpgd12DCT_Upsample8Matrix442atEii($44, 1, 3);
  HEAP32[(($45)>>2)]=0;
  var $46=$1;
  var $47=__ZN4jpgd12DCT_Upsample8Matrix442atEii($46, 2, 0);
  HEAP32[(($47)>>2)]=0;
  var $48=$1;
  var $49=__ZN4jpgd12DCT_Upsample8Matrix442atEii($48, 2, 1);
  HEAP32[(($49)>>2)]=0;
  var $50=$1;
  var $51=__ZN4jpgd12DCT_Upsample8Matrix442atEii($50, 2, 2);
  HEAP32[(($51)>>2)]=0;
  var $52=$1;
  var $53=__ZN4jpgd12DCT_Upsample8Matrix442atEii($52, 2, 3);
  HEAP32[(($53)>>2)]=0;
  var $54=$X030;
  var $55=$1;
  var $56=__ZN4jpgd12DCT_Upsample8Matrix442atEii($55, 3, 0);
  HEAP32[(($56)>>2)]=$54;
  var $57=$1;
  var $58=__ZN4jpgd12DCT_Upsample8Matrix442atEii($57, 3, 1);
  HEAP32[(($58)>>2)]=0;
  var $59=$1;
  var $60=__ZN4jpgd12DCT_Upsample8Matrix442atEii($59, 3, 2);
  HEAP32[(($60)>>2)]=0;
  var $61=$1;
  var $62=__ZN4jpgd12DCT_Upsample8Matrix442atEii($61, 3, 3);
  HEAP32[(($62)>>2)]=0;
  var $63=$2;
  var $64=__ZN4jpgd12DCT_Upsample8Matrix442atEii($63, 0, 0);
  HEAP32[(($64)>>2)]=0;
  var $65=$2;
  var $66=__ZN4jpgd12DCT_Upsample8Matrix442atEii($65, 0, 1);
  HEAP32[(($66)>>2)]=0;
  var $67=$2;
  var $68=__ZN4jpgd12DCT_Upsample8Matrix442atEii($67, 0, 2);
  HEAP32[(($68)>>2)]=0;
  var $69=$2;
  var $70=__ZN4jpgd12DCT_Upsample8Matrix442atEii($69, 0, 3);
  HEAP32[(($70)>>2)]=0;
  var $71=$2;
  var $72=__ZN4jpgd12DCT_Upsample8Matrix442atEii($71, 1, 0);
  HEAP32[(($72)>>2)]=0;
  var $73=$2;
  var $74=__ZN4jpgd12DCT_Upsample8Matrix442atEii($73, 1, 1);
  HEAP32[(($74)>>2)]=0;
  var $75=$2;
  var $76=__ZN4jpgd12DCT_Upsample8Matrix442atEii($75, 1, 2);
  HEAP32[(($76)>>2)]=0;
  var $77=$2;
  var $78=__ZN4jpgd12DCT_Upsample8Matrix442atEii($77, 1, 3);
  HEAP32[(($78)>>2)]=0;
  var $79=$2;
  var $80=__ZN4jpgd12DCT_Upsample8Matrix442atEii($79, 2, 0);
  HEAP32[(($80)>>2)]=0;
  var $81=$2;
  var $82=__ZN4jpgd12DCT_Upsample8Matrix442atEii($81, 2, 1);
  HEAP32[(($82)>>2)]=0;
  var $83=$2;
  var $84=__ZN4jpgd12DCT_Upsample8Matrix442atEii($83, 2, 2);
  HEAP32[(($84)>>2)]=0;
  var $85=$2;
  var $86=__ZN4jpgd12DCT_Upsample8Matrix442atEii($85, 2, 3);
  HEAP32[(($86)>>2)]=0;
  var $87=$2;
  var $88=__ZN4jpgd12DCT_Upsample8Matrix442atEii($87, 3, 0);
  HEAP32[(($88)>>2)]=0;
  var $89=$2;
  var $90=__ZN4jpgd12DCT_Upsample8Matrix442atEii($89, 3, 1);
  HEAP32[(($90)>>2)]=0;
  var $91=$2;
  var $92=__ZN4jpgd12DCT_Upsample8Matrix442atEii($91, 3, 2);
  HEAP32[(($92)>>2)]=0;
  var $93=$2;
  var $94=__ZN4jpgd12DCT_Upsample8Matrix442atEii($93, 3, 3);
  HEAP32[(($94)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=(($8)|0);
  var $10=(($9)|0);
  var $11=(($10)|0);
  var $12=((($11)+(512))|0);
  var $13=$12 >> 10;
  $X100=$13;
  $X101=0;
  $X102=0;
  $X103=0;
  $X104=0;
  $X105=0;
  $X106=0;
  $X107=0;
  $X110=0;
  $X111=0;
  $X112=0;
  $X113=0;
  $X114=0;
  $X115=0;
  $X116=0;
  $X117=0;
  var $14=$3;
  var $15=(($14+2)|0);
  var $16=HEAP16[(($15)>>1)];
  var $17=(($16 << 16) >> 16);
  var $18=((($17)*(-75))|0);
  var $19=(($18)|0);
  var $20=(($19)|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X120=$23;
  $X121=0;
  $X122=0;
  $X123=0;
  $X124=0;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $24=$X100;
  var $25=$1;
  var $26=__ZN4jpgd12DCT_Upsample8Matrix442atEii($25, 0, 0);
  HEAP32[(($26)>>2)]=$24;
  var $27=$1;
  var $28=__ZN4jpgd12DCT_Upsample8Matrix442atEii($27, 0, 1);
  HEAP32[(($28)>>2)]=0;
  var $29=$1;
  var $30=__ZN4jpgd12DCT_Upsample8Matrix442atEii($29, 0, 2);
  HEAP32[(($30)>>2)]=0;
  var $31=$1;
  var $32=__ZN4jpgd12DCT_Upsample8Matrix442atEii($31, 0, 3);
  HEAP32[(($32)>>2)]=0;
  var $33=$1;
  var $34=__ZN4jpgd12DCT_Upsample8Matrix442atEii($33, 1, 0);
  HEAP32[(($34)>>2)]=0;
  var $35=$1;
  var $36=__ZN4jpgd12DCT_Upsample8Matrix442atEii($35, 1, 1);
  HEAP32[(($36)>>2)]=0;
  var $37=$1;
  var $38=__ZN4jpgd12DCT_Upsample8Matrix442atEii($37, 1, 2);
  HEAP32[(($38)>>2)]=0;
  var $39=$1;
  var $40=__ZN4jpgd12DCT_Upsample8Matrix442atEii($39, 1, 3);
  HEAP32[(($40)>>2)]=0;
  var $41=$X120;
  var $42=$1;
  var $43=__ZN4jpgd12DCT_Upsample8Matrix442atEii($42, 2, 0);
  HEAP32[(($43)>>2)]=$41;
  var $44=$1;
  var $45=__ZN4jpgd12DCT_Upsample8Matrix442atEii($44, 2, 1);
  HEAP32[(($45)>>2)]=0;
  var $46=$1;
  var $47=__ZN4jpgd12DCT_Upsample8Matrix442atEii($46, 2, 2);
  HEAP32[(($47)>>2)]=0;
  var $48=$1;
  var $49=__ZN4jpgd12DCT_Upsample8Matrix442atEii($48, 2, 3);
  HEAP32[(($49)>>2)]=0;
  var $50=$1;
  var $51=__ZN4jpgd12DCT_Upsample8Matrix442atEii($50, 3, 0);
  HEAP32[(($51)>>2)]=0;
  var $52=$1;
  var $53=__ZN4jpgd12DCT_Upsample8Matrix442atEii($52, 3, 1);
  HEAP32[(($53)>>2)]=0;
  var $54=$1;
  var $55=__ZN4jpgd12DCT_Upsample8Matrix442atEii($54, 3, 2);
  HEAP32[(($55)>>2)]=0;
  var $56=$1;
  var $57=__ZN4jpgd12DCT_Upsample8Matrix442atEii($56, 3, 3);
  HEAP32[(($57)>>2)]=0;
  var $58=$2;
  var $59=__ZN4jpgd12DCT_Upsample8Matrix442atEii($58, 0, 0);
  HEAP32[(($59)>>2)]=0;
  var $60=$2;
  var $61=__ZN4jpgd12DCT_Upsample8Matrix442atEii($60, 0, 1);
  HEAP32[(($61)>>2)]=0;
  var $62=$2;
  var $63=__ZN4jpgd12DCT_Upsample8Matrix442atEii($62, 0, 2);
  HEAP32[(($63)>>2)]=0;
  var $64=$2;
  var $65=__ZN4jpgd12DCT_Upsample8Matrix442atEii($64, 0, 3);
  HEAP32[(($65)>>2)]=0;
  var $66=$2;
  var $67=__ZN4jpgd12DCT_Upsample8Matrix442atEii($66, 1, 0);
  HEAP32[(($67)>>2)]=0;
  var $68=$2;
  var $69=__ZN4jpgd12DCT_Upsample8Matrix442atEii($68, 1, 1);
  HEAP32[(($69)>>2)]=0;
  var $70=$2;
  var $71=__ZN4jpgd12DCT_Upsample8Matrix442atEii($70, 1, 2);
  HEAP32[(($71)>>2)]=0;
  var $72=$2;
  var $73=__ZN4jpgd12DCT_Upsample8Matrix442atEii($72, 1, 3);
  HEAP32[(($73)>>2)]=0;
  var $74=$2;
  var $75=__ZN4jpgd12DCT_Upsample8Matrix442atEii($74, 2, 0);
  HEAP32[(($75)>>2)]=0;
  var $76=$2;
  var $77=__ZN4jpgd12DCT_Upsample8Matrix442atEii($76, 2, 1);
  HEAP32[(($77)>>2)]=0;
  var $78=$2;
  var $79=__ZN4jpgd12DCT_Upsample8Matrix442atEii($78, 2, 2);
  HEAP32[(($79)>>2)]=0;
  var $80=$2;
  var $81=__ZN4jpgd12DCT_Upsample8Matrix442atEii($80, 2, 3);
  HEAP32[(($81)>>2)]=0;
  var $82=$2;
  var $83=__ZN4jpgd12DCT_Upsample8Matrix442atEii($82, 3, 0);
  HEAP32[(($83)>>2)]=0;
  var $84=$2;
  var $85=__ZN4jpgd12DCT_Upsample8Matrix442atEii($84, 3, 1);
  HEAP32[(($85)>>2)]=0;
  var $86=$2;
  var $87=__ZN4jpgd12DCT_Upsample8Matrix442atEii($86, 3, 2);
  HEAP32[(($87)>>2)]=0;
  var $88=$2;
  var $89=__ZN4jpgd12DCT_Upsample8Matrix442atEii($88, 3, 3);
  HEAP32[(($89)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  $X002=0;
  $X003=0;
  $X004=0;
  $X005=0;
  $X006=0;
  $X007=0;
  var $12=$3;
  var $13=(($12+2)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  var $16=((($15)*(426))|0);
  var $17=(($16)|0);
  var $18=(($17)|0);
  var $19=(($18)|0);
  var $20=((($19)+(512))|0);
  var $21=$20 >> 10;
  $X010=$21;
  var $22=$3;
  var $23=(($22+18)|0);
  var $24=HEAP16[(($23)>>1)];
  var $25=(($24 << 16) >> 16);
  var $26=((($25)*(426))|0);
  var $27=(($26)|0);
  var $28=(($27)|0);
  var $29=(($28)|0);
  var $30=((($29)+(512))|0);
  var $31=$30 >> 10;
  $X011=$31;
  $X012=0;
  $X013=0;
  $X014=0;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  var $32=$3;
  var $33=(($32+2)|0);
  var $34=HEAP16[(($33)>>1)];
  var $35=(($34 << 16) >> 16);
  var $36=((($35)*(23))|0);
  var $37=(($36)|0);
  var $38=(($37)|0);
  var $39=(($38)|0);
  var $40=((($39)+(512))|0);
  var $41=$40 >> 10;
  $X030=$41;
  var $42=$3;
  var $43=(($42+18)|0);
  var $44=HEAP16[(($43)>>1)];
  var $45=(($44 << 16) >> 16);
  var $46=((($45)*(23))|0);
  var $47=(($46)|0);
  var $48=(($47)|0);
  var $49=(($48)|0);
  var $50=((($49)+(512))|0);
  var $51=$50 >> 10;
  $X031=$51;
  $X032=0;
  $X033=0;
  $X034=0;
  $X035=0;
  $X036=0;
  $X037=0;
  var $52=$X000;
  var $53=$1;
  var $54=__ZN4jpgd12DCT_Upsample8Matrix442atEii($53, 0, 0);
  HEAP32[(($54)>>2)]=$52;
  var $55=$X001;
  var $56=((($55)*(426))|0);
  var $57=(($56)|0);
  var $58=(($57)|0);
  var $59=(($58)|0);
  var $60=((($59)+(512))|0);
  var $61=$60 >> 10;
  var $62=$1;
  var $63=__ZN4jpgd12DCT_Upsample8Matrix442atEii($62, 0, 1);
  HEAP32[(($63)>>2)]=$61;
  var $64=$1;
  var $65=__ZN4jpgd12DCT_Upsample8Matrix442atEii($64, 0, 2);
  HEAP32[(($65)>>2)]=0;
  var $66=$X001;
  var $67=((($66)*(23))|0);
  var $68=(($67)|0);
  var $69=(($68)|0);
  var $70=(($69)|0);
  var $71=((($70)+(512))|0);
  var $72=$71 >> 10;
  var $73=$1;
  var $74=__ZN4jpgd12DCT_Upsample8Matrix442atEii($73, 0, 3);
  HEAP32[(($74)>>2)]=$72;
  var $75=$X010;
  var $76=$1;
  var $77=__ZN4jpgd12DCT_Upsample8Matrix442atEii($76, 1, 0);
  HEAP32[(($77)>>2)]=$75;
  var $78=$X011;
  var $79=((($78)*(426))|0);
  var $80=(($79)|0);
  var $81=(($80)|0);
  var $82=(($81)|0);
  var $83=((($82)+(512))|0);
  var $84=$83 >> 10;
  var $85=$1;
  var $86=__ZN4jpgd12DCT_Upsample8Matrix442atEii($85, 1, 1);
  HEAP32[(($86)>>2)]=$84;
  var $87=$1;
  var $88=__ZN4jpgd12DCT_Upsample8Matrix442atEii($87, 1, 2);
  HEAP32[(($88)>>2)]=0;
  var $89=$X011;
  var $90=((($89)*(23))|0);
  var $91=(($90)|0);
  var $92=(($91)|0);
  var $93=(($92)|0);
  var $94=((($93)+(512))|0);
  var $95=$94 >> 10;
  var $96=$1;
  var $97=__ZN4jpgd12DCT_Upsample8Matrix442atEii($96, 1, 3);
  HEAP32[(($97)>>2)]=$95;
  var $98=$1;
  var $99=__ZN4jpgd12DCT_Upsample8Matrix442atEii($98, 2, 0);
  HEAP32[(($99)>>2)]=0;
  var $100=$1;
  var $101=__ZN4jpgd12DCT_Upsample8Matrix442atEii($100, 2, 1);
  HEAP32[(($101)>>2)]=0;
  var $102=$1;
  var $103=__ZN4jpgd12DCT_Upsample8Matrix442atEii($102, 2, 2);
  HEAP32[(($103)>>2)]=0;
  var $104=$1;
  var $105=__ZN4jpgd12DCT_Upsample8Matrix442atEii($104, 2, 3);
  HEAP32[(($105)>>2)]=0;
  var $106=$X030;
  var $107=$1;
  var $108=__ZN4jpgd12DCT_Upsample8Matrix442atEii($107, 3, 0);
  HEAP32[(($108)>>2)]=$106;
  var $109=$X031;
  var $110=((($109)*(426))|0);
  var $111=(($110)|0);
  var $112=(($111)|0);
  var $113=(($112)|0);
  var $114=((($113)+(512))|0);
  var $115=$114 >> 10;
  var $116=$1;
  var $117=__ZN4jpgd12DCT_Upsample8Matrix442atEii($116, 3, 1);
  HEAP32[(($117)>>2)]=$115;
  var $118=$1;
  var $119=__ZN4jpgd12DCT_Upsample8Matrix442atEii($118, 3, 2);
  HEAP32[(($119)>>2)]=0;
  var $120=$X031;
  var $121=((($120)*(23))|0);
  var $122=(($121)|0);
  var $123=(($122)|0);
  var $124=(($123)|0);
  var $125=((($124)+(512))|0);
  var $126=$125 >> 10;
  var $127=$1;
  var $128=__ZN4jpgd12DCT_Upsample8Matrix442atEii($127, 3, 3);
  HEAP32[(($128)>>2)]=$126;
  var $129=$X001;
  var $130=((($129)*(928))|0);
  var $131=(($130)|0);
  var $132=(($131)|0);
  var $133=(($132)|0);
  var $134=((($133)+(512))|0);
  var $135=$134 >> 10;
  var $136=$2;
  var $137=__ZN4jpgd12DCT_Upsample8Matrix442atEii($136, 0, 0);
  HEAP32[(($137)>>2)]=$135;
  var $138=$2;
  var $139=__ZN4jpgd12DCT_Upsample8Matrix442atEii($138, 0, 1);
  HEAP32[(($139)>>2)]=0;
  var $140=$X001;
  var $141=((($140)*(-75))|0);
  var $142=(($141)|0);
  var $143=(($142)|0);
  var $144=(($143)|0);
  var $145=((($144)+(512))|0);
  var $146=$145 >> 10;
  var $147=$2;
  var $148=__ZN4jpgd12DCT_Upsample8Matrix442atEii($147, 0, 2);
  HEAP32[(($148)>>2)]=$146;
  var $149=$2;
  var $150=__ZN4jpgd12DCT_Upsample8Matrix442atEii($149, 0, 3);
  HEAP32[(($150)>>2)]=0;
  var $151=$X011;
  var $152=((($151)*(928))|0);
  var $153=(($152)|0);
  var $154=(($153)|0);
  var $155=(($154)|0);
  var $156=((($155)+(512))|0);
  var $157=$156 >> 10;
  var $158=$2;
  var $159=__ZN4jpgd12DCT_Upsample8Matrix442atEii($158, 1, 0);
  HEAP32[(($159)>>2)]=$157;
  var $160=$2;
  var $161=__ZN4jpgd12DCT_Upsample8Matrix442atEii($160, 1, 1);
  HEAP32[(($161)>>2)]=0;
  var $162=$X011;
  var $163=((($162)*(-75))|0);
  var $164=(($163)|0);
  var $165=(($164)|0);
  var $166=(($165)|0);
  var $167=((($166)+(512))|0);
  var $168=$167 >> 10;
  var $169=$2;
  var $170=__ZN4jpgd12DCT_Upsample8Matrix442atEii($169, 1, 2);
  HEAP32[(($170)>>2)]=$168;
  var $171=$2;
  var $172=__ZN4jpgd12DCT_Upsample8Matrix442atEii($171, 1, 3);
  HEAP32[(($172)>>2)]=0;
  var $173=$2;
  var $174=__ZN4jpgd12DCT_Upsample8Matrix442atEii($173, 2, 0);
  HEAP32[(($174)>>2)]=0;
  var $175=$2;
  var $176=__ZN4jpgd12DCT_Upsample8Matrix442atEii($175, 2, 1);
  HEAP32[(($176)>>2)]=0;
  var $177=$2;
  var $178=__ZN4jpgd12DCT_Upsample8Matrix442atEii($177, 2, 2);
  HEAP32[(($178)>>2)]=0;
  var $179=$2;
  var $180=__ZN4jpgd12DCT_Upsample8Matrix442atEii($179, 2, 3);
  HEAP32[(($180)>>2)]=0;
  var $181=$X031;
  var $182=((($181)*(928))|0);
  var $183=(($182)|0);
  var $184=(($183)|0);
  var $185=(($184)|0);
  var $186=((($185)+(512))|0);
  var $187=$186 >> 10;
  var $188=$2;
  var $189=__ZN4jpgd12DCT_Upsample8Matrix442atEii($188, 3, 0);
  HEAP32[(($189)>>2)]=$187;
  var $190=$2;
  var $191=__ZN4jpgd12DCT_Upsample8Matrix442atEii($190, 3, 1);
  HEAP32[(($191)>>2)]=0;
  var $192=$X031;
  var $193=((($192)*(-75))|0);
  var $194=(($193)|0);
  var $195=(($194)|0);
  var $196=(($195)|0);
  var $197=((($196)+(512))|0);
  var $198=$197 >> 10;
  var $199=$2;
  var $200=__ZN4jpgd12DCT_Upsample8Matrix442atEii($199, 3, 2);
  HEAP32[(($200)>>2)]=$198;
  var $201=$2;
  var $202=__ZN4jpgd12DCT_Upsample8Matrix442atEii($201, 3, 3);
  HEAP32[(($202)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=(($8)|0);
  var $10=(($9)|0);
  var $11=(($10)|0);
  var $12=((($11)+(512))|0);
  var $13=$12 >> 10;
  $X100=$13;
  var $14=$3;
  var $15=(($14+18)|0);
  var $16=HEAP16[(($15)>>1)];
  var $17=(($16 << 16) >> 16);
  var $18=((($17)*(928))|0);
  var $19=(($18)|0);
  var $20=(($19)|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X101=$23;
  $X102=0;
  $X103=0;
  $X104=0;
  $X105=0;
  $X106=0;
  $X107=0;
  $X110=0;
  $X111=0;
  $X112=0;
  $X113=0;
  $X114=0;
  $X115=0;
  $X116=0;
  $X117=0;
  var $24=$3;
  var $25=(($24+2)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(-75))|0);
  var $29=(($28)|0);
  var $30=(($29)|0);
  var $31=(($30)|0);
  var $32=((($31)+(512))|0);
  var $33=$32 >> 10;
  $X120=$33;
  var $34=$3;
  var $35=(($34+18)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(-75))|0);
  var $39=(($38)|0);
  var $40=(($39)|0);
  var $41=(($40)|0);
  var $42=((($41)+(512))|0);
  var $43=$42 >> 10;
  $X121=$43;
  $X122=0;
  $X123=0;
  $X124=0;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $44=$X100;
  var $45=$1;
  var $46=__ZN4jpgd12DCT_Upsample8Matrix442atEii($45, 0, 0);
  HEAP32[(($46)>>2)]=$44;
  var $47=$X101;
  var $48=((($47)*(426))|0);
  var $49=(($48)|0);
  var $50=(($49)|0);
  var $51=(($50)|0);
  var $52=((($51)+(512))|0);
  var $53=$52 >> 10;
  var $54=$1;
  var $55=__ZN4jpgd12DCT_Upsample8Matrix442atEii($54, 0, 1);
  HEAP32[(($55)>>2)]=$53;
  var $56=$1;
  var $57=__ZN4jpgd12DCT_Upsample8Matrix442atEii($56, 0, 2);
  HEAP32[(($57)>>2)]=0;
  var $58=$X101;
  var $59=((($58)*(23))|0);
  var $60=(($59)|0);
  var $61=(($60)|0);
  var $62=(($61)|0);
  var $63=((($62)+(512))|0);
  var $64=$63 >> 10;
  var $65=$1;
  var $66=__ZN4jpgd12DCT_Upsample8Matrix442atEii($65, 0, 3);
  HEAP32[(($66)>>2)]=$64;
  var $67=$1;
  var $68=__ZN4jpgd12DCT_Upsample8Matrix442atEii($67, 1, 0);
  HEAP32[(($68)>>2)]=0;
  var $69=$1;
  var $70=__ZN4jpgd12DCT_Upsample8Matrix442atEii($69, 1, 1);
  HEAP32[(($70)>>2)]=0;
  var $71=$1;
  var $72=__ZN4jpgd12DCT_Upsample8Matrix442atEii($71, 1, 2);
  HEAP32[(($72)>>2)]=0;
  var $73=$1;
  var $74=__ZN4jpgd12DCT_Upsample8Matrix442atEii($73, 1, 3);
  HEAP32[(($74)>>2)]=0;
  var $75=$X120;
  var $76=$1;
  var $77=__ZN4jpgd12DCT_Upsample8Matrix442atEii($76, 2, 0);
  HEAP32[(($77)>>2)]=$75;
  var $78=$X121;
  var $79=((($78)*(426))|0);
  var $80=(($79)|0);
  var $81=(($80)|0);
  var $82=(($81)|0);
  var $83=((($82)+(512))|0);
  var $84=$83 >> 10;
  var $85=$1;
  var $86=__ZN4jpgd12DCT_Upsample8Matrix442atEii($85, 2, 1);
  HEAP32[(($86)>>2)]=$84;
  var $87=$1;
  var $88=__ZN4jpgd12DCT_Upsample8Matrix442atEii($87, 2, 2);
  HEAP32[(($88)>>2)]=0;
  var $89=$X121;
  var $90=((($89)*(23))|0);
  var $91=(($90)|0);
  var $92=(($91)|0);
  var $93=(($92)|0);
  var $94=((($93)+(512))|0);
  var $95=$94 >> 10;
  var $96=$1;
  var $97=__ZN4jpgd12DCT_Upsample8Matrix442atEii($96, 2, 3);
  HEAP32[(($97)>>2)]=$95;
  var $98=$1;
  var $99=__ZN4jpgd12DCT_Upsample8Matrix442atEii($98, 3, 0);
  HEAP32[(($99)>>2)]=0;
  var $100=$1;
  var $101=__ZN4jpgd12DCT_Upsample8Matrix442atEii($100, 3, 1);
  HEAP32[(($101)>>2)]=0;
  var $102=$1;
  var $103=__ZN4jpgd12DCT_Upsample8Matrix442atEii($102, 3, 2);
  HEAP32[(($103)>>2)]=0;
  var $104=$1;
  var $105=__ZN4jpgd12DCT_Upsample8Matrix442atEii($104, 3, 3);
  HEAP32[(($105)>>2)]=0;
  var $106=$X101;
  var $107=((($106)*(928))|0);
  var $108=(($107)|0);
  var $109=(($108)|0);
  var $110=(($109)|0);
  var $111=((($110)+(512))|0);
  var $112=$111 >> 10;
  var $113=$2;
  var $114=__ZN4jpgd12DCT_Upsample8Matrix442atEii($113, 0, 0);
  HEAP32[(($114)>>2)]=$112;
  var $115=$2;
  var $116=__ZN4jpgd12DCT_Upsample8Matrix442atEii($115, 0, 1);
  HEAP32[(($116)>>2)]=0;
  var $117=$X101;
  var $118=((($117)*(-75))|0);
  var $119=(($118)|0);
  var $120=(($119)|0);
  var $121=(($120)|0);
  var $122=((($121)+(512))|0);
  var $123=$122 >> 10;
  var $124=$2;
  var $125=__ZN4jpgd12DCT_Upsample8Matrix442atEii($124, 0, 2);
  HEAP32[(($125)>>2)]=$123;
  var $126=$2;
  var $127=__ZN4jpgd12DCT_Upsample8Matrix442atEii($126, 0, 3);
  HEAP32[(($127)>>2)]=0;
  var $128=$2;
  var $129=__ZN4jpgd12DCT_Upsample8Matrix442atEii($128, 1, 0);
  HEAP32[(($129)>>2)]=0;
  var $130=$2;
  var $131=__ZN4jpgd12DCT_Upsample8Matrix442atEii($130, 1, 1);
  HEAP32[(($131)>>2)]=0;
  var $132=$2;
  var $133=__ZN4jpgd12DCT_Upsample8Matrix442atEii($132, 1, 2);
  HEAP32[(($133)>>2)]=0;
  var $134=$2;
  var $135=__ZN4jpgd12DCT_Upsample8Matrix442atEii($134, 1, 3);
  HEAP32[(($135)>>2)]=0;
  var $136=$X121;
  var $137=((($136)*(928))|0);
  var $138=(($137)|0);
  var $139=(($138)|0);
  var $140=(($139)|0);
  var $141=((($140)+(512))|0);
  var $142=$141 >> 10;
  var $143=$2;
  var $144=__ZN4jpgd12DCT_Upsample8Matrix442atEii($143, 2, 0);
  HEAP32[(($144)>>2)]=$142;
  var $145=$2;
  var $146=__ZN4jpgd12DCT_Upsample8Matrix442atEii($145, 2, 1);
  HEAP32[(($146)>>2)]=0;
  var $147=$X121;
  var $148=((($147)*(-75))|0);
  var $149=(($148)|0);
  var $150=(($149)|0);
  var $151=(($150)|0);
  var $152=((($151)+(512))|0);
  var $153=$152 >> 10;
  var $154=$2;
  var $155=__ZN4jpgd12DCT_Upsample8Matrix442atEii($154, 2, 2);
  HEAP32[(($155)>>2)]=$153;
  var $156=$2;
  var $157=__ZN4jpgd12DCT_Upsample8Matrix442atEii($156, 2, 3);
  HEAP32[(($157)>>2)]=0;
  var $158=$2;
  var $159=__ZN4jpgd12DCT_Upsample8Matrix442atEii($158, 3, 0);
  HEAP32[(($159)>>2)]=0;
  var $160=$2;
  var $161=__ZN4jpgd12DCT_Upsample8Matrix442atEii($160, 3, 1);
  HEAP32[(($161)>>2)]=0;
  var $162=$2;
  var $163=__ZN4jpgd12DCT_Upsample8Matrix442atEii($162, 3, 2);
  HEAP32[(($163)>>2)]=0;
  var $164=$2;
  var $165=__ZN4jpgd12DCT_Upsample8Matrix442atEii($164, 3, 3);
  HEAP32[(($165)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  $X003=0;
  $X004=0;
  $X005=0;
  $X006=0;
  $X007=0;
  var $16=$3;
  var $17=(($16+2)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  var $20=((($19)*(426))|0);
  var $21=(($20)|0);
  var $22=(($21)|0);
  var $23=(($22)|0);
  var $24=((($23)+(512))|0);
  var $25=$24 >> 10;
  $X010=$25;
  var $26=$3;
  var $27=(($26+18)|0);
  var $28=HEAP16[(($27)>>1)];
  var $29=(($28 << 16) >> 16);
  var $30=((($29)*(426))|0);
  var $31=(($30)|0);
  var $32=(($31)|0);
  var $33=(($32)|0);
  var $34=((($33)+(512))|0);
  var $35=$34 >> 10;
  $X011=$35;
  var $36=$3;
  var $37=(($36+34)|0);
  var $38=HEAP16[(($37)>>1)];
  var $39=(($38 << 16) >> 16);
  var $40=((($39)*(426))|0);
  var $41=(($40)|0);
  var $42=(($41)|0);
  var $43=(($42)|0);
  var $44=((($43)+(512))|0);
  var $45=$44 >> 10;
  $X012=$45;
  $X013=0;
  $X014=0;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  var $46=$3;
  var $47=(($46+2)|0);
  var $48=HEAP16[(($47)>>1)];
  var $49=(($48 << 16) >> 16);
  var $50=((($49)*(23))|0);
  var $51=(($50)|0);
  var $52=(($51)|0);
  var $53=(($52)|0);
  var $54=((($53)+(512))|0);
  var $55=$54 >> 10;
  $X030=$55;
  var $56=$3;
  var $57=(($56+18)|0);
  var $58=HEAP16[(($57)>>1)];
  var $59=(($58 << 16) >> 16);
  var $60=((($59)*(23))|0);
  var $61=(($60)|0);
  var $62=(($61)|0);
  var $63=(($62)|0);
  var $64=((($63)+(512))|0);
  var $65=$64 >> 10;
  $X031=$65;
  var $66=$3;
  var $67=(($66+34)|0);
  var $68=HEAP16[(($67)>>1)];
  var $69=(($68 << 16) >> 16);
  var $70=((($69)*(23))|0);
  var $71=(($70)|0);
  var $72=(($71)|0);
  var $73=(($72)|0);
  var $74=((($73)+(512))|0);
  var $75=$74 >> 10;
  $X032=$75;
  $X033=0;
  $X034=0;
  $X035=0;
  $X036=0;
  $X037=0;
  var $76=$X000;
  var $77=$1;
  var $78=__ZN4jpgd12DCT_Upsample8Matrix442atEii($77, 0, 0);
  HEAP32[(($78)>>2)]=$76;
  var $79=$X001;
  var $80=((($79)*(426))|0);
  var $81=(($80)|0);
  var $82=(($81)|0);
  var $83=(($82)|0);
  var $84=((($83)+(512))|0);
  var $85=$84 >> 10;
  var $86=$1;
  var $87=__ZN4jpgd12DCT_Upsample8Matrix442atEii($86, 0, 1);
  HEAP32[(($87)>>2)]=$85;
  var $88=$1;
  var $89=__ZN4jpgd12DCT_Upsample8Matrix442atEii($88, 0, 2);
  HEAP32[(($89)>>2)]=0;
  var $90=$X001;
  var $91=((($90)*(23))|0);
  var $92=(($91)|0);
  var $93=(($92)|0);
  var $94=(($93)|0);
  var $95=((($94)+(512))|0);
  var $96=$95 >> 10;
  var $97=$1;
  var $98=__ZN4jpgd12DCT_Upsample8Matrix442atEii($97, 0, 3);
  HEAP32[(($98)>>2)]=$96;
  var $99=$X010;
  var $100=$1;
  var $101=__ZN4jpgd12DCT_Upsample8Matrix442atEii($100, 1, 0);
  HEAP32[(($101)>>2)]=$99;
  var $102=$X011;
  var $103=((($102)*(426))|0);
  var $104=(($103)|0);
  var $105=(($104)|0);
  var $106=(($105)|0);
  var $107=((($106)+(512))|0);
  var $108=$107 >> 10;
  var $109=$1;
  var $110=__ZN4jpgd12DCT_Upsample8Matrix442atEii($109, 1, 1);
  HEAP32[(($110)>>2)]=$108;
  var $111=$1;
  var $112=__ZN4jpgd12DCT_Upsample8Matrix442atEii($111, 1, 2);
  HEAP32[(($112)>>2)]=0;
  var $113=$X011;
  var $114=((($113)*(23))|0);
  var $115=(($114)|0);
  var $116=(($115)|0);
  var $117=(($116)|0);
  var $118=((($117)+(512))|0);
  var $119=$118 >> 10;
  var $120=$1;
  var $121=__ZN4jpgd12DCT_Upsample8Matrix442atEii($120, 1, 3);
  HEAP32[(($121)>>2)]=$119;
  var $122=$1;
  var $123=__ZN4jpgd12DCT_Upsample8Matrix442atEii($122, 2, 0);
  HEAP32[(($123)>>2)]=0;
  var $124=$1;
  var $125=__ZN4jpgd12DCT_Upsample8Matrix442atEii($124, 2, 1);
  HEAP32[(($125)>>2)]=0;
  var $126=$1;
  var $127=__ZN4jpgd12DCT_Upsample8Matrix442atEii($126, 2, 2);
  HEAP32[(($127)>>2)]=0;
  var $128=$1;
  var $129=__ZN4jpgd12DCT_Upsample8Matrix442atEii($128, 2, 3);
  HEAP32[(($129)>>2)]=0;
  var $130=$X030;
  var $131=$1;
  var $132=__ZN4jpgd12DCT_Upsample8Matrix442atEii($131, 3, 0);
  HEAP32[(($132)>>2)]=$130;
  var $133=$X031;
  var $134=((($133)*(426))|0);
  var $135=(($134)|0);
  var $136=(($135)|0);
  var $137=(($136)|0);
  var $138=((($137)+(512))|0);
  var $139=$138 >> 10;
  var $140=$1;
  var $141=__ZN4jpgd12DCT_Upsample8Matrix442atEii($140, 3, 1);
  HEAP32[(($141)>>2)]=$139;
  var $142=$1;
  var $143=__ZN4jpgd12DCT_Upsample8Matrix442atEii($142, 3, 2);
  HEAP32[(($143)>>2)]=0;
  var $144=$X031;
  var $145=((($144)*(23))|0);
  var $146=(($145)|0);
  var $147=(($146)|0);
  var $148=(($147)|0);
  var $149=((($148)+(512))|0);
  var $150=$149 >> 10;
  var $151=$1;
  var $152=__ZN4jpgd12DCT_Upsample8Matrix442atEii($151, 3, 3);
  HEAP32[(($152)>>2)]=$150;
  var $153=$X001;
  var $154=((($153)*(928))|0);
  var $155=(($154)|0);
  var $156=(($155)|0);
  var $157=(($156)|0);
  var $158=((($157)+(512))|0);
  var $159=$158 >> 10;
  var $160=$2;
  var $161=__ZN4jpgd12DCT_Upsample8Matrix442atEii($160, 0, 0);
  HEAP32[(($161)>>2)]=$159;
  var $162=$X002;
  var $163=$2;
  var $164=__ZN4jpgd12DCT_Upsample8Matrix442atEii($163, 0, 1);
  HEAP32[(($164)>>2)]=$162;
  var $165=$X001;
  var $166=((($165)*(-75))|0);
  var $167=(($166)|0);
  var $168=(($167)|0);
  var $169=(($168)|0);
  var $170=((($169)+(512))|0);
  var $171=$170 >> 10;
  var $172=$2;
  var $173=__ZN4jpgd12DCT_Upsample8Matrix442atEii($172, 0, 2);
  HEAP32[(($173)>>2)]=$171;
  var $174=$2;
  var $175=__ZN4jpgd12DCT_Upsample8Matrix442atEii($174, 0, 3);
  HEAP32[(($175)>>2)]=0;
  var $176=$X011;
  var $177=((($176)*(928))|0);
  var $178=(($177)|0);
  var $179=(($178)|0);
  var $180=(($179)|0);
  var $181=((($180)+(512))|0);
  var $182=$181 >> 10;
  var $183=$2;
  var $184=__ZN4jpgd12DCT_Upsample8Matrix442atEii($183, 1, 0);
  HEAP32[(($184)>>2)]=$182;
  var $185=$X012;
  var $186=$2;
  var $187=__ZN4jpgd12DCT_Upsample8Matrix442atEii($186, 1, 1);
  HEAP32[(($187)>>2)]=$185;
  var $188=$X011;
  var $189=((($188)*(-75))|0);
  var $190=(($189)|0);
  var $191=(($190)|0);
  var $192=(($191)|0);
  var $193=((($192)+(512))|0);
  var $194=$193 >> 10;
  var $195=$2;
  var $196=__ZN4jpgd12DCT_Upsample8Matrix442atEii($195, 1, 2);
  HEAP32[(($196)>>2)]=$194;
  var $197=$2;
  var $198=__ZN4jpgd12DCT_Upsample8Matrix442atEii($197, 1, 3);
  HEAP32[(($198)>>2)]=0;
  var $199=$2;
  var $200=__ZN4jpgd12DCT_Upsample8Matrix442atEii($199, 2, 0);
  HEAP32[(($200)>>2)]=0;
  var $201=$2;
  var $202=__ZN4jpgd12DCT_Upsample8Matrix442atEii($201, 2, 1);
  HEAP32[(($202)>>2)]=0;
  var $203=$2;
  var $204=__ZN4jpgd12DCT_Upsample8Matrix442atEii($203, 2, 2);
  HEAP32[(($204)>>2)]=0;
  var $205=$2;
  var $206=__ZN4jpgd12DCT_Upsample8Matrix442atEii($205, 2, 3);
  HEAP32[(($206)>>2)]=0;
  var $207=$X031;
  var $208=((($207)*(928))|0);
  var $209=(($208)|0);
  var $210=(($209)|0);
  var $211=(($210)|0);
  var $212=((($211)+(512))|0);
  var $213=$212 >> 10;
  var $214=$2;
  var $215=__ZN4jpgd12DCT_Upsample8Matrix442atEii($214, 3, 0);
  HEAP32[(($215)>>2)]=$213;
  var $216=$X032;
  var $217=$2;
  var $218=__ZN4jpgd12DCT_Upsample8Matrix442atEii($217, 3, 1);
  HEAP32[(($218)>>2)]=$216;
  var $219=$X031;
  var $220=((($219)*(-75))|0);
  var $221=(($220)|0);
  var $222=(($221)|0);
  var $223=(($222)|0);
  var $224=((($223)+(512))|0);
  var $225=$224 >> 10;
  var $226=$2;
  var $227=__ZN4jpgd12DCT_Upsample8Matrix442atEii($226, 3, 2);
  HEAP32[(($227)>>2)]=$225;
  var $228=$2;
  var $229=__ZN4jpgd12DCT_Upsample8Matrix442atEii($228, 3, 3);
  HEAP32[(($229)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=(($8)|0);
  var $10=(($9)|0);
  var $11=(($10)|0);
  var $12=((($11)+(512))|0);
  var $13=$12 >> 10;
  $X100=$13;
  var $14=$3;
  var $15=(($14+18)|0);
  var $16=HEAP16[(($15)>>1)];
  var $17=(($16 << 16) >> 16);
  var $18=((($17)*(928))|0);
  var $19=(($18)|0);
  var $20=(($19)|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X101=$23;
  var $24=$3;
  var $25=(($24+34)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(928))|0);
  var $29=(($28)|0);
  var $30=(($29)|0);
  var $31=(($30)|0);
  var $32=((($31)+(512))|0);
  var $33=$32 >> 10;
  $X102=$33;
  $X103=0;
  $X104=0;
  $X105=0;
  $X106=0;
  $X107=0;
  $X110=0;
  $X111=0;
  $X112=0;
  $X113=0;
  $X114=0;
  $X115=0;
  $X116=0;
  $X117=0;
  var $34=$3;
  var $35=(($34+2)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(-75))|0);
  var $39=(($38)|0);
  var $40=(($39)|0);
  var $41=(($40)|0);
  var $42=((($41)+(512))|0);
  var $43=$42 >> 10;
  $X120=$43;
  var $44=$3;
  var $45=(($44+18)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(-75))|0);
  var $49=(($48)|0);
  var $50=(($49)|0);
  var $51=(($50)|0);
  var $52=((($51)+(512))|0);
  var $53=$52 >> 10;
  $X121=$53;
  var $54=$3;
  var $55=(($54+34)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(-75))|0);
  var $59=(($58)|0);
  var $60=(($59)|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X122=$63;
  $X123=0;
  $X124=0;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $64=$X100;
  var $65=$1;
  var $66=__ZN4jpgd12DCT_Upsample8Matrix442atEii($65, 0, 0);
  HEAP32[(($66)>>2)]=$64;
  var $67=$X101;
  var $68=((($67)*(426))|0);
  var $69=(($68)|0);
  var $70=(($69)|0);
  var $71=(($70)|0);
  var $72=((($71)+(512))|0);
  var $73=$72 >> 10;
  var $74=$1;
  var $75=__ZN4jpgd12DCT_Upsample8Matrix442atEii($74, 0, 1);
  HEAP32[(($75)>>2)]=$73;
  var $76=$1;
  var $77=__ZN4jpgd12DCT_Upsample8Matrix442atEii($76, 0, 2);
  HEAP32[(($77)>>2)]=0;
  var $78=$X101;
  var $79=((($78)*(23))|0);
  var $80=(($79)|0);
  var $81=(($80)|0);
  var $82=(($81)|0);
  var $83=((($82)+(512))|0);
  var $84=$83 >> 10;
  var $85=$1;
  var $86=__ZN4jpgd12DCT_Upsample8Matrix442atEii($85, 0, 3);
  HEAP32[(($86)>>2)]=$84;
  var $87=$1;
  var $88=__ZN4jpgd12DCT_Upsample8Matrix442atEii($87, 1, 0);
  HEAP32[(($88)>>2)]=0;
  var $89=$1;
  var $90=__ZN4jpgd12DCT_Upsample8Matrix442atEii($89, 1, 1);
  HEAP32[(($90)>>2)]=0;
  var $91=$1;
  var $92=__ZN4jpgd12DCT_Upsample8Matrix442atEii($91, 1, 2);
  HEAP32[(($92)>>2)]=0;
  var $93=$1;
  var $94=__ZN4jpgd12DCT_Upsample8Matrix442atEii($93, 1, 3);
  HEAP32[(($94)>>2)]=0;
  var $95=$X120;
  var $96=$1;
  var $97=__ZN4jpgd12DCT_Upsample8Matrix442atEii($96, 2, 0);
  HEAP32[(($97)>>2)]=$95;
  var $98=$X121;
  var $99=((($98)*(426))|0);
  var $100=(($99)|0);
  var $101=(($100)|0);
  var $102=(($101)|0);
  var $103=((($102)+(512))|0);
  var $104=$103 >> 10;
  var $105=$1;
  var $106=__ZN4jpgd12DCT_Upsample8Matrix442atEii($105, 2, 1);
  HEAP32[(($106)>>2)]=$104;
  var $107=$1;
  var $108=__ZN4jpgd12DCT_Upsample8Matrix442atEii($107, 2, 2);
  HEAP32[(($108)>>2)]=0;
  var $109=$X121;
  var $110=((($109)*(23))|0);
  var $111=(($110)|0);
  var $112=(($111)|0);
  var $113=(($112)|0);
  var $114=((($113)+(512))|0);
  var $115=$114 >> 10;
  var $116=$1;
  var $117=__ZN4jpgd12DCT_Upsample8Matrix442atEii($116, 2, 3);
  HEAP32[(($117)>>2)]=$115;
  var $118=$1;
  var $119=__ZN4jpgd12DCT_Upsample8Matrix442atEii($118, 3, 0);
  HEAP32[(($119)>>2)]=0;
  var $120=$1;
  var $121=__ZN4jpgd12DCT_Upsample8Matrix442atEii($120, 3, 1);
  HEAP32[(($121)>>2)]=0;
  var $122=$1;
  var $123=__ZN4jpgd12DCT_Upsample8Matrix442atEii($122, 3, 2);
  HEAP32[(($123)>>2)]=0;
  var $124=$1;
  var $125=__ZN4jpgd12DCT_Upsample8Matrix442atEii($124, 3, 3);
  HEAP32[(($125)>>2)]=0;
  var $126=$X101;
  var $127=((($126)*(928))|0);
  var $128=(($127)|0);
  var $129=(($128)|0);
  var $130=(($129)|0);
  var $131=((($130)+(512))|0);
  var $132=$131 >> 10;
  var $133=$2;
  var $134=__ZN4jpgd12DCT_Upsample8Matrix442atEii($133, 0, 0);
  HEAP32[(($134)>>2)]=$132;
  var $135=$X102;
  var $136=$2;
  var $137=__ZN4jpgd12DCT_Upsample8Matrix442atEii($136, 0, 1);
  HEAP32[(($137)>>2)]=$135;
  var $138=$X101;
  var $139=((($138)*(-75))|0);
  var $140=(($139)|0);
  var $141=(($140)|0);
  var $142=(($141)|0);
  var $143=((($142)+(512))|0);
  var $144=$143 >> 10;
  var $145=$2;
  var $146=__ZN4jpgd12DCT_Upsample8Matrix442atEii($145, 0, 2);
  HEAP32[(($146)>>2)]=$144;
  var $147=$2;
  var $148=__ZN4jpgd12DCT_Upsample8Matrix442atEii($147, 0, 3);
  HEAP32[(($148)>>2)]=0;
  var $149=$2;
  var $150=__ZN4jpgd12DCT_Upsample8Matrix442atEii($149, 1, 0);
  HEAP32[(($150)>>2)]=0;
  var $151=$2;
  var $152=__ZN4jpgd12DCT_Upsample8Matrix442atEii($151, 1, 1);
  HEAP32[(($152)>>2)]=0;
  var $153=$2;
  var $154=__ZN4jpgd12DCT_Upsample8Matrix442atEii($153, 1, 2);
  HEAP32[(($154)>>2)]=0;
  var $155=$2;
  var $156=__ZN4jpgd12DCT_Upsample8Matrix442atEii($155, 1, 3);
  HEAP32[(($156)>>2)]=0;
  var $157=$X121;
  var $158=((($157)*(928))|0);
  var $159=(($158)|0);
  var $160=(($159)|0);
  var $161=(($160)|0);
  var $162=((($161)+(512))|0);
  var $163=$162 >> 10;
  var $164=$2;
  var $165=__ZN4jpgd12DCT_Upsample8Matrix442atEii($164, 2, 0);
  HEAP32[(($165)>>2)]=$163;
  var $166=$X122;
  var $167=$2;
  var $168=__ZN4jpgd12DCT_Upsample8Matrix442atEii($167, 2, 1);
  HEAP32[(($168)>>2)]=$166;
  var $169=$X121;
  var $170=((($169)*(-75))|0);
  var $171=(($170)|0);
  var $172=(($171)|0);
  var $173=(($172)|0);
  var $174=((($173)+(512))|0);
  var $175=$174 >> 10;
  var $176=$2;
  var $177=__ZN4jpgd12DCT_Upsample8Matrix442atEii($176, 2, 2);
  HEAP32[(($177)>>2)]=$175;
  var $178=$2;
  var $179=__ZN4jpgd12DCT_Upsample8Matrix442atEii($178, 2, 3);
  HEAP32[(($179)>>2)]=0;
  var $180=$2;
  var $181=__ZN4jpgd12DCT_Upsample8Matrix442atEii($180, 3, 0);
  HEAP32[(($181)>>2)]=0;
  var $182=$2;
  var $183=__ZN4jpgd12DCT_Upsample8Matrix442atEii($182, 3, 1);
  HEAP32[(($183)>>2)]=0;
  var $184=$2;
  var $185=__ZN4jpgd12DCT_Upsample8Matrix442atEii($184, 3, 2);
  HEAP32[(($185)>>2)]=0;
  var $186=$2;
  var $187=__ZN4jpgd12DCT_Upsample8Matrix442atEii($186, 3, 3);
  HEAP32[(($187)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  $X003=0;
  $X004=0;
  $X005=0;
  $X006=0;
  $X007=0;
  var $16=$3;
  var $17=(($16+2)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  var $20=((($19)*(426))|0);
  var $21=(($20)|0);
  var $22=(($21)|0);
  var $23=(($22)|0);
  var $24=((($23)+(512))|0);
  var $25=$24 >> 10;
  $X010=$25;
  var $26=$3;
  var $27=(($26+18)|0);
  var $28=HEAP16[(($27)>>1)];
  var $29=(($28 << 16) >> 16);
  var $30=((($29)*(426))|0);
  var $31=(($30)|0);
  var $32=(($31)|0);
  var $33=(($32)|0);
  var $34=((($33)+(512))|0);
  var $35=$34 >> 10;
  $X011=$35;
  var $36=$3;
  var $37=(($36+34)|0);
  var $38=HEAP16[(($37)>>1)];
  var $39=(($38 << 16) >> 16);
  var $40=((($39)*(426))|0);
  var $41=(($40)|0);
  var $42=(($41)|0);
  var $43=(($42)|0);
  var $44=((($43)+(512))|0);
  var $45=$44 >> 10;
  $X012=$45;
  $X013=0;
  $X014=0;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  var $46=$3;
  var $47=(($46+2)|0);
  var $48=HEAP16[(($47)>>1)];
  var $49=(($48 << 16) >> 16);
  var $50=((($49)*(23))|0);
  var $51=(($50)|0);
  var $52=(($51)|0);
  var $53=(($52)|0);
  var $54=((($53)+(512))|0);
  var $55=$54 >> 10;
  $X030=$55;
  var $56=$3;
  var $57=(($56+18)|0);
  var $58=HEAP16[(($57)>>1)];
  var $59=(($58 << 16) >> 16);
  var $60=((($59)*(23))|0);
  var $61=(($60)|0);
  var $62=(($61)|0);
  var $63=(($62)|0);
  var $64=((($63)+(512))|0);
  var $65=$64 >> 10;
  $X031=$65;
  var $66=$3;
  var $67=(($66+34)|0);
  var $68=HEAP16[(($67)>>1)];
  var $69=(($68 << 16) >> 16);
  var $70=((($69)*(23))|0);
  var $71=(($70)|0);
  var $72=(($71)|0);
  var $73=(($72)|0);
  var $74=((($73)+(512))|0);
  var $75=$74 >> 10;
  $X032=$75;
  $X033=0;
  $X034=0;
  $X035=0;
  $X036=0;
  $X037=0;
  var $76=$X000;
  var $77=$1;
  var $78=__ZN4jpgd12DCT_Upsample8Matrix442atEii($77, 0, 0);
  HEAP32[(($78)>>2)]=$76;
  var $79=$X001;
  var $80=((($79)*(426))|0);
  var $81=(($80)|0);
  var $82=(($81)|0);
  var $83=(($82)|0);
  var $84=((($83)+(512))|0);
  var $85=$84 >> 10;
  var $86=$1;
  var $87=__ZN4jpgd12DCT_Upsample8Matrix442atEii($86, 0, 1);
  HEAP32[(($87)>>2)]=$85;
  var $88=$1;
  var $89=__ZN4jpgd12DCT_Upsample8Matrix442atEii($88, 0, 2);
  HEAP32[(($89)>>2)]=0;
  var $90=$X001;
  var $91=((($90)*(23))|0);
  var $92=(($91)|0);
  var $93=(($92)|0);
  var $94=(($93)|0);
  var $95=((($94)+(512))|0);
  var $96=$95 >> 10;
  var $97=$1;
  var $98=__ZN4jpgd12DCT_Upsample8Matrix442atEii($97, 0, 3);
  HEAP32[(($98)>>2)]=$96;
  var $99=$X010;
  var $100=$1;
  var $101=__ZN4jpgd12DCT_Upsample8Matrix442atEii($100, 1, 0);
  HEAP32[(($101)>>2)]=$99;
  var $102=$X011;
  var $103=((($102)*(426))|0);
  var $104=(($103)|0);
  var $105=(($104)|0);
  var $106=(($105)|0);
  var $107=((($106)+(512))|0);
  var $108=$107 >> 10;
  var $109=$1;
  var $110=__ZN4jpgd12DCT_Upsample8Matrix442atEii($109, 1, 1);
  HEAP32[(($110)>>2)]=$108;
  var $111=$1;
  var $112=__ZN4jpgd12DCT_Upsample8Matrix442atEii($111, 1, 2);
  HEAP32[(($112)>>2)]=0;
  var $113=$X011;
  var $114=((($113)*(23))|0);
  var $115=(($114)|0);
  var $116=(($115)|0);
  var $117=(($116)|0);
  var $118=((($117)+(512))|0);
  var $119=$118 >> 10;
  var $120=$1;
  var $121=__ZN4jpgd12DCT_Upsample8Matrix442atEii($120, 1, 3);
  HEAP32[(($121)>>2)]=$119;
  var $122=$1;
  var $123=__ZN4jpgd12DCT_Upsample8Matrix442atEii($122, 2, 0);
  HEAP32[(($123)>>2)]=0;
  var $124=$1;
  var $125=__ZN4jpgd12DCT_Upsample8Matrix442atEii($124, 2, 1);
  HEAP32[(($125)>>2)]=0;
  var $126=$1;
  var $127=__ZN4jpgd12DCT_Upsample8Matrix442atEii($126, 2, 2);
  HEAP32[(($127)>>2)]=0;
  var $128=$1;
  var $129=__ZN4jpgd12DCT_Upsample8Matrix442atEii($128, 2, 3);
  HEAP32[(($129)>>2)]=0;
  var $130=$X030;
  var $131=$1;
  var $132=__ZN4jpgd12DCT_Upsample8Matrix442atEii($131, 3, 0);
  HEAP32[(($132)>>2)]=$130;
  var $133=$X031;
  var $134=((($133)*(426))|0);
  var $135=(($134)|0);
  var $136=(($135)|0);
  var $137=(($136)|0);
  var $138=((($137)+(512))|0);
  var $139=$138 >> 10;
  var $140=$1;
  var $141=__ZN4jpgd12DCT_Upsample8Matrix442atEii($140, 3, 1);
  HEAP32[(($141)>>2)]=$139;
  var $142=$1;
  var $143=__ZN4jpgd12DCT_Upsample8Matrix442atEii($142, 3, 2);
  HEAP32[(($143)>>2)]=0;
  var $144=$X031;
  var $145=((($144)*(23))|0);
  var $146=(($145)|0);
  var $147=(($146)|0);
  var $148=(($147)|0);
  var $149=((($148)+(512))|0);
  var $150=$149 >> 10;
  var $151=$1;
  var $152=__ZN4jpgd12DCT_Upsample8Matrix442atEii($151, 3, 3);
  HEAP32[(($152)>>2)]=$150;
  var $153=$X001;
  var $154=((($153)*(928))|0);
  var $155=(($154)|0);
  var $156=(($155)|0);
  var $157=(($156)|0);
  var $158=((($157)+(512))|0);
  var $159=$158 >> 10;
  var $160=$2;
  var $161=__ZN4jpgd12DCT_Upsample8Matrix442atEii($160, 0, 0);
  HEAP32[(($161)>>2)]=$159;
  var $162=$X002;
  var $163=$2;
  var $164=__ZN4jpgd12DCT_Upsample8Matrix442atEii($163, 0, 1);
  HEAP32[(($164)>>2)]=$162;
  var $165=$X001;
  var $166=((($165)*(-75))|0);
  var $167=(($166)|0);
  var $168=(($167)|0);
  var $169=(($168)|0);
  var $170=((($169)+(512))|0);
  var $171=$170 >> 10;
  var $172=$2;
  var $173=__ZN4jpgd12DCT_Upsample8Matrix442atEii($172, 0, 2);
  HEAP32[(($173)>>2)]=$171;
  var $174=$2;
  var $175=__ZN4jpgd12DCT_Upsample8Matrix442atEii($174, 0, 3);
  HEAP32[(($175)>>2)]=0;
  var $176=$X011;
  var $177=((($176)*(928))|0);
  var $178=(($177)|0);
  var $179=(($178)|0);
  var $180=(($179)|0);
  var $181=((($180)+(512))|0);
  var $182=$181 >> 10;
  var $183=$2;
  var $184=__ZN4jpgd12DCT_Upsample8Matrix442atEii($183, 1, 0);
  HEAP32[(($184)>>2)]=$182;
  var $185=$X012;
  var $186=$2;
  var $187=__ZN4jpgd12DCT_Upsample8Matrix442atEii($186, 1, 1);
  HEAP32[(($187)>>2)]=$185;
  var $188=$X011;
  var $189=((($188)*(-75))|0);
  var $190=(($189)|0);
  var $191=(($190)|0);
  var $192=(($191)|0);
  var $193=((($192)+(512))|0);
  var $194=$193 >> 10;
  var $195=$2;
  var $196=__ZN4jpgd12DCT_Upsample8Matrix442atEii($195, 1, 2);
  HEAP32[(($196)>>2)]=$194;
  var $197=$2;
  var $198=__ZN4jpgd12DCT_Upsample8Matrix442atEii($197, 1, 3);
  HEAP32[(($198)>>2)]=0;
  var $199=$2;
  var $200=__ZN4jpgd12DCT_Upsample8Matrix442atEii($199, 2, 0);
  HEAP32[(($200)>>2)]=0;
  var $201=$2;
  var $202=__ZN4jpgd12DCT_Upsample8Matrix442atEii($201, 2, 1);
  HEAP32[(($202)>>2)]=0;
  var $203=$2;
  var $204=__ZN4jpgd12DCT_Upsample8Matrix442atEii($203, 2, 2);
  HEAP32[(($204)>>2)]=0;
  var $205=$2;
  var $206=__ZN4jpgd12DCT_Upsample8Matrix442atEii($205, 2, 3);
  HEAP32[(($206)>>2)]=0;
  var $207=$X031;
  var $208=((($207)*(928))|0);
  var $209=(($208)|0);
  var $210=(($209)|0);
  var $211=(($210)|0);
  var $212=((($211)+(512))|0);
  var $213=$212 >> 10;
  var $214=$2;
  var $215=__ZN4jpgd12DCT_Upsample8Matrix442atEii($214, 3, 0);
  HEAP32[(($215)>>2)]=$213;
  var $216=$X032;
  var $217=$2;
  var $218=__ZN4jpgd12DCT_Upsample8Matrix442atEii($217, 3, 1);
  HEAP32[(($218)>>2)]=$216;
  var $219=$X031;
  var $220=((($219)*(-75))|0);
  var $221=(($220)|0);
  var $222=(($221)|0);
  var $223=(($222)|0);
  var $224=((($223)+(512))|0);
  var $225=$224 >> 10;
  var $226=$2;
  var $227=__ZN4jpgd12DCT_Upsample8Matrix442atEii($226, 3, 2);
  HEAP32[(($227)>>2)]=$225;
  var $228=$2;
  var $229=__ZN4jpgd12DCT_Upsample8Matrix442atEii($228, 3, 3);
  HEAP32[(($229)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=(($8)|0);
  var $10=(($9)|0);
  var $11=(($10)|0);
  var $12=((($11)+(512))|0);
  var $13=$12 >> 10;
  $X100=$13;
  var $14=$3;
  var $15=(($14+18)|0);
  var $16=HEAP16[(($15)>>1)];
  var $17=(($16 << 16) >> 16);
  var $18=((($17)*(928))|0);
  var $19=(($18)|0);
  var $20=(($19)|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X101=$23;
  var $24=$3;
  var $25=(($24+34)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(928))|0);
  var $29=(($28)|0);
  var $30=(($29)|0);
  var $31=(($30)|0);
  var $32=((($31)+(512))|0);
  var $33=$32 >> 10;
  $X102=$33;
  $X103=0;
  $X104=0;
  $X105=0;
  $X106=0;
  $X107=0;
  var $34=$3;
  var $35=(($34+4)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  $X110=$37;
  var $38=$3;
  var $39=(($38+20)|0);
  var $40=HEAP16[(($39)>>1)];
  var $41=(($40 << 16) >> 16);
  $X111=$41;
  var $42=$3;
  var $43=(($42+36)|0);
  var $44=HEAP16[(($43)>>1)];
  var $45=(($44 << 16) >> 16);
  $X112=$45;
  $X113=0;
  $X114=0;
  $X115=0;
  $X116=0;
  $X117=0;
  var $46=$3;
  var $47=(($46+2)|0);
  var $48=HEAP16[(($47)>>1)];
  var $49=(($48 << 16) >> 16);
  var $50=((($49)*(-75))|0);
  var $51=(($50)|0);
  var $52=(($51)|0);
  var $53=(($52)|0);
  var $54=((($53)+(512))|0);
  var $55=$54 >> 10;
  $X120=$55;
  var $56=$3;
  var $57=(($56+18)|0);
  var $58=HEAP16[(($57)>>1)];
  var $59=(($58 << 16) >> 16);
  var $60=((($59)*(-75))|0);
  var $61=(($60)|0);
  var $62=(($61)|0);
  var $63=(($62)|0);
  var $64=((($63)+(512))|0);
  var $65=$64 >> 10;
  $X121=$65;
  var $66=$3;
  var $67=(($66+34)|0);
  var $68=HEAP16[(($67)>>1)];
  var $69=(($68 << 16) >> 16);
  var $70=((($69)*(-75))|0);
  var $71=(($70)|0);
  var $72=(($71)|0);
  var $73=(($72)|0);
  var $74=((($73)+(512))|0);
  var $75=$74 >> 10;
  $X122=$75;
  $X123=0;
  $X124=0;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $76=$X100;
  var $77=$1;
  var $78=__ZN4jpgd12DCT_Upsample8Matrix442atEii($77, 0, 0);
  HEAP32[(($78)>>2)]=$76;
  var $79=$X101;
  var $80=((($79)*(426))|0);
  var $81=(($80)|0);
  var $82=(($81)|0);
  var $83=(($82)|0);
  var $84=((($83)+(512))|0);
  var $85=$84 >> 10;
  var $86=$1;
  var $87=__ZN4jpgd12DCT_Upsample8Matrix442atEii($86, 0, 1);
  HEAP32[(($87)>>2)]=$85;
  var $88=$1;
  var $89=__ZN4jpgd12DCT_Upsample8Matrix442atEii($88, 0, 2);
  HEAP32[(($89)>>2)]=0;
  var $90=$X101;
  var $91=((($90)*(23))|0);
  var $92=(($91)|0);
  var $93=(($92)|0);
  var $94=(($93)|0);
  var $95=((($94)+(512))|0);
  var $96=$95 >> 10;
  var $97=$1;
  var $98=__ZN4jpgd12DCT_Upsample8Matrix442atEii($97, 0, 3);
  HEAP32[(($98)>>2)]=$96;
  var $99=$X110;
  var $100=$1;
  var $101=__ZN4jpgd12DCT_Upsample8Matrix442atEii($100, 1, 0);
  HEAP32[(($101)>>2)]=$99;
  var $102=$X111;
  var $103=((($102)*(426))|0);
  var $104=(($103)|0);
  var $105=(($104)|0);
  var $106=(($105)|0);
  var $107=((($106)+(512))|0);
  var $108=$107 >> 10;
  var $109=$1;
  var $110=__ZN4jpgd12DCT_Upsample8Matrix442atEii($109, 1, 1);
  HEAP32[(($110)>>2)]=$108;
  var $111=$1;
  var $112=__ZN4jpgd12DCT_Upsample8Matrix442atEii($111, 1, 2);
  HEAP32[(($112)>>2)]=0;
  var $113=$X111;
  var $114=((($113)*(23))|0);
  var $115=(($114)|0);
  var $116=(($115)|0);
  var $117=(($116)|0);
  var $118=((($117)+(512))|0);
  var $119=$118 >> 10;
  var $120=$1;
  var $121=__ZN4jpgd12DCT_Upsample8Matrix442atEii($120, 1, 3);
  HEAP32[(($121)>>2)]=$119;
  var $122=$X120;
  var $123=$1;
  var $124=__ZN4jpgd12DCT_Upsample8Matrix442atEii($123, 2, 0);
  HEAP32[(($124)>>2)]=$122;
  var $125=$X121;
  var $126=((($125)*(426))|0);
  var $127=(($126)|0);
  var $128=(($127)|0);
  var $129=(($128)|0);
  var $130=((($129)+(512))|0);
  var $131=$130 >> 10;
  var $132=$1;
  var $133=__ZN4jpgd12DCT_Upsample8Matrix442atEii($132, 2, 1);
  HEAP32[(($133)>>2)]=$131;
  var $134=$1;
  var $135=__ZN4jpgd12DCT_Upsample8Matrix442atEii($134, 2, 2);
  HEAP32[(($135)>>2)]=0;
  var $136=$X121;
  var $137=((($136)*(23))|0);
  var $138=(($137)|0);
  var $139=(($138)|0);
  var $140=(($139)|0);
  var $141=((($140)+(512))|0);
  var $142=$141 >> 10;
  var $143=$1;
  var $144=__ZN4jpgd12DCT_Upsample8Matrix442atEii($143, 2, 3);
  HEAP32[(($144)>>2)]=$142;
  var $145=$1;
  var $146=__ZN4jpgd12DCT_Upsample8Matrix442atEii($145, 3, 0);
  HEAP32[(($146)>>2)]=0;
  var $147=$1;
  var $148=__ZN4jpgd12DCT_Upsample8Matrix442atEii($147, 3, 1);
  HEAP32[(($148)>>2)]=0;
  var $149=$1;
  var $150=__ZN4jpgd12DCT_Upsample8Matrix442atEii($149, 3, 2);
  HEAP32[(($150)>>2)]=0;
  var $151=$1;
  var $152=__ZN4jpgd12DCT_Upsample8Matrix442atEii($151, 3, 3);
  HEAP32[(($152)>>2)]=0;
  var $153=$X101;
  var $154=((($153)*(928))|0);
  var $155=(($154)|0);
  var $156=(($155)|0);
  var $157=(($156)|0);
  var $158=((($157)+(512))|0);
  var $159=$158 >> 10;
  var $160=$2;
  var $161=__ZN4jpgd12DCT_Upsample8Matrix442atEii($160, 0, 0);
  HEAP32[(($161)>>2)]=$159;
  var $162=$X102;
  var $163=$2;
  var $164=__ZN4jpgd12DCT_Upsample8Matrix442atEii($163, 0, 1);
  HEAP32[(($164)>>2)]=$162;
  var $165=$X101;
  var $166=((($165)*(-75))|0);
  var $167=(($166)|0);
  var $168=(($167)|0);
  var $169=(($168)|0);
  var $170=((($169)+(512))|0);
  var $171=$170 >> 10;
  var $172=$2;
  var $173=__ZN4jpgd12DCT_Upsample8Matrix442atEii($172, 0, 2);
  HEAP32[(($173)>>2)]=$171;
  var $174=$2;
  var $175=__ZN4jpgd12DCT_Upsample8Matrix442atEii($174, 0, 3);
  HEAP32[(($175)>>2)]=0;
  var $176=$X111;
  var $177=((($176)*(928))|0);
  var $178=(($177)|0);
  var $179=(($178)|0);
  var $180=(($179)|0);
  var $181=((($180)+(512))|0);
  var $182=$181 >> 10;
  var $183=$2;
  var $184=__ZN4jpgd12DCT_Upsample8Matrix442atEii($183, 1, 0);
  HEAP32[(($184)>>2)]=$182;
  var $185=$X112;
  var $186=$2;
  var $187=__ZN4jpgd12DCT_Upsample8Matrix442atEii($186, 1, 1);
  HEAP32[(($187)>>2)]=$185;
  var $188=$X111;
  var $189=((($188)*(-75))|0);
  var $190=(($189)|0);
  var $191=(($190)|0);
  var $192=(($191)|0);
  var $193=((($192)+(512))|0);
  var $194=$193 >> 10;
  var $195=$2;
  var $196=__ZN4jpgd12DCT_Upsample8Matrix442atEii($195, 1, 2);
  HEAP32[(($196)>>2)]=$194;
  var $197=$2;
  var $198=__ZN4jpgd12DCT_Upsample8Matrix442atEii($197, 1, 3);
  HEAP32[(($198)>>2)]=0;
  var $199=$X121;
  var $200=((($199)*(928))|0);
  var $201=(($200)|0);
  var $202=(($201)|0);
  var $203=(($202)|0);
  var $204=((($203)+(512))|0);
  var $205=$204 >> 10;
  var $206=$2;
  var $207=__ZN4jpgd12DCT_Upsample8Matrix442atEii($206, 2, 0);
  HEAP32[(($207)>>2)]=$205;
  var $208=$X122;
  var $209=$2;
  var $210=__ZN4jpgd12DCT_Upsample8Matrix442atEii($209, 2, 1);
  HEAP32[(($210)>>2)]=$208;
  var $211=$X121;
  var $212=((($211)*(-75))|0);
  var $213=(($212)|0);
  var $214=(($213)|0);
  var $215=(($214)|0);
  var $216=((($215)+(512))|0);
  var $217=$216 >> 10;
  var $218=$2;
  var $219=__ZN4jpgd12DCT_Upsample8Matrix442atEii($218, 2, 2);
  HEAP32[(($219)>>2)]=$217;
  var $220=$2;
  var $221=__ZN4jpgd12DCT_Upsample8Matrix442atEii($220, 2, 3);
  HEAP32[(($221)>>2)]=0;
  var $222=$2;
  var $223=__ZN4jpgd12DCT_Upsample8Matrix442atEii($222, 3, 0);
  HEAP32[(($223)>>2)]=0;
  var $224=$2;
  var $225=__ZN4jpgd12DCT_Upsample8Matrix442atEii($224, 3, 1);
  HEAP32[(($225)>>2)]=0;
  var $226=$2;
  var $227=__ZN4jpgd12DCT_Upsample8Matrix442atEii($226, 3, 2);
  HEAP32[(($227)>>2)]=0;
  var $228=$2;
  var $229=__ZN4jpgd12DCT_Upsample8Matrix442atEii($228, 3, 3);
  HEAP32[(($229)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  $X003=0;
  $X004=0;
  $X005=0;
  $X006=0;
  $X007=0;
  var $16=$3;
  var $17=(($16+2)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  var $20=((($19)*(426))|0);
  var $21=$3;
  var $22=(($21+6)|0);
  var $23=HEAP16[(($22)>>1)];
  var $24=(($23 << 16) >> 16);
  var $25=((($24)*(810))|0);
  var $26=((($20)+($25))|0);
  var $27=(($26)|0);
  var $28=(($27)|0);
  var $29=((($28)+(512))|0);
  var $30=$29 >> 10;
  $X010=$30;
  var $31=$3;
  var $32=(($31+18)|0);
  var $33=HEAP16[(($32)>>1)];
  var $34=(($33 << 16) >> 16);
  var $35=((($34)*(426))|0);
  var $36=$3;
  var $37=(($36+22)|0);
  var $38=HEAP16[(($37)>>1)];
  var $39=(($38 << 16) >> 16);
  var $40=((($39)*(810))|0);
  var $41=((($35)+($40))|0);
  var $42=(($41)|0);
  var $43=(($42)|0);
  var $44=((($43)+(512))|0);
  var $45=$44 >> 10;
  $X011=$45;
  var $46=$3;
  var $47=(($46+34)|0);
  var $48=HEAP16[(($47)>>1)];
  var $49=(($48 << 16) >> 16);
  var $50=((($49)*(426))|0);
  var $51=$3;
  var $52=(($51+38)|0);
  var $53=HEAP16[(($52)>>1)];
  var $54=(($53 << 16) >> 16);
  var $55=((($54)*(810))|0);
  var $56=((($50)+($55))|0);
  var $57=(($56)|0);
  var $58=(($57)|0);
  var $59=((($58)+(512))|0);
  var $60=$59 >> 10;
  $X012=$60;
  $X013=0;
  $X014=0;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  var $61=$3;
  var $62=(($61+2)|0);
  var $63=HEAP16[(($62)>>1)];
  var $64=(($63 << 16) >> 16);
  var $65=((($64)*(23))|0);
  var $66=$3;
  var $67=(($66+6)|0);
  var $68=HEAP16[(($67)>>1)];
  var $69=(($68 << 16) >> 16);
  var $70=((($69)*(-99))|0);
  var $71=((($65)+($70))|0);
  var $72=(($71)|0);
  var $73=(($72)|0);
  var $74=((($73)+(512))|0);
  var $75=$74 >> 10;
  $X030=$75;
  var $76=$3;
  var $77=(($76+18)|0);
  var $78=HEAP16[(($77)>>1)];
  var $79=(($78 << 16) >> 16);
  var $80=((($79)*(23))|0);
  var $81=$3;
  var $82=(($81+22)|0);
  var $83=HEAP16[(($82)>>1)];
  var $84=(($83 << 16) >> 16);
  var $85=((($84)*(-99))|0);
  var $86=((($80)+($85))|0);
  var $87=(($86)|0);
  var $88=(($87)|0);
  var $89=((($88)+(512))|0);
  var $90=$89 >> 10;
  $X031=$90;
  var $91=$3;
  var $92=(($91+34)|0);
  var $93=HEAP16[(($92)>>1)];
  var $94=(($93 << 16) >> 16);
  var $95=((($94)*(23))|0);
  var $96=$3;
  var $97=(($96+38)|0);
  var $98=HEAP16[(($97)>>1)];
  var $99=(($98 << 16) >> 16);
  var $100=((($99)*(-99))|0);
  var $101=((($95)+($100))|0);
  var $102=(($101)|0);
  var $103=(($102)|0);
  var $104=((($103)+(512))|0);
  var $105=$104 >> 10;
  $X032=$105;
  $X033=0;
  $X034=0;
  $X035=0;
  $X036=0;
  $X037=0;
  var $106=$X000;
  var $107=$1;
  var $108=__ZN4jpgd12DCT_Upsample8Matrix442atEii($107, 0, 0);
  HEAP32[(($108)>>2)]=$106;
  var $109=$X001;
  var $110=((($109)*(426))|0);
  var $111=(($110)|0);
  var $112=(($111)|0);
  var $113=(($112)|0);
  var $114=((($113)+(512))|0);
  var $115=$114 >> 10;
  var $116=$1;
  var $117=__ZN4jpgd12DCT_Upsample8Matrix442atEii($116, 0, 1);
  HEAP32[(($117)>>2)]=$115;
  var $118=$1;
  var $119=__ZN4jpgd12DCT_Upsample8Matrix442atEii($118, 0, 2);
  HEAP32[(($119)>>2)]=0;
  var $120=$X001;
  var $121=((($120)*(23))|0);
  var $122=(($121)|0);
  var $123=(($122)|0);
  var $124=(($123)|0);
  var $125=((($124)+(512))|0);
  var $126=$125 >> 10;
  var $127=$1;
  var $128=__ZN4jpgd12DCT_Upsample8Matrix442atEii($127, 0, 3);
  HEAP32[(($128)>>2)]=$126;
  var $129=$X010;
  var $130=$1;
  var $131=__ZN4jpgd12DCT_Upsample8Matrix442atEii($130, 1, 0);
  HEAP32[(($131)>>2)]=$129;
  var $132=$X011;
  var $133=((($132)*(426))|0);
  var $134=(($133)|0);
  var $135=(($134)|0);
  var $136=(($135)|0);
  var $137=((($136)+(512))|0);
  var $138=$137 >> 10;
  var $139=$1;
  var $140=__ZN4jpgd12DCT_Upsample8Matrix442atEii($139, 1, 1);
  HEAP32[(($140)>>2)]=$138;
  var $141=$1;
  var $142=__ZN4jpgd12DCT_Upsample8Matrix442atEii($141, 1, 2);
  HEAP32[(($142)>>2)]=0;
  var $143=$X011;
  var $144=((($143)*(23))|0);
  var $145=(($144)|0);
  var $146=(($145)|0);
  var $147=(($146)|0);
  var $148=((($147)+(512))|0);
  var $149=$148 >> 10;
  var $150=$1;
  var $151=__ZN4jpgd12DCT_Upsample8Matrix442atEii($150, 1, 3);
  HEAP32[(($151)>>2)]=$149;
  var $152=$1;
  var $153=__ZN4jpgd12DCT_Upsample8Matrix442atEii($152, 2, 0);
  HEAP32[(($153)>>2)]=0;
  var $154=$1;
  var $155=__ZN4jpgd12DCT_Upsample8Matrix442atEii($154, 2, 1);
  HEAP32[(($155)>>2)]=0;
  var $156=$1;
  var $157=__ZN4jpgd12DCT_Upsample8Matrix442atEii($156, 2, 2);
  HEAP32[(($157)>>2)]=0;
  var $158=$1;
  var $159=__ZN4jpgd12DCT_Upsample8Matrix442atEii($158, 2, 3);
  HEAP32[(($159)>>2)]=0;
  var $160=$X030;
  var $161=$1;
  var $162=__ZN4jpgd12DCT_Upsample8Matrix442atEii($161, 3, 0);
  HEAP32[(($162)>>2)]=$160;
  var $163=$X031;
  var $164=((($163)*(426))|0);
  var $165=(($164)|0);
  var $166=(($165)|0);
  var $167=(($166)|0);
  var $168=((($167)+(512))|0);
  var $169=$168 >> 10;
  var $170=$1;
  var $171=__ZN4jpgd12DCT_Upsample8Matrix442atEii($170, 3, 1);
  HEAP32[(($171)>>2)]=$169;
  var $172=$1;
  var $173=__ZN4jpgd12DCT_Upsample8Matrix442atEii($172, 3, 2);
  HEAP32[(($173)>>2)]=0;
  var $174=$X031;
  var $175=((($174)*(23))|0);
  var $176=(($175)|0);
  var $177=(($176)|0);
  var $178=(($177)|0);
  var $179=((($178)+(512))|0);
  var $180=$179 >> 10;
  var $181=$1;
  var $182=__ZN4jpgd12DCT_Upsample8Matrix442atEii($181, 3, 3);
  HEAP32[(($182)>>2)]=$180;
  var $183=$X001;
  var $184=((($183)*(928))|0);
  var $185=(($184)|0);
  var $186=(($185)|0);
  var $187=(($186)|0);
  var $188=((($187)+(512))|0);
  var $189=$188 >> 10;
  var $190=$2;
  var $191=__ZN4jpgd12DCT_Upsample8Matrix442atEii($190, 0, 0);
  HEAP32[(($191)>>2)]=$189;
  var $192=$X002;
  var $193=$2;
  var $194=__ZN4jpgd12DCT_Upsample8Matrix442atEii($193, 0, 1);
  HEAP32[(($194)>>2)]=$192;
  var $195=$X001;
  var $196=((($195)*(-75))|0);
  var $197=(($196)|0);
  var $198=(($197)|0);
  var $199=(($198)|0);
  var $200=((($199)+(512))|0);
  var $201=$200 >> 10;
  var $202=$2;
  var $203=__ZN4jpgd12DCT_Upsample8Matrix442atEii($202, 0, 2);
  HEAP32[(($203)>>2)]=$201;
  var $204=$2;
  var $205=__ZN4jpgd12DCT_Upsample8Matrix442atEii($204, 0, 3);
  HEAP32[(($205)>>2)]=0;
  var $206=$X011;
  var $207=((($206)*(928))|0);
  var $208=(($207)|0);
  var $209=(($208)|0);
  var $210=(($209)|0);
  var $211=((($210)+(512))|0);
  var $212=$211 >> 10;
  var $213=$2;
  var $214=__ZN4jpgd12DCT_Upsample8Matrix442atEii($213, 1, 0);
  HEAP32[(($214)>>2)]=$212;
  var $215=$X012;
  var $216=$2;
  var $217=__ZN4jpgd12DCT_Upsample8Matrix442atEii($216, 1, 1);
  HEAP32[(($217)>>2)]=$215;
  var $218=$X011;
  var $219=((($218)*(-75))|0);
  var $220=(($219)|0);
  var $221=(($220)|0);
  var $222=(($221)|0);
  var $223=((($222)+(512))|0);
  var $224=$223 >> 10;
  var $225=$2;
  var $226=__ZN4jpgd12DCT_Upsample8Matrix442atEii($225, 1, 2);
  HEAP32[(($226)>>2)]=$224;
  var $227=$2;
  var $228=__ZN4jpgd12DCT_Upsample8Matrix442atEii($227, 1, 3);
  HEAP32[(($228)>>2)]=0;
  var $229=$2;
  var $230=__ZN4jpgd12DCT_Upsample8Matrix442atEii($229, 2, 0);
  HEAP32[(($230)>>2)]=0;
  var $231=$2;
  var $232=__ZN4jpgd12DCT_Upsample8Matrix442atEii($231, 2, 1);
  HEAP32[(($232)>>2)]=0;
  var $233=$2;
  var $234=__ZN4jpgd12DCT_Upsample8Matrix442atEii($233, 2, 2);
  HEAP32[(($234)>>2)]=0;
  var $235=$2;
  var $236=__ZN4jpgd12DCT_Upsample8Matrix442atEii($235, 2, 3);
  HEAP32[(($236)>>2)]=0;
  var $237=$X031;
  var $238=((($237)*(928))|0);
  var $239=(($238)|0);
  var $240=(($239)|0);
  var $241=(($240)|0);
  var $242=((($241)+(512))|0);
  var $243=$242 >> 10;
  var $244=$2;
  var $245=__ZN4jpgd12DCT_Upsample8Matrix442atEii($244, 3, 0);
  HEAP32[(($245)>>2)]=$243;
  var $246=$X032;
  var $247=$2;
  var $248=__ZN4jpgd12DCT_Upsample8Matrix442atEii($247, 3, 1);
  HEAP32[(($248)>>2)]=$246;
  var $249=$X031;
  var $250=((($249)*(-75))|0);
  var $251=(($250)|0);
  var $252=(($251)|0);
  var $253=(($252)|0);
  var $254=((($253)+(512))|0);
  var $255=$254 >> 10;
  var $256=$2;
  var $257=__ZN4jpgd12DCT_Upsample8Matrix442atEii($256, 3, 2);
  HEAP32[(($257)>>2)]=$255;
  var $258=$2;
  var $259=__ZN4jpgd12DCT_Upsample8Matrix442atEii($258, 3, 3);
  HEAP32[(($259)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=(($14)|0);
  var $16=(($15)|0);
  var $17=((($16)+(512))|0);
  var $18=$17 >> 10;
  $X100=$18;
  var $19=$3;
  var $20=(($19+18)|0);
  var $21=HEAP16[(($20)>>1)];
  var $22=(($21 << 16) >> 16);
  var $23=((($22)*(928))|0);
  var $24=$3;
  var $25=(($24+22)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(-325))|0);
  var $29=((($23)+($28))|0);
  var $30=(($29)|0);
  var $31=(($30)|0);
  var $32=((($31)+(512))|0);
  var $33=$32 >> 10;
  $X101=$33;
  var $34=$3;
  var $35=(($34+34)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(928))|0);
  var $39=$3;
  var $40=(($39+38)|0);
  var $41=HEAP16[(($40)>>1)];
  var $42=(($41 << 16) >> 16);
  var $43=((($42)*(-325))|0);
  var $44=((($38)+($43))|0);
  var $45=(($44)|0);
  var $46=(($45)|0);
  var $47=((($46)+(512))|0);
  var $48=$47 >> 10;
  $X102=$48;
  $X103=0;
  $X104=0;
  $X105=0;
  $X106=0;
  $X107=0;
  var $49=$3;
  var $50=(($49+4)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  $X110=$52;
  var $53=$3;
  var $54=(($53+20)|0);
  var $55=HEAP16[(($54)>>1)];
  var $56=(($55 << 16) >> 16);
  $X111=$56;
  var $57=$3;
  var $58=(($57+36)|0);
  var $59=HEAP16[(($58)>>1)];
  var $60=(($59 << 16) >> 16);
  $X112=$60;
  $X113=0;
  $X114=0;
  $X115=0;
  $X116=0;
  $X117=0;
  var $61=$3;
  var $62=(($61+2)|0);
  var $63=HEAP16[(($62)>>1)];
  var $64=(($63 << 16) >> 16);
  var $65=((($64)*(-75))|0);
  var $66=$3;
  var $67=(($66+6)|0);
  var $68=HEAP16[(($67)>>1)];
  var $69=(($68 << 16) >> 16);
  var $70=((($69)*(526))|0);
  var $71=((($65)+($70))|0);
  var $72=(($71)|0);
  var $73=(($72)|0);
  var $74=((($73)+(512))|0);
  var $75=$74 >> 10;
  $X120=$75;
  var $76=$3;
  var $77=(($76+18)|0);
  var $78=HEAP16[(($77)>>1)];
  var $79=(($78 << 16) >> 16);
  var $80=((($79)*(-75))|0);
  var $81=$3;
  var $82=(($81+22)|0);
  var $83=HEAP16[(($82)>>1)];
  var $84=(($83 << 16) >> 16);
  var $85=((($84)*(526))|0);
  var $86=((($80)+($85))|0);
  var $87=(($86)|0);
  var $88=(($87)|0);
  var $89=((($88)+(512))|0);
  var $90=$89 >> 10;
  $X121=$90;
  var $91=$3;
  var $92=(($91+34)|0);
  var $93=HEAP16[(($92)>>1)];
  var $94=(($93 << 16) >> 16);
  var $95=((($94)*(-75))|0);
  var $96=$3;
  var $97=(($96+38)|0);
  var $98=HEAP16[(($97)>>1)];
  var $99=(($98 << 16) >> 16);
  var $100=((($99)*(526))|0);
  var $101=((($95)+($100))|0);
  var $102=(($101)|0);
  var $103=(($102)|0);
  var $104=((($103)+(512))|0);
  var $105=$104 >> 10;
  $X122=$105;
  $X123=0;
  $X124=0;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $106=$X100;
  var $107=$1;
  var $108=__ZN4jpgd12DCT_Upsample8Matrix442atEii($107, 0, 0);
  HEAP32[(($108)>>2)]=$106;
  var $109=$X101;
  var $110=((($109)*(426))|0);
  var $111=(($110)|0);
  var $112=(($111)|0);
  var $113=(($112)|0);
  var $114=((($113)+(512))|0);
  var $115=$114 >> 10;
  var $116=$1;
  var $117=__ZN4jpgd12DCT_Upsample8Matrix442atEii($116, 0, 1);
  HEAP32[(($117)>>2)]=$115;
  var $118=$1;
  var $119=__ZN4jpgd12DCT_Upsample8Matrix442atEii($118, 0, 2);
  HEAP32[(($119)>>2)]=0;
  var $120=$X101;
  var $121=((($120)*(23))|0);
  var $122=(($121)|0);
  var $123=(($122)|0);
  var $124=(($123)|0);
  var $125=((($124)+(512))|0);
  var $126=$125 >> 10;
  var $127=$1;
  var $128=__ZN4jpgd12DCT_Upsample8Matrix442atEii($127, 0, 3);
  HEAP32[(($128)>>2)]=$126;
  var $129=$X110;
  var $130=$1;
  var $131=__ZN4jpgd12DCT_Upsample8Matrix442atEii($130, 1, 0);
  HEAP32[(($131)>>2)]=$129;
  var $132=$X111;
  var $133=((($132)*(426))|0);
  var $134=(($133)|0);
  var $135=(($134)|0);
  var $136=(($135)|0);
  var $137=((($136)+(512))|0);
  var $138=$137 >> 10;
  var $139=$1;
  var $140=__ZN4jpgd12DCT_Upsample8Matrix442atEii($139, 1, 1);
  HEAP32[(($140)>>2)]=$138;
  var $141=$1;
  var $142=__ZN4jpgd12DCT_Upsample8Matrix442atEii($141, 1, 2);
  HEAP32[(($142)>>2)]=0;
  var $143=$X111;
  var $144=((($143)*(23))|0);
  var $145=(($144)|0);
  var $146=(($145)|0);
  var $147=(($146)|0);
  var $148=((($147)+(512))|0);
  var $149=$148 >> 10;
  var $150=$1;
  var $151=__ZN4jpgd12DCT_Upsample8Matrix442atEii($150, 1, 3);
  HEAP32[(($151)>>2)]=$149;
  var $152=$X120;
  var $153=$1;
  var $154=__ZN4jpgd12DCT_Upsample8Matrix442atEii($153, 2, 0);
  HEAP32[(($154)>>2)]=$152;
  var $155=$X121;
  var $156=((($155)*(426))|0);
  var $157=(($156)|0);
  var $158=(($157)|0);
  var $159=(($158)|0);
  var $160=((($159)+(512))|0);
  var $161=$160 >> 10;
  var $162=$1;
  var $163=__ZN4jpgd12DCT_Upsample8Matrix442atEii($162, 2, 1);
  HEAP32[(($163)>>2)]=$161;
  var $164=$1;
  var $165=__ZN4jpgd12DCT_Upsample8Matrix442atEii($164, 2, 2);
  HEAP32[(($165)>>2)]=0;
  var $166=$X121;
  var $167=((($166)*(23))|0);
  var $168=(($167)|0);
  var $169=(($168)|0);
  var $170=(($169)|0);
  var $171=((($170)+(512))|0);
  var $172=$171 >> 10;
  var $173=$1;
  var $174=__ZN4jpgd12DCT_Upsample8Matrix442atEii($173, 2, 3);
  HEAP32[(($174)>>2)]=$172;
  var $175=$1;
  var $176=__ZN4jpgd12DCT_Upsample8Matrix442atEii($175, 3, 0);
  HEAP32[(($176)>>2)]=0;
  var $177=$1;
  var $178=__ZN4jpgd12DCT_Upsample8Matrix442atEii($177, 3, 1);
  HEAP32[(($178)>>2)]=0;
  var $179=$1;
  var $180=__ZN4jpgd12DCT_Upsample8Matrix442atEii($179, 3, 2);
  HEAP32[(($180)>>2)]=0;
  var $181=$1;
  var $182=__ZN4jpgd12DCT_Upsample8Matrix442atEii($181, 3, 3);
  HEAP32[(($182)>>2)]=0;
  var $183=$X101;
  var $184=((($183)*(928))|0);
  var $185=(($184)|0);
  var $186=(($185)|0);
  var $187=(($186)|0);
  var $188=((($187)+(512))|0);
  var $189=$188 >> 10;
  var $190=$2;
  var $191=__ZN4jpgd12DCT_Upsample8Matrix442atEii($190, 0, 0);
  HEAP32[(($191)>>2)]=$189;
  var $192=$X102;
  var $193=$2;
  var $194=__ZN4jpgd12DCT_Upsample8Matrix442atEii($193, 0, 1);
  HEAP32[(($194)>>2)]=$192;
  var $195=$X101;
  var $196=((($195)*(-75))|0);
  var $197=(($196)|0);
  var $198=(($197)|0);
  var $199=(($198)|0);
  var $200=((($199)+(512))|0);
  var $201=$200 >> 10;
  var $202=$2;
  var $203=__ZN4jpgd12DCT_Upsample8Matrix442atEii($202, 0, 2);
  HEAP32[(($203)>>2)]=$201;
  var $204=$2;
  var $205=__ZN4jpgd12DCT_Upsample8Matrix442atEii($204, 0, 3);
  HEAP32[(($205)>>2)]=0;
  var $206=$X111;
  var $207=((($206)*(928))|0);
  var $208=(($207)|0);
  var $209=(($208)|0);
  var $210=(($209)|0);
  var $211=((($210)+(512))|0);
  var $212=$211 >> 10;
  var $213=$2;
  var $214=__ZN4jpgd12DCT_Upsample8Matrix442atEii($213, 1, 0);
  HEAP32[(($214)>>2)]=$212;
  var $215=$X112;
  var $216=$2;
  var $217=__ZN4jpgd12DCT_Upsample8Matrix442atEii($216, 1, 1);
  HEAP32[(($217)>>2)]=$215;
  var $218=$X111;
  var $219=((($218)*(-75))|0);
  var $220=(($219)|0);
  var $221=(($220)|0);
  var $222=(($221)|0);
  var $223=((($222)+(512))|0);
  var $224=$223 >> 10;
  var $225=$2;
  var $226=__ZN4jpgd12DCT_Upsample8Matrix442atEii($225, 1, 2);
  HEAP32[(($226)>>2)]=$224;
  var $227=$2;
  var $228=__ZN4jpgd12DCT_Upsample8Matrix442atEii($227, 1, 3);
  HEAP32[(($228)>>2)]=0;
  var $229=$X121;
  var $230=((($229)*(928))|0);
  var $231=(($230)|0);
  var $232=(($231)|0);
  var $233=(($232)|0);
  var $234=((($233)+(512))|0);
  var $235=$234 >> 10;
  var $236=$2;
  var $237=__ZN4jpgd12DCT_Upsample8Matrix442atEii($236, 2, 0);
  HEAP32[(($237)>>2)]=$235;
  var $238=$X122;
  var $239=$2;
  var $240=__ZN4jpgd12DCT_Upsample8Matrix442atEii($239, 2, 1);
  HEAP32[(($240)>>2)]=$238;
  var $241=$X121;
  var $242=((($241)*(-75))|0);
  var $243=(($242)|0);
  var $244=(($243)|0);
  var $245=(($244)|0);
  var $246=((($245)+(512))|0);
  var $247=$246 >> 10;
  var $248=$2;
  var $249=__ZN4jpgd12DCT_Upsample8Matrix442atEii($248, 2, 2);
  HEAP32[(($249)>>2)]=$247;
  var $250=$2;
  var $251=__ZN4jpgd12DCT_Upsample8Matrix442atEii($250, 2, 3);
  HEAP32[(($251)>>2)]=0;
  var $252=$2;
  var $253=__ZN4jpgd12DCT_Upsample8Matrix442atEii($252, 3, 0);
  HEAP32[(($253)>>2)]=0;
  var $254=$2;
  var $255=__ZN4jpgd12DCT_Upsample8Matrix442atEii($254, 3, 1);
  HEAP32[(($255)>>2)]=0;
  var $256=$2;
  var $257=__ZN4jpgd12DCT_Upsample8Matrix442atEii($256, 3, 2);
  HEAP32[(($257)>>2)]=0;
  var $258=$2;
  var $259=__ZN4jpgd12DCT_Upsample8Matrix442atEii($258, 3, 3);
  HEAP32[(($259)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  $X004=0;
  $X005=0;
  $X006=0;
  $X007=0;
  var $20=$3;
  var $21=(($20+2)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  var $24=((($23)*(426))|0);
  var $25=$3;
  var $26=(($25+6)|0);
  var $27=HEAP16[(($26)>>1)];
  var $28=(($27 << 16) >> 16);
  var $29=((($28)*(810))|0);
  var $30=((($24)+($29))|0);
  var $31=(($30)|0);
  var $32=(($31)|0);
  var $33=((($32)+(512))|0);
  var $34=$33 >> 10;
  $X010=$34;
  var $35=$3;
  var $36=(($35+18)|0);
  var $37=HEAP16[(($36)>>1)];
  var $38=(($37 << 16) >> 16);
  var $39=((($38)*(426))|0);
  var $40=$3;
  var $41=(($40+22)|0);
  var $42=HEAP16[(($41)>>1)];
  var $43=(($42 << 16) >> 16);
  var $44=((($43)*(810))|0);
  var $45=((($39)+($44))|0);
  var $46=(($45)|0);
  var $47=(($46)|0);
  var $48=((($47)+(512))|0);
  var $49=$48 >> 10;
  $X011=$49;
  var $50=$3;
  var $51=(($50+34)|0);
  var $52=HEAP16[(($51)>>1)];
  var $53=(($52 << 16) >> 16);
  var $54=((($53)*(426))|0);
  var $55=$3;
  var $56=(($55+38)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  var $59=((($58)*(810))|0);
  var $60=((($54)+($59))|0);
  var $61=(($60)|0);
  var $62=(($61)|0);
  var $63=((($62)+(512))|0);
  var $64=$63 >> 10;
  $X012=$64;
  var $65=$3;
  var $66=(($65+50)|0);
  var $67=HEAP16[(($66)>>1)];
  var $68=(($67 << 16) >> 16);
  var $69=((($68)*(426))|0);
  var $70=$3;
  var $71=(($70+54)|0);
  var $72=HEAP16[(($71)>>1)];
  var $73=(($72 << 16) >> 16);
  var $74=((($73)*(810))|0);
  var $75=((($69)+($74))|0);
  var $76=(($75)|0);
  var $77=(($76)|0);
  var $78=((($77)+(512))|0);
  var $79=$78 >> 10;
  $X013=$79;
  $X014=0;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  var $80=$3;
  var $81=(($80+2)|0);
  var $82=HEAP16[(($81)>>1)];
  var $83=(($82 << 16) >> 16);
  var $84=((($83)*(23))|0);
  var $85=$3;
  var $86=(($85+6)|0);
  var $87=HEAP16[(($86)>>1)];
  var $88=(($87 << 16) >> 16);
  var $89=((($88)*(-99))|0);
  var $90=((($84)+($89))|0);
  var $91=(($90)|0);
  var $92=(($91)|0);
  var $93=((($92)+(512))|0);
  var $94=$93 >> 10;
  $X030=$94;
  var $95=$3;
  var $96=(($95+18)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  var $99=((($98)*(23))|0);
  var $100=$3;
  var $101=(($100+22)|0);
  var $102=HEAP16[(($101)>>1)];
  var $103=(($102 << 16) >> 16);
  var $104=((($103)*(-99))|0);
  var $105=((($99)+($104))|0);
  var $106=(($105)|0);
  var $107=(($106)|0);
  var $108=((($107)+(512))|0);
  var $109=$108 >> 10;
  $X031=$109;
  var $110=$3;
  var $111=(($110+34)|0);
  var $112=HEAP16[(($111)>>1)];
  var $113=(($112 << 16) >> 16);
  var $114=((($113)*(23))|0);
  var $115=$3;
  var $116=(($115+38)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(-99))|0);
  var $120=((($114)+($119))|0);
  var $121=(($120)|0);
  var $122=(($121)|0);
  var $123=((($122)+(512))|0);
  var $124=$123 >> 10;
  $X032=$124;
  var $125=$3;
  var $126=(($125+50)|0);
  var $127=HEAP16[(($126)>>1)];
  var $128=(($127 << 16) >> 16);
  var $129=((($128)*(23))|0);
  var $130=$3;
  var $131=(($130+54)|0);
  var $132=HEAP16[(($131)>>1)];
  var $133=(($132 << 16) >> 16);
  var $134=((($133)*(-99))|0);
  var $135=((($129)+($134))|0);
  var $136=(($135)|0);
  var $137=(($136)|0);
  var $138=((($137)+(512))|0);
  var $139=$138 >> 10;
  $X033=$139;
  $X034=0;
  $X035=0;
  $X036=0;
  $X037=0;
  var $140=$X000;
  var $141=$1;
  var $142=__ZN4jpgd12DCT_Upsample8Matrix442atEii($141, 0, 0);
  HEAP32[(($142)>>2)]=$140;
  var $143=$X001;
  var $144=((($143)*(426))|0);
  var $145=$X003;
  var $146=((($145)*(810))|0);
  var $147=((($144)+($146))|0);
  var $148=(($147)|0);
  var $149=(($148)|0);
  var $150=((($149)+(512))|0);
  var $151=$150 >> 10;
  var $152=$1;
  var $153=__ZN4jpgd12DCT_Upsample8Matrix442atEii($152, 0, 1);
  HEAP32[(($153)>>2)]=$151;
  var $154=$1;
  var $155=__ZN4jpgd12DCT_Upsample8Matrix442atEii($154, 0, 2);
  HEAP32[(($155)>>2)]=0;
  var $156=$X001;
  var $157=((($156)*(23))|0);
  var $158=$X003;
  var $159=((($158)*(-99))|0);
  var $160=((($157)+($159))|0);
  var $161=(($160)|0);
  var $162=(($161)|0);
  var $163=((($162)+(512))|0);
  var $164=$163 >> 10;
  var $165=$1;
  var $166=__ZN4jpgd12DCT_Upsample8Matrix442atEii($165, 0, 3);
  HEAP32[(($166)>>2)]=$164;
  var $167=$X010;
  var $168=$1;
  var $169=__ZN4jpgd12DCT_Upsample8Matrix442atEii($168, 1, 0);
  HEAP32[(($169)>>2)]=$167;
  var $170=$X011;
  var $171=((($170)*(426))|0);
  var $172=$X013;
  var $173=((($172)*(810))|0);
  var $174=((($171)+($173))|0);
  var $175=(($174)|0);
  var $176=(($175)|0);
  var $177=((($176)+(512))|0);
  var $178=$177 >> 10;
  var $179=$1;
  var $180=__ZN4jpgd12DCT_Upsample8Matrix442atEii($179, 1, 1);
  HEAP32[(($180)>>2)]=$178;
  var $181=$1;
  var $182=__ZN4jpgd12DCT_Upsample8Matrix442atEii($181, 1, 2);
  HEAP32[(($182)>>2)]=0;
  var $183=$X011;
  var $184=((($183)*(23))|0);
  var $185=$X013;
  var $186=((($185)*(-99))|0);
  var $187=((($184)+($186))|0);
  var $188=(($187)|0);
  var $189=(($188)|0);
  var $190=((($189)+(512))|0);
  var $191=$190 >> 10;
  var $192=$1;
  var $193=__ZN4jpgd12DCT_Upsample8Matrix442atEii($192, 1, 3);
  HEAP32[(($193)>>2)]=$191;
  var $194=$1;
  var $195=__ZN4jpgd12DCT_Upsample8Matrix442atEii($194, 2, 0);
  HEAP32[(($195)>>2)]=0;
  var $196=$1;
  var $197=__ZN4jpgd12DCT_Upsample8Matrix442atEii($196, 2, 1);
  HEAP32[(($197)>>2)]=0;
  var $198=$1;
  var $199=__ZN4jpgd12DCT_Upsample8Matrix442atEii($198, 2, 2);
  HEAP32[(($199)>>2)]=0;
  var $200=$1;
  var $201=__ZN4jpgd12DCT_Upsample8Matrix442atEii($200, 2, 3);
  HEAP32[(($201)>>2)]=0;
  var $202=$X030;
  var $203=$1;
  var $204=__ZN4jpgd12DCT_Upsample8Matrix442atEii($203, 3, 0);
  HEAP32[(($204)>>2)]=$202;
  var $205=$X031;
  var $206=((($205)*(426))|0);
  var $207=$X033;
  var $208=((($207)*(810))|0);
  var $209=((($206)+($208))|0);
  var $210=(($209)|0);
  var $211=(($210)|0);
  var $212=((($211)+(512))|0);
  var $213=$212 >> 10;
  var $214=$1;
  var $215=__ZN4jpgd12DCT_Upsample8Matrix442atEii($214, 3, 1);
  HEAP32[(($215)>>2)]=$213;
  var $216=$1;
  var $217=__ZN4jpgd12DCT_Upsample8Matrix442atEii($216, 3, 2);
  HEAP32[(($217)>>2)]=0;
  var $218=$X031;
  var $219=((($218)*(23))|0);
  var $220=$X033;
  var $221=((($220)*(-99))|0);
  var $222=((($219)+($221))|0);
  var $223=(($222)|0);
  var $224=(($223)|0);
  var $225=((($224)+(512))|0);
  var $226=$225 >> 10;
  var $227=$1;
  var $228=__ZN4jpgd12DCT_Upsample8Matrix442atEii($227, 3, 3);
  HEAP32[(($228)>>2)]=$226;
  var $229=$X001;
  var $230=((($229)*(928))|0);
  var $231=$X003;
  var $232=((($231)*(-325))|0);
  var $233=((($230)+($232))|0);
  var $234=(($233)|0);
  var $235=(($234)|0);
  var $236=((($235)+(512))|0);
  var $237=$236 >> 10;
  var $238=$2;
  var $239=__ZN4jpgd12DCT_Upsample8Matrix442atEii($238, 0, 0);
  HEAP32[(($239)>>2)]=$237;
  var $240=$X002;
  var $241=$2;
  var $242=__ZN4jpgd12DCT_Upsample8Matrix442atEii($241, 0, 1);
  HEAP32[(($242)>>2)]=$240;
  var $243=$X001;
  var $244=((($243)*(-75))|0);
  var $245=$X003;
  var $246=((($245)*(526))|0);
  var $247=((($244)+($246))|0);
  var $248=(($247)|0);
  var $249=(($248)|0);
  var $250=((($249)+(512))|0);
  var $251=$250 >> 10;
  var $252=$2;
  var $253=__ZN4jpgd12DCT_Upsample8Matrix442atEii($252, 0, 2);
  HEAP32[(($253)>>2)]=$251;
  var $254=$2;
  var $255=__ZN4jpgd12DCT_Upsample8Matrix442atEii($254, 0, 3);
  HEAP32[(($255)>>2)]=0;
  var $256=$X011;
  var $257=((($256)*(928))|0);
  var $258=$X013;
  var $259=((($258)*(-325))|0);
  var $260=((($257)+($259))|0);
  var $261=(($260)|0);
  var $262=(($261)|0);
  var $263=((($262)+(512))|0);
  var $264=$263 >> 10;
  var $265=$2;
  var $266=__ZN4jpgd12DCT_Upsample8Matrix442atEii($265, 1, 0);
  HEAP32[(($266)>>2)]=$264;
  var $267=$X012;
  var $268=$2;
  var $269=__ZN4jpgd12DCT_Upsample8Matrix442atEii($268, 1, 1);
  HEAP32[(($269)>>2)]=$267;
  var $270=$X011;
  var $271=((($270)*(-75))|0);
  var $272=$X013;
  var $273=((($272)*(526))|0);
  var $274=((($271)+($273))|0);
  var $275=(($274)|0);
  var $276=(($275)|0);
  var $277=((($276)+(512))|0);
  var $278=$277 >> 10;
  var $279=$2;
  var $280=__ZN4jpgd12DCT_Upsample8Matrix442atEii($279, 1, 2);
  HEAP32[(($280)>>2)]=$278;
  var $281=$2;
  var $282=__ZN4jpgd12DCT_Upsample8Matrix442atEii($281, 1, 3);
  HEAP32[(($282)>>2)]=0;
  var $283=$2;
  var $284=__ZN4jpgd12DCT_Upsample8Matrix442atEii($283, 2, 0);
  HEAP32[(($284)>>2)]=0;
  var $285=$2;
  var $286=__ZN4jpgd12DCT_Upsample8Matrix442atEii($285, 2, 1);
  HEAP32[(($286)>>2)]=0;
  var $287=$2;
  var $288=__ZN4jpgd12DCT_Upsample8Matrix442atEii($287, 2, 2);
  HEAP32[(($288)>>2)]=0;
  var $289=$2;
  var $290=__ZN4jpgd12DCT_Upsample8Matrix442atEii($289, 2, 3);
  HEAP32[(($290)>>2)]=0;
  var $291=$X031;
  var $292=((($291)*(928))|0);
  var $293=$X033;
  var $294=((($293)*(-325))|0);
  var $295=((($292)+($294))|0);
  var $296=(($295)|0);
  var $297=(($296)|0);
  var $298=((($297)+(512))|0);
  var $299=$298 >> 10;
  var $300=$2;
  var $301=__ZN4jpgd12DCT_Upsample8Matrix442atEii($300, 3, 0);
  HEAP32[(($301)>>2)]=$299;
  var $302=$X032;
  var $303=$2;
  var $304=__ZN4jpgd12DCT_Upsample8Matrix442atEii($303, 3, 1);
  HEAP32[(($304)>>2)]=$302;
  var $305=$X031;
  var $306=((($305)*(-75))|0);
  var $307=$X033;
  var $308=((($307)*(526))|0);
  var $309=((($306)+($308))|0);
  var $310=(($309)|0);
  var $311=(($310)|0);
  var $312=((($311)+(512))|0);
  var $313=$312 >> 10;
  var $314=$2;
  var $315=__ZN4jpgd12DCT_Upsample8Matrix442atEii($314, 3, 2);
  HEAP32[(($315)>>2)]=$313;
  var $316=$2;
  var $317=__ZN4jpgd12DCT_Upsample8Matrix442atEii($316, 3, 3);
  HEAP32[(($317)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=(($14)|0);
  var $16=(($15)|0);
  var $17=((($16)+(512))|0);
  var $18=$17 >> 10;
  $X100=$18;
  var $19=$3;
  var $20=(($19+18)|0);
  var $21=HEAP16[(($20)>>1)];
  var $22=(($21 << 16) >> 16);
  var $23=((($22)*(928))|0);
  var $24=$3;
  var $25=(($24+22)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(-325))|0);
  var $29=((($23)+($28))|0);
  var $30=(($29)|0);
  var $31=(($30)|0);
  var $32=((($31)+(512))|0);
  var $33=$32 >> 10;
  $X101=$33;
  var $34=$3;
  var $35=(($34+34)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(928))|0);
  var $39=$3;
  var $40=(($39+38)|0);
  var $41=HEAP16[(($40)>>1)];
  var $42=(($41 << 16) >> 16);
  var $43=((($42)*(-325))|0);
  var $44=((($38)+($43))|0);
  var $45=(($44)|0);
  var $46=(($45)|0);
  var $47=((($46)+(512))|0);
  var $48=$47 >> 10;
  $X102=$48;
  var $49=$3;
  var $50=(($49+50)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(928))|0);
  var $54=$3;
  var $55=(($54+54)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(-325))|0);
  var $59=((($53)+($58))|0);
  var $60=(($59)|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X103=$63;
  $X104=0;
  $X105=0;
  $X106=0;
  $X107=0;
  var $64=$3;
  var $65=(($64+4)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  $X110=$67;
  var $68=$3;
  var $69=(($68+20)|0);
  var $70=HEAP16[(($69)>>1)];
  var $71=(($70 << 16) >> 16);
  $X111=$71;
  var $72=$3;
  var $73=(($72+36)|0);
  var $74=HEAP16[(($73)>>1)];
  var $75=(($74 << 16) >> 16);
  $X112=$75;
  var $76=$3;
  var $77=(($76+52)|0);
  var $78=HEAP16[(($77)>>1)];
  var $79=(($78 << 16) >> 16);
  $X113=$79;
  $X114=0;
  $X115=0;
  $X116=0;
  $X117=0;
  var $80=$3;
  var $81=(($80+2)|0);
  var $82=HEAP16[(($81)>>1)];
  var $83=(($82 << 16) >> 16);
  var $84=((($83)*(-75))|0);
  var $85=$3;
  var $86=(($85+6)|0);
  var $87=HEAP16[(($86)>>1)];
  var $88=(($87 << 16) >> 16);
  var $89=((($88)*(526))|0);
  var $90=((($84)+($89))|0);
  var $91=(($90)|0);
  var $92=(($91)|0);
  var $93=((($92)+(512))|0);
  var $94=$93 >> 10;
  $X120=$94;
  var $95=$3;
  var $96=(($95+18)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  var $99=((($98)*(-75))|0);
  var $100=$3;
  var $101=(($100+22)|0);
  var $102=HEAP16[(($101)>>1)];
  var $103=(($102 << 16) >> 16);
  var $104=((($103)*(526))|0);
  var $105=((($99)+($104))|0);
  var $106=(($105)|0);
  var $107=(($106)|0);
  var $108=((($107)+(512))|0);
  var $109=$108 >> 10;
  $X121=$109;
  var $110=$3;
  var $111=(($110+34)|0);
  var $112=HEAP16[(($111)>>1)];
  var $113=(($112 << 16) >> 16);
  var $114=((($113)*(-75))|0);
  var $115=$3;
  var $116=(($115+38)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(526))|0);
  var $120=((($114)+($119))|0);
  var $121=(($120)|0);
  var $122=(($121)|0);
  var $123=((($122)+(512))|0);
  var $124=$123 >> 10;
  $X122=$124;
  var $125=$3;
  var $126=(($125+50)|0);
  var $127=HEAP16[(($126)>>1)];
  var $128=(($127 << 16) >> 16);
  var $129=((($128)*(-75))|0);
  var $130=$3;
  var $131=(($130+54)|0);
  var $132=HEAP16[(($131)>>1)];
  var $133=(($132 << 16) >> 16);
  var $134=((($133)*(526))|0);
  var $135=((($129)+($134))|0);
  var $136=(($135)|0);
  var $137=(($136)|0);
  var $138=((($137)+(512))|0);
  var $139=$138 >> 10;
  $X123=$139;
  $X124=0;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $140=$X100;
  var $141=$1;
  var $142=__ZN4jpgd12DCT_Upsample8Matrix442atEii($141, 0, 0);
  HEAP32[(($142)>>2)]=$140;
  var $143=$X101;
  var $144=((($143)*(426))|0);
  var $145=$X103;
  var $146=((($145)*(810))|0);
  var $147=((($144)+($146))|0);
  var $148=(($147)|0);
  var $149=(($148)|0);
  var $150=((($149)+(512))|0);
  var $151=$150 >> 10;
  var $152=$1;
  var $153=__ZN4jpgd12DCT_Upsample8Matrix442atEii($152, 0, 1);
  HEAP32[(($153)>>2)]=$151;
  var $154=$1;
  var $155=__ZN4jpgd12DCT_Upsample8Matrix442atEii($154, 0, 2);
  HEAP32[(($155)>>2)]=0;
  var $156=$X101;
  var $157=((($156)*(23))|0);
  var $158=$X103;
  var $159=((($158)*(-99))|0);
  var $160=((($157)+($159))|0);
  var $161=(($160)|0);
  var $162=(($161)|0);
  var $163=((($162)+(512))|0);
  var $164=$163 >> 10;
  var $165=$1;
  var $166=__ZN4jpgd12DCT_Upsample8Matrix442atEii($165, 0, 3);
  HEAP32[(($166)>>2)]=$164;
  var $167=$X110;
  var $168=$1;
  var $169=__ZN4jpgd12DCT_Upsample8Matrix442atEii($168, 1, 0);
  HEAP32[(($169)>>2)]=$167;
  var $170=$X111;
  var $171=((($170)*(426))|0);
  var $172=$X113;
  var $173=((($172)*(810))|0);
  var $174=((($171)+($173))|0);
  var $175=(($174)|0);
  var $176=(($175)|0);
  var $177=((($176)+(512))|0);
  var $178=$177 >> 10;
  var $179=$1;
  var $180=__ZN4jpgd12DCT_Upsample8Matrix442atEii($179, 1, 1);
  HEAP32[(($180)>>2)]=$178;
  var $181=$1;
  var $182=__ZN4jpgd12DCT_Upsample8Matrix442atEii($181, 1, 2);
  HEAP32[(($182)>>2)]=0;
  var $183=$X111;
  var $184=((($183)*(23))|0);
  var $185=$X113;
  var $186=((($185)*(-99))|0);
  var $187=((($184)+($186))|0);
  var $188=(($187)|0);
  var $189=(($188)|0);
  var $190=((($189)+(512))|0);
  var $191=$190 >> 10;
  var $192=$1;
  var $193=__ZN4jpgd12DCT_Upsample8Matrix442atEii($192, 1, 3);
  HEAP32[(($193)>>2)]=$191;
  var $194=$X120;
  var $195=$1;
  var $196=__ZN4jpgd12DCT_Upsample8Matrix442atEii($195, 2, 0);
  HEAP32[(($196)>>2)]=$194;
  var $197=$X121;
  var $198=((($197)*(426))|0);
  var $199=$X123;
  var $200=((($199)*(810))|0);
  var $201=((($198)+($200))|0);
  var $202=(($201)|0);
  var $203=(($202)|0);
  var $204=((($203)+(512))|0);
  var $205=$204 >> 10;
  var $206=$1;
  var $207=__ZN4jpgd12DCT_Upsample8Matrix442atEii($206, 2, 1);
  HEAP32[(($207)>>2)]=$205;
  var $208=$1;
  var $209=__ZN4jpgd12DCT_Upsample8Matrix442atEii($208, 2, 2);
  HEAP32[(($209)>>2)]=0;
  var $210=$X121;
  var $211=((($210)*(23))|0);
  var $212=$X123;
  var $213=((($212)*(-99))|0);
  var $214=((($211)+($213))|0);
  var $215=(($214)|0);
  var $216=(($215)|0);
  var $217=((($216)+(512))|0);
  var $218=$217 >> 10;
  var $219=$1;
  var $220=__ZN4jpgd12DCT_Upsample8Matrix442atEii($219, 2, 3);
  HEAP32[(($220)>>2)]=$218;
  var $221=$1;
  var $222=__ZN4jpgd12DCT_Upsample8Matrix442atEii($221, 3, 0);
  HEAP32[(($222)>>2)]=0;
  var $223=$1;
  var $224=__ZN4jpgd12DCT_Upsample8Matrix442atEii($223, 3, 1);
  HEAP32[(($224)>>2)]=0;
  var $225=$1;
  var $226=__ZN4jpgd12DCT_Upsample8Matrix442atEii($225, 3, 2);
  HEAP32[(($226)>>2)]=0;
  var $227=$1;
  var $228=__ZN4jpgd12DCT_Upsample8Matrix442atEii($227, 3, 3);
  HEAP32[(($228)>>2)]=0;
  var $229=$X101;
  var $230=((($229)*(928))|0);
  var $231=$X103;
  var $232=((($231)*(-325))|0);
  var $233=((($230)+($232))|0);
  var $234=(($233)|0);
  var $235=(($234)|0);
  var $236=((($235)+(512))|0);
  var $237=$236 >> 10;
  var $238=$2;
  var $239=__ZN4jpgd12DCT_Upsample8Matrix442atEii($238, 0, 0);
  HEAP32[(($239)>>2)]=$237;
  var $240=$X102;
  var $241=$2;
  var $242=__ZN4jpgd12DCT_Upsample8Matrix442atEii($241, 0, 1);
  HEAP32[(($242)>>2)]=$240;
  var $243=$X101;
  var $244=((($243)*(-75))|0);
  var $245=$X103;
  var $246=((($245)*(526))|0);
  var $247=((($244)+($246))|0);
  var $248=(($247)|0);
  var $249=(($248)|0);
  var $250=((($249)+(512))|0);
  var $251=$250 >> 10;
  var $252=$2;
  var $253=__ZN4jpgd12DCT_Upsample8Matrix442atEii($252, 0, 2);
  HEAP32[(($253)>>2)]=$251;
  var $254=$2;
  var $255=__ZN4jpgd12DCT_Upsample8Matrix442atEii($254, 0, 3);
  HEAP32[(($255)>>2)]=0;
  var $256=$X111;
  var $257=((($256)*(928))|0);
  var $258=$X113;
  var $259=((($258)*(-325))|0);
  var $260=((($257)+($259))|0);
  var $261=(($260)|0);
  var $262=(($261)|0);
  var $263=((($262)+(512))|0);
  var $264=$263 >> 10;
  var $265=$2;
  var $266=__ZN4jpgd12DCT_Upsample8Matrix442atEii($265, 1, 0);
  HEAP32[(($266)>>2)]=$264;
  var $267=$X112;
  var $268=$2;
  var $269=__ZN4jpgd12DCT_Upsample8Matrix442atEii($268, 1, 1);
  HEAP32[(($269)>>2)]=$267;
  var $270=$X111;
  var $271=((($270)*(-75))|0);
  var $272=$X113;
  var $273=((($272)*(526))|0);
  var $274=((($271)+($273))|0);
  var $275=(($274)|0);
  var $276=(($275)|0);
  var $277=((($276)+(512))|0);
  var $278=$277 >> 10;
  var $279=$2;
  var $280=__ZN4jpgd12DCT_Upsample8Matrix442atEii($279, 1, 2);
  HEAP32[(($280)>>2)]=$278;
  var $281=$2;
  var $282=__ZN4jpgd12DCT_Upsample8Matrix442atEii($281, 1, 3);
  HEAP32[(($282)>>2)]=0;
  var $283=$X121;
  var $284=((($283)*(928))|0);
  var $285=$X123;
  var $286=((($285)*(-325))|0);
  var $287=((($284)+($286))|0);
  var $288=(($287)|0);
  var $289=(($288)|0);
  var $290=((($289)+(512))|0);
  var $291=$290 >> 10;
  var $292=$2;
  var $293=__ZN4jpgd12DCT_Upsample8Matrix442atEii($292, 2, 0);
  HEAP32[(($293)>>2)]=$291;
  var $294=$X122;
  var $295=$2;
  var $296=__ZN4jpgd12DCT_Upsample8Matrix442atEii($295, 2, 1);
  HEAP32[(($296)>>2)]=$294;
  var $297=$X121;
  var $298=((($297)*(-75))|0);
  var $299=$X123;
  var $300=((($299)*(526))|0);
  var $301=((($298)+($300))|0);
  var $302=(($301)|0);
  var $303=(($302)|0);
  var $304=((($303)+(512))|0);
  var $305=$304 >> 10;
  var $306=$2;
  var $307=__ZN4jpgd12DCT_Upsample8Matrix442atEii($306, 2, 2);
  HEAP32[(($307)>>2)]=$305;
  var $308=$2;
  var $309=__ZN4jpgd12DCT_Upsample8Matrix442atEii($308, 2, 3);
  HEAP32[(($309)>>2)]=0;
  var $310=$2;
  var $311=__ZN4jpgd12DCT_Upsample8Matrix442atEii($310, 3, 0);
  HEAP32[(($311)>>2)]=0;
  var $312=$2;
  var $313=__ZN4jpgd12DCT_Upsample8Matrix442atEii($312, 3, 1);
  HEAP32[(($313)>>2)]=0;
  var $314=$2;
  var $315=__ZN4jpgd12DCT_Upsample8Matrix442atEii($314, 3, 2);
  HEAP32[(($315)>>2)]=0;
  var $316=$2;
  var $317=__ZN4jpgd12DCT_Upsample8Matrix442atEii($316, 3, 3);
  HEAP32[(($317)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  $X005=0;
  $X006=0;
  $X007=0;
  var $24=$3;
  var $25=(($24+2)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(426))|0);
  var $29=$3;
  var $30=(($29+6)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(810))|0);
  var $34=((($28)+($33))|0);
  var $35=(($34)|0);
  var $36=(($35)|0);
  var $37=((($36)+(512))|0);
  var $38=$37 >> 10;
  $X010=$38;
  var $39=$3;
  var $40=(($39+18)|0);
  var $41=HEAP16[(($40)>>1)];
  var $42=(($41 << 16) >> 16);
  var $43=((($42)*(426))|0);
  var $44=$3;
  var $45=(($44+22)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(810))|0);
  var $49=((($43)+($48))|0);
  var $50=(($49)|0);
  var $51=(($50)|0);
  var $52=((($51)+(512))|0);
  var $53=$52 >> 10;
  $X011=$53;
  var $54=$3;
  var $55=(($54+34)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(426))|0);
  var $59=$3;
  var $60=(($59+38)|0);
  var $61=HEAP16[(($60)>>1)];
  var $62=(($61 << 16) >> 16);
  var $63=((($62)*(810))|0);
  var $64=((($58)+($63))|0);
  var $65=(($64)|0);
  var $66=(($65)|0);
  var $67=((($66)+(512))|0);
  var $68=$67 >> 10;
  $X012=$68;
  var $69=$3;
  var $70=(($69+50)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(426))|0);
  var $74=$3;
  var $75=(($74+54)|0);
  var $76=HEAP16[(($75)>>1)];
  var $77=(($76 << 16) >> 16);
  var $78=((($77)*(810))|0);
  var $79=((($73)+($78))|0);
  var $80=(($79)|0);
  var $81=(($80)|0);
  var $82=((($81)+(512))|0);
  var $83=$82 >> 10;
  $X013=$83;
  var $84=$3;
  var $85=(($84+66)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(426))|0);
  var $89=$3;
  var $90=(($89+70)|0);
  var $91=HEAP16[(($90)>>1)];
  var $92=(($91 << 16) >> 16);
  var $93=((($92)*(810))|0);
  var $94=((($88)+($93))|0);
  var $95=(($94)|0);
  var $96=(($95)|0);
  var $97=((($96)+(512))|0);
  var $98=$97 >> 10;
  $X014=$98;
  $X015=0;
  $X016=0;
  $X017=0;
  $X020=0;
  $X021=0;
  $X022=0;
  $X023=0;
  $X024=0;
  $X025=0;
  $X026=0;
  $X027=0;
  var $99=$3;
  var $100=(($99+2)|0);
  var $101=HEAP16[(($100)>>1)];
  var $102=(($101 << 16) >> 16);
  var $103=((($102)*(23))|0);
  var $104=$3;
  var $105=(($104+6)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(-99))|0);
  var $109=((($103)+($108))|0);
  var $110=(($109)|0);
  var $111=(($110)|0);
  var $112=((($111)+(512))|0);
  var $113=$112 >> 10;
  $X030=$113;
  var $114=$3;
  var $115=(($114+18)|0);
  var $116=HEAP16[(($115)>>1)];
  var $117=(($116 << 16) >> 16);
  var $118=((($117)*(23))|0);
  var $119=$3;
  var $120=(($119+22)|0);
  var $121=HEAP16[(($120)>>1)];
  var $122=(($121 << 16) >> 16);
  var $123=((($122)*(-99))|0);
  var $124=((($118)+($123))|0);
  var $125=(($124)|0);
  var $126=(($125)|0);
  var $127=((($126)+(512))|0);
  var $128=$127 >> 10;
  $X031=$128;
  var $129=$3;
  var $130=(($129+34)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(23))|0);
  var $134=$3;
  var $135=(($134+38)|0);
  var $136=HEAP16[(($135)>>1)];
  var $137=(($136 << 16) >> 16);
  var $138=((($137)*(-99))|0);
  var $139=((($133)+($138))|0);
  var $140=(($139)|0);
  var $141=(($140)|0);
  var $142=((($141)+(512))|0);
  var $143=$142 >> 10;
  $X032=$143;
  var $144=$3;
  var $145=(($144+50)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  var $148=((($147)*(23))|0);
  var $149=$3;
  var $150=(($149+54)|0);
  var $151=HEAP16[(($150)>>1)];
  var $152=(($151 << 16) >> 16);
  var $153=((($152)*(-99))|0);
  var $154=((($148)+($153))|0);
  var $155=(($154)|0);
  var $156=(($155)|0);
  var $157=((($156)+(512))|0);
  var $158=$157 >> 10;
  $X033=$158;
  var $159=$3;
  var $160=(($159+66)|0);
  var $161=HEAP16[(($160)>>1)];
  var $162=(($161 << 16) >> 16);
  var $163=((($162)*(23))|0);
  var $164=$3;
  var $165=(($164+70)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  var $168=((($167)*(-99))|0);
  var $169=((($163)+($168))|0);
  var $170=(($169)|0);
  var $171=(($170)|0);
  var $172=((($171)+(512))|0);
  var $173=$172 >> 10;
  $X034=$173;
  $X035=0;
  $X036=0;
  $X037=0;
  var $174=$X000;
  var $175=$1;
  var $176=__ZN4jpgd12DCT_Upsample8Matrix442atEii($175, 0, 0);
  HEAP32[(($176)>>2)]=$174;
  var $177=$X001;
  var $178=((($177)*(426))|0);
  var $179=$X003;
  var $180=((($179)*(810))|0);
  var $181=((($178)+($180))|0);
  var $182=(($181)|0);
  var $183=(($182)|0);
  var $184=((($183)+(512))|0);
  var $185=$184 >> 10;
  var $186=$1;
  var $187=__ZN4jpgd12DCT_Upsample8Matrix442atEii($186, 0, 1);
  HEAP32[(($187)>>2)]=$185;
  var $188=$X004;
  var $189=$1;
  var $190=__ZN4jpgd12DCT_Upsample8Matrix442atEii($189, 0, 2);
  HEAP32[(($190)>>2)]=$188;
  var $191=$X001;
  var $192=((($191)*(23))|0);
  var $193=$X003;
  var $194=((($193)*(-99))|0);
  var $195=((($192)+($194))|0);
  var $196=(($195)|0);
  var $197=(($196)|0);
  var $198=((($197)+(512))|0);
  var $199=$198 >> 10;
  var $200=$1;
  var $201=__ZN4jpgd12DCT_Upsample8Matrix442atEii($200, 0, 3);
  HEAP32[(($201)>>2)]=$199;
  var $202=$X010;
  var $203=$1;
  var $204=__ZN4jpgd12DCT_Upsample8Matrix442atEii($203, 1, 0);
  HEAP32[(($204)>>2)]=$202;
  var $205=$X011;
  var $206=((($205)*(426))|0);
  var $207=$X013;
  var $208=((($207)*(810))|0);
  var $209=((($206)+($208))|0);
  var $210=(($209)|0);
  var $211=(($210)|0);
  var $212=((($211)+(512))|0);
  var $213=$212 >> 10;
  var $214=$1;
  var $215=__ZN4jpgd12DCT_Upsample8Matrix442atEii($214, 1, 1);
  HEAP32[(($215)>>2)]=$213;
  var $216=$X014;
  var $217=$1;
  var $218=__ZN4jpgd12DCT_Upsample8Matrix442atEii($217, 1, 2);
  HEAP32[(($218)>>2)]=$216;
  var $219=$X011;
  var $220=((($219)*(23))|0);
  var $221=$X013;
  var $222=((($221)*(-99))|0);
  var $223=((($220)+($222))|0);
  var $224=(($223)|0);
  var $225=(($224)|0);
  var $226=((($225)+(512))|0);
  var $227=$226 >> 10;
  var $228=$1;
  var $229=__ZN4jpgd12DCT_Upsample8Matrix442atEii($228, 1, 3);
  HEAP32[(($229)>>2)]=$227;
  var $230=$1;
  var $231=__ZN4jpgd12DCT_Upsample8Matrix442atEii($230, 2, 0);
  HEAP32[(($231)>>2)]=0;
  var $232=$1;
  var $233=__ZN4jpgd12DCT_Upsample8Matrix442atEii($232, 2, 1);
  HEAP32[(($233)>>2)]=0;
  var $234=$1;
  var $235=__ZN4jpgd12DCT_Upsample8Matrix442atEii($234, 2, 2);
  HEAP32[(($235)>>2)]=0;
  var $236=$1;
  var $237=__ZN4jpgd12DCT_Upsample8Matrix442atEii($236, 2, 3);
  HEAP32[(($237)>>2)]=0;
  var $238=$X030;
  var $239=$1;
  var $240=__ZN4jpgd12DCT_Upsample8Matrix442atEii($239, 3, 0);
  HEAP32[(($240)>>2)]=$238;
  var $241=$X031;
  var $242=((($241)*(426))|0);
  var $243=$X033;
  var $244=((($243)*(810))|0);
  var $245=((($242)+($244))|0);
  var $246=(($245)|0);
  var $247=(($246)|0);
  var $248=((($247)+(512))|0);
  var $249=$248 >> 10;
  var $250=$1;
  var $251=__ZN4jpgd12DCT_Upsample8Matrix442atEii($250, 3, 1);
  HEAP32[(($251)>>2)]=$249;
  var $252=$X034;
  var $253=$1;
  var $254=__ZN4jpgd12DCT_Upsample8Matrix442atEii($253, 3, 2);
  HEAP32[(($254)>>2)]=$252;
  var $255=$X031;
  var $256=((($255)*(23))|0);
  var $257=$X033;
  var $258=((($257)*(-99))|0);
  var $259=((($256)+($258))|0);
  var $260=(($259)|0);
  var $261=(($260)|0);
  var $262=((($261)+(512))|0);
  var $263=$262 >> 10;
  var $264=$1;
  var $265=__ZN4jpgd12DCT_Upsample8Matrix442atEii($264, 3, 3);
  HEAP32[(($265)>>2)]=$263;
  var $266=$X001;
  var $267=((($266)*(928))|0);
  var $268=$X003;
  var $269=((($268)*(-325))|0);
  var $270=((($267)+($269))|0);
  var $271=(($270)|0);
  var $272=(($271)|0);
  var $273=((($272)+(512))|0);
  var $274=$273 >> 10;
  var $275=$2;
  var $276=__ZN4jpgd12DCT_Upsample8Matrix442atEii($275, 0, 0);
  HEAP32[(($276)>>2)]=$274;
  var $277=$X002;
  var $278=$2;
  var $279=__ZN4jpgd12DCT_Upsample8Matrix442atEii($278, 0, 1);
  HEAP32[(($279)>>2)]=$277;
  var $280=$X001;
  var $281=((($280)*(-75))|0);
  var $282=$X003;
  var $283=((($282)*(526))|0);
  var $284=((($281)+($283))|0);
  var $285=(($284)|0);
  var $286=(($285)|0);
  var $287=((($286)+(512))|0);
  var $288=$287 >> 10;
  var $289=$2;
  var $290=__ZN4jpgd12DCT_Upsample8Matrix442atEii($289, 0, 2);
  HEAP32[(($290)>>2)]=$288;
  var $291=$2;
  var $292=__ZN4jpgd12DCT_Upsample8Matrix442atEii($291, 0, 3);
  HEAP32[(($292)>>2)]=0;
  var $293=$X011;
  var $294=((($293)*(928))|0);
  var $295=$X013;
  var $296=((($295)*(-325))|0);
  var $297=((($294)+($296))|0);
  var $298=(($297)|0);
  var $299=(($298)|0);
  var $300=((($299)+(512))|0);
  var $301=$300 >> 10;
  var $302=$2;
  var $303=__ZN4jpgd12DCT_Upsample8Matrix442atEii($302, 1, 0);
  HEAP32[(($303)>>2)]=$301;
  var $304=$X012;
  var $305=$2;
  var $306=__ZN4jpgd12DCT_Upsample8Matrix442atEii($305, 1, 1);
  HEAP32[(($306)>>2)]=$304;
  var $307=$X011;
  var $308=((($307)*(-75))|0);
  var $309=$X013;
  var $310=((($309)*(526))|0);
  var $311=((($308)+($310))|0);
  var $312=(($311)|0);
  var $313=(($312)|0);
  var $314=((($313)+(512))|0);
  var $315=$314 >> 10;
  var $316=$2;
  var $317=__ZN4jpgd12DCT_Upsample8Matrix442atEii($316, 1, 2);
  HEAP32[(($317)>>2)]=$315;
  var $318=$2;
  var $319=__ZN4jpgd12DCT_Upsample8Matrix442atEii($318, 1, 3);
  HEAP32[(($319)>>2)]=0;
  var $320=$2;
  var $321=__ZN4jpgd12DCT_Upsample8Matrix442atEii($320, 2, 0);
  HEAP32[(($321)>>2)]=0;
  var $322=$2;
  var $323=__ZN4jpgd12DCT_Upsample8Matrix442atEii($322, 2, 1);
  HEAP32[(($323)>>2)]=0;
  var $324=$2;
  var $325=__ZN4jpgd12DCT_Upsample8Matrix442atEii($324, 2, 2);
  HEAP32[(($325)>>2)]=0;
  var $326=$2;
  var $327=__ZN4jpgd12DCT_Upsample8Matrix442atEii($326, 2, 3);
  HEAP32[(($327)>>2)]=0;
  var $328=$X031;
  var $329=((($328)*(928))|0);
  var $330=$X033;
  var $331=((($330)*(-325))|0);
  var $332=((($329)+($331))|0);
  var $333=(($332)|0);
  var $334=(($333)|0);
  var $335=((($334)+(512))|0);
  var $336=$335 >> 10;
  var $337=$2;
  var $338=__ZN4jpgd12DCT_Upsample8Matrix442atEii($337, 3, 0);
  HEAP32[(($338)>>2)]=$336;
  var $339=$X032;
  var $340=$2;
  var $341=__ZN4jpgd12DCT_Upsample8Matrix442atEii($340, 3, 1);
  HEAP32[(($341)>>2)]=$339;
  var $342=$X031;
  var $343=((($342)*(-75))|0);
  var $344=$X033;
  var $345=((($344)*(526))|0);
  var $346=((($343)+($345))|0);
  var $347=(($346)|0);
  var $348=(($347)|0);
  var $349=((($348)+(512))|0);
  var $350=$349 >> 10;
  var $351=$2;
  var $352=__ZN4jpgd12DCT_Upsample8Matrix442atEii($351, 3, 2);
  HEAP32[(($352)>>2)]=$350;
  var $353=$2;
  var $354=__ZN4jpgd12DCT_Upsample8Matrix442atEii($353, 3, 3);
  HEAP32[(($354)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=(($14)|0);
  var $16=(($15)|0);
  var $17=((($16)+(512))|0);
  var $18=$17 >> 10;
  $X100=$18;
  var $19=$3;
  var $20=(($19+18)|0);
  var $21=HEAP16[(($20)>>1)];
  var $22=(($21 << 16) >> 16);
  var $23=((($22)*(928))|0);
  var $24=$3;
  var $25=(($24+22)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(-325))|0);
  var $29=((($23)+($28))|0);
  var $30=(($29)|0);
  var $31=(($30)|0);
  var $32=((($31)+(512))|0);
  var $33=$32 >> 10;
  $X101=$33;
  var $34=$3;
  var $35=(($34+34)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(928))|0);
  var $39=$3;
  var $40=(($39+38)|0);
  var $41=HEAP16[(($40)>>1)];
  var $42=(($41 << 16) >> 16);
  var $43=((($42)*(-325))|0);
  var $44=((($38)+($43))|0);
  var $45=(($44)|0);
  var $46=(($45)|0);
  var $47=((($46)+(512))|0);
  var $48=$47 >> 10;
  $X102=$48;
  var $49=$3;
  var $50=(($49+50)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(928))|0);
  var $54=$3;
  var $55=(($54+54)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(-325))|0);
  var $59=((($53)+($58))|0);
  var $60=(($59)|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X103=$63;
  var $64=$3;
  var $65=(($64+66)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  var $68=((($67)*(928))|0);
  var $69=$3;
  var $70=(($69+70)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(-325))|0);
  var $74=((($68)+($73))|0);
  var $75=(($74)|0);
  var $76=(($75)|0);
  var $77=((($76)+(512))|0);
  var $78=$77 >> 10;
  $X104=$78;
  $X105=0;
  $X106=0;
  $X107=0;
  var $79=$3;
  var $80=(($79+4)|0);
  var $81=HEAP16[(($80)>>1)];
  var $82=(($81 << 16) >> 16);
  $X110=$82;
  var $83=$3;
  var $84=(($83+20)|0);
  var $85=HEAP16[(($84)>>1)];
  var $86=(($85 << 16) >> 16);
  $X111=$86;
  var $87=$3;
  var $88=(($87+36)|0);
  var $89=HEAP16[(($88)>>1)];
  var $90=(($89 << 16) >> 16);
  $X112=$90;
  var $91=$3;
  var $92=(($91+52)|0);
  var $93=HEAP16[(($92)>>1)];
  var $94=(($93 << 16) >> 16);
  $X113=$94;
  var $95=$3;
  var $96=(($95+68)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  $X114=$98;
  $X115=0;
  $X116=0;
  $X117=0;
  var $99=$3;
  var $100=(($99+2)|0);
  var $101=HEAP16[(($100)>>1)];
  var $102=(($101 << 16) >> 16);
  var $103=((($102)*(-75))|0);
  var $104=$3;
  var $105=(($104+6)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(526))|0);
  var $109=((($103)+($108))|0);
  var $110=(($109)|0);
  var $111=(($110)|0);
  var $112=((($111)+(512))|0);
  var $113=$112 >> 10;
  $X120=$113;
  var $114=$3;
  var $115=(($114+18)|0);
  var $116=HEAP16[(($115)>>1)];
  var $117=(($116 << 16) >> 16);
  var $118=((($117)*(-75))|0);
  var $119=$3;
  var $120=(($119+22)|0);
  var $121=HEAP16[(($120)>>1)];
  var $122=(($121 << 16) >> 16);
  var $123=((($122)*(526))|0);
  var $124=((($118)+($123))|0);
  var $125=(($124)|0);
  var $126=(($125)|0);
  var $127=((($126)+(512))|0);
  var $128=$127 >> 10;
  $X121=$128;
  var $129=$3;
  var $130=(($129+34)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(-75))|0);
  var $134=$3;
  var $135=(($134+38)|0);
  var $136=HEAP16[(($135)>>1)];
  var $137=(($136 << 16) >> 16);
  var $138=((($137)*(526))|0);
  var $139=((($133)+($138))|0);
  var $140=(($139)|0);
  var $141=(($140)|0);
  var $142=((($141)+(512))|0);
  var $143=$142 >> 10;
  $X122=$143;
  var $144=$3;
  var $145=(($144+50)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  var $148=((($147)*(-75))|0);
  var $149=$3;
  var $150=(($149+54)|0);
  var $151=HEAP16[(($150)>>1)];
  var $152=(($151 << 16) >> 16);
  var $153=((($152)*(526))|0);
  var $154=((($148)+($153))|0);
  var $155=(($154)|0);
  var $156=(($155)|0);
  var $157=((($156)+(512))|0);
  var $158=$157 >> 10;
  $X123=$158;
  var $159=$3;
  var $160=(($159+66)|0);
  var $161=HEAP16[(($160)>>1)];
  var $162=(($161 << 16) >> 16);
  var $163=((($162)*(-75))|0);
  var $164=$3;
  var $165=(($164+70)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  var $168=((($167)*(526))|0);
  var $169=((($163)+($168))|0);
  var $170=(($169)|0);
  var $171=(($170)|0);
  var $172=((($171)+(512))|0);
  var $173=$172 >> 10;
  $X124=$173;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $174=$X100;
  var $175=$1;
  var $176=__ZN4jpgd12DCT_Upsample8Matrix442atEii($175, 0, 0);
  HEAP32[(($176)>>2)]=$174;
  var $177=$X101;
  var $178=((($177)*(426))|0);
  var $179=$X103;
  var $180=((($179)*(810))|0);
  var $181=((($178)+($180))|0);
  var $182=(($181)|0);
  var $183=(($182)|0);
  var $184=((($183)+(512))|0);
  var $185=$184 >> 10;
  var $186=$1;
  var $187=__ZN4jpgd12DCT_Upsample8Matrix442atEii($186, 0, 1);
  HEAP32[(($187)>>2)]=$185;
  var $188=$X104;
  var $189=$1;
  var $190=__ZN4jpgd12DCT_Upsample8Matrix442atEii($189, 0, 2);
  HEAP32[(($190)>>2)]=$188;
  var $191=$X101;
  var $192=((($191)*(23))|0);
  var $193=$X103;
  var $194=((($193)*(-99))|0);
  var $195=((($192)+($194))|0);
  var $196=(($195)|0);
  var $197=(($196)|0);
  var $198=((($197)+(512))|0);
  var $199=$198 >> 10;
  var $200=$1;
  var $201=__ZN4jpgd12DCT_Upsample8Matrix442atEii($200, 0, 3);
  HEAP32[(($201)>>2)]=$199;
  var $202=$X110;
  var $203=$1;
  var $204=__ZN4jpgd12DCT_Upsample8Matrix442atEii($203, 1, 0);
  HEAP32[(($204)>>2)]=$202;
  var $205=$X111;
  var $206=((($205)*(426))|0);
  var $207=$X113;
  var $208=((($207)*(810))|0);
  var $209=((($206)+($208))|0);
  var $210=(($209)|0);
  var $211=(($210)|0);
  var $212=((($211)+(512))|0);
  var $213=$212 >> 10;
  var $214=$1;
  var $215=__ZN4jpgd12DCT_Upsample8Matrix442atEii($214, 1, 1);
  HEAP32[(($215)>>2)]=$213;
  var $216=$X114;
  var $217=$1;
  var $218=__ZN4jpgd12DCT_Upsample8Matrix442atEii($217, 1, 2);
  HEAP32[(($218)>>2)]=$216;
  var $219=$X111;
  var $220=((($219)*(23))|0);
  var $221=$X113;
  var $222=((($221)*(-99))|0);
  var $223=((($220)+($222))|0);
  var $224=(($223)|0);
  var $225=(($224)|0);
  var $226=((($225)+(512))|0);
  var $227=$226 >> 10;
  var $228=$1;
  var $229=__ZN4jpgd12DCT_Upsample8Matrix442atEii($228, 1, 3);
  HEAP32[(($229)>>2)]=$227;
  var $230=$X120;
  var $231=$1;
  var $232=__ZN4jpgd12DCT_Upsample8Matrix442atEii($231, 2, 0);
  HEAP32[(($232)>>2)]=$230;
  var $233=$X121;
  var $234=((($233)*(426))|0);
  var $235=$X123;
  var $236=((($235)*(810))|0);
  var $237=((($234)+($236))|0);
  var $238=(($237)|0);
  var $239=(($238)|0);
  var $240=((($239)+(512))|0);
  var $241=$240 >> 10;
  var $242=$1;
  var $243=__ZN4jpgd12DCT_Upsample8Matrix442atEii($242, 2, 1);
  HEAP32[(($243)>>2)]=$241;
  var $244=$X124;
  var $245=$1;
  var $246=__ZN4jpgd12DCT_Upsample8Matrix442atEii($245, 2, 2);
  HEAP32[(($246)>>2)]=$244;
  var $247=$X121;
  var $248=((($247)*(23))|0);
  var $249=$X123;
  var $250=((($249)*(-99))|0);
  var $251=((($248)+($250))|0);
  var $252=(($251)|0);
  var $253=(($252)|0);
  var $254=((($253)+(512))|0);
  var $255=$254 >> 10;
  var $256=$1;
  var $257=__ZN4jpgd12DCT_Upsample8Matrix442atEii($256, 2, 3);
  HEAP32[(($257)>>2)]=$255;
  var $258=$1;
  var $259=__ZN4jpgd12DCT_Upsample8Matrix442atEii($258, 3, 0);
  HEAP32[(($259)>>2)]=0;
  var $260=$1;
  var $261=__ZN4jpgd12DCT_Upsample8Matrix442atEii($260, 3, 1);
  HEAP32[(($261)>>2)]=0;
  var $262=$1;
  var $263=__ZN4jpgd12DCT_Upsample8Matrix442atEii($262, 3, 2);
  HEAP32[(($263)>>2)]=0;
  var $264=$1;
  var $265=__ZN4jpgd12DCT_Upsample8Matrix442atEii($264, 3, 3);
  HEAP32[(($265)>>2)]=0;
  var $266=$X101;
  var $267=((($266)*(928))|0);
  var $268=$X103;
  var $269=((($268)*(-325))|0);
  var $270=((($267)+($269))|0);
  var $271=(($270)|0);
  var $272=(($271)|0);
  var $273=((($272)+(512))|0);
  var $274=$273 >> 10;
  var $275=$2;
  var $276=__ZN4jpgd12DCT_Upsample8Matrix442atEii($275, 0, 0);
  HEAP32[(($276)>>2)]=$274;
  var $277=$X102;
  var $278=$2;
  var $279=__ZN4jpgd12DCT_Upsample8Matrix442atEii($278, 0, 1);
  HEAP32[(($279)>>2)]=$277;
  var $280=$X101;
  var $281=((($280)*(-75))|0);
  var $282=$X103;
  var $283=((($282)*(526))|0);
  var $284=((($281)+($283))|0);
  var $285=(($284)|0);
  var $286=(($285)|0);
  var $287=((($286)+(512))|0);
  var $288=$287 >> 10;
  var $289=$2;
  var $290=__ZN4jpgd12DCT_Upsample8Matrix442atEii($289, 0, 2);
  HEAP32[(($290)>>2)]=$288;
  var $291=$2;
  var $292=__ZN4jpgd12DCT_Upsample8Matrix442atEii($291, 0, 3);
  HEAP32[(($292)>>2)]=0;
  var $293=$X111;
  var $294=((($293)*(928))|0);
  var $295=$X113;
  var $296=((($295)*(-325))|0);
  var $297=((($294)+($296))|0);
  var $298=(($297)|0);
  var $299=(($298)|0);
  var $300=((($299)+(512))|0);
  var $301=$300 >> 10;
  var $302=$2;
  var $303=__ZN4jpgd12DCT_Upsample8Matrix442atEii($302, 1, 0);
  HEAP32[(($303)>>2)]=$301;
  var $304=$X112;
  var $305=$2;
  var $306=__ZN4jpgd12DCT_Upsample8Matrix442atEii($305, 1, 1);
  HEAP32[(($306)>>2)]=$304;
  var $307=$X111;
  var $308=((($307)*(-75))|0);
  var $309=$X113;
  var $310=((($309)*(526))|0);
  var $311=((($308)+($310))|0);
  var $312=(($311)|0);
  var $313=(($312)|0);
  var $314=((($313)+(512))|0);
  var $315=$314 >> 10;
  var $316=$2;
  var $317=__ZN4jpgd12DCT_Upsample8Matrix442atEii($316, 1, 2);
  HEAP32[(($317)>>2)]=$315;
  var $318=$2;
  var $319=__ZN4jpgd12DCT_Upsample8Matrix442atEii($318, 1, 3);
  HEAP32[(($319)>>2)]=0;
  var $320=$X121;
  var $321=((($320)*(928))|0);
  var $322=$X123;
  var $323=((($322)*(-325))|0);
  var $324=((($321)+($323))|0);
  var $325=(($324)|0);
  var $326=(($325)|0);
  var $327=((($326)+(512))|0);
  var $328=$327 >> 10;
  var $329=$2;
  var $330=__ZN4jpgd12DCT_Upsample8Matrix442atEii($329, 2, 0);
  HEAP32[(($330)>>2)]=$328;
  var $331=$X122;
  var $332=$2;
  var $333=__ZN4jpgd12DCT_Upsample8Matrix442atEii($332, 2, 1);
  HEAP32[(($333)>>2)]=$331;
  var $334=$X121;
  var $335=((($334)*(-75))|0);
  var $336=$X123;
  var $337=((($336)*(526))|0);
  var $338=((($335)+($337))|0);
  var $339=(($338)|0);
  var $340=(($339)|0);
  var $341=((($340)+(512))|0);
  var $342=$341 >> 10;
  var $343=$2;
  var $344=__ZN4jpgd12DCT_Upsample8Matrix442atEii($343, 2, 2);
  HEAP32[(($344)>>2)]=$342;
  var $345=$2;
  var $346=__ZN4jpgd12DCT_Upsample8Matrix442atEii($345, 2, 3);
  HEAP32[(($346)>>2)]=0;
  var $347=$2;
  var $348=__ZN4jpgd12DCT_Upsample8Matrix442atEii($347, 3, 0);
  HEAP32[(($348)>>2)]=0;
  var $349=$2;
  var $350=__ZN4jpgd12DCT_Upsample8Matrix442atEii($349, 3, 1);
  HEAP32[(($350)>>2)]=0;
  var $351=$2;
  var $352=__ZN4jpgd12DCT_Upsample8Matrix442atEii($351, 3, 2);
  HEAP32[(($352)>>2)]=0;
  var $353=$2;
  var $354=__ZN4jpgd12DCT_Upsample8Matrix442atEii($353, 3, 3);
  HEAP32[(($354)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  $X005=0;
  $X006=0;
  $X007=0;
  var $24=$3;
  var $25=(($24+2)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(426))|0);
  var $29=$3;
  var $30=(($29+6)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(810))|0);
  var $34=((($28)+($33))|0);
  var $35=(($34)|0);
  var $36=(($35)|0);
  var $37=((($36)+(512))|0);
  var $38=$37 >> 10;
  $X010=$38;
  var $39=$3;
  var $40=(($39+18)|0);
  var $41=HEAP16[(($40)>>1)];
  var $42=(($41 << 16) >> 16);
  var $43=((($42)*(426))|0);
  var $44=$3;
  var $45=(($44+22)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(810))|0);
  var $49=((($43)+($48))|0);
  var $50=(($49)|0);
  var $51=(($50)|0);
  var $52=((($51)+(512))|0);
  var $53=$52 >> 10;
  $X011=$53;
  var $54=$3;
  var $55=(($54+34)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(426))|0);
  var $59=$3;
  var $60=(($59+38)|0);
  var $61=HEAP16[(($60)>>1)];
  var $62=(($61 << 16) >> 16);
  var $63=((($62)*(810))|0);
  var $64=((($58)+($63))|0);
  var $65=(($64)|0);
  var $66=(($65)|0);
  var $67=((($66)+(512))|0);
  var $68=$67 >> 10;
  $X012=$68;
  var $69=$3;
  var $70=(($69+50)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(426))|0);
  var $74=$3;
  var $75=(($74+54)|0);
  var $76=HEAP16[(($75)>>1)];
  var $77=(($76 << 16) >> 16);
  var $78=((($77)*(810))|0);
  var $79=((($73)+($78))|0);
  var $80=(($79)|0);
  var $81=(($80)|0);
  var $82=((($81)+(512))|0);
  var $83=$82 >> 10;
  $X013=$83;
  var $84=$3;
  var $85=(($84+66)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(426))|0);
  var $89=$3;
  var $90=(($89+70)|0);
  var $91=HEAP16[(($90)>>1)];
  var $92=(($91 << 16) >> 16);
  var $93=((($92)*(810))|0);
  var $94=((($88)+($93))|0);
  var $95=(($94)|0);
  var $96=(($95)|0);
  var $97=((($96)+(512))|0);
  var $98=$97 >> 10;
  $X014=$98;
  $X015=0;
  $X016=0;
  $X017=0;
  var $99=$3;
  var $100=(($99+8)|0);
  var $101=HEAP16[(($100)>>1)];
  var $102=(($101 << 16) >> 16);
  $X020=$102;
  var $103=$3;
  var $104=(($103+24)|0);
  var $105=HEAP16[(($104)>>1)];
  var $106=(($105 << 16) >> 16);
  $X021=$106;
  var $107=$3;
  var $108=(($107+40)|0);
  var $109=HEAP16[(($108)>>1)];
  var $110=(($109 << 16) >> 16);
  $X022=$110;
  var $111=$3;
  var $112=(($111+56)|0);
  var $113=HEAP16[(($112)>>1)];
  var $114=(($113 << 16) >> 16);
  $X023=$114;
  var $115=$3;
  var $116=(($115+72)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  $X024=$118;
  $X025=0;
  $X026=0;
  $X027=0;
  var $119=$3;
  var $120=(($119+2)|0);
  var $121=HEAP16[(($120)>>1)];
  var $122=(($121 << 16) >> 16);
  var $123=((($122)*(23))|0);
  var $124=$3;
  var $125=(($124+6)|0);
  var $126=HEAP16[(($125)>>1)];
  var $127=(($126 << 16) >> 16);
  var $128=((($127)*(-99))|0);
  var $129=((($123)+($128))|0);
  var $130=(($129)|0);
  var $131=(($130)|0);
  var $132=((($131)+(512))|0);
  var $133=$132 >> 10;
  $X030=$133;
  var $134=$3;
  var $135=(($134+18)|0);
  var $136=HEAP16[(($135)>>1)];
  var $137=(($136 << 16) >> 16);
  var $138=((($137)*(23))|0);
  var $139=$3;
  var $140=(($139+22)|0);
  var $141=HEAP16[(($140)>>1)];
  var $142=(($141 << 16) >> 16);
  var $143=((($142)*(-99))|0);
  var $144=((($138)+($143))|0);
  var $145=(($144)|0);
  var $146=(($145)|0);
  var $147=((($146)+(512))|0);
  var $148=$147 >> 10;
  $X031=$148;
  var $149=$3;
  var $150=(($149+34)|0);
  var $151=HEAP16[(($150)>>1)];
  var $152=(($151 << 16) >> 16);
  var $153=((($152)*(23))|0);
  var $154=$3;
  var $155=(($154+38)|0);
  var $156=HEAP16[(($155)>>1)];
  var $157=(($156 << 16) >> 16);
  var $158=((($157)*(-99))|0);
  var $159=((($153)+($158))|0);
  var $160=(($159)|0);
  var $161=(($160)|0);
  var $162=((($161)+(512))|0);
  var $163=$162 >> 10;
  $X032=$163;
  var $164=$3;
  var $165=(($164+50)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  var $168=((($167)*(23))|0);
  var $169=$3;
  var $170=(($169+54)|0);
  var $171=HEAP16[(($170)>>1)];
  var $172=(($171 << 16) >> 16);
  var $173=((($172)*(-99))|0);
  var $174=((($168)+($173))|0);
  var $175=(($174)|0);
  var $176=(($175)|0);
  var $177=((($176)+(512))|0);
  var $178=$177 >> 10;
  $X033=$178;
  var $179=$3;
  var $180=(($179+66)|0);
  var $181=HEAP16[(($180)>>1)];
  var $182=(($181 << 16) >> 16);
  var $183=((($182)*(23))|0);
  var $184=$3;
  var $185=(($184+70)|0);
  var $186=HEAP16[(($185)>>1)];
  var $187=(($186 << 16) >> 16);
  var $188=((($187)*(-99))|0);
  var $189=((($183)+($188))|0);
  var $190=(($189)|0);
  var $191=(($190)|0);
  var $192=((($191)+(512))|0);
  var $193=$192 >> 10;
  $X034=$193;
  $X035=0;
  $X036=0;
  $X037=0;
  var $194=$X000;
  var $195=$1;
  var $196=__ZN4jpgd12DCT_Upsample8Matrix442atEii($195, 0, 0);
  HEAP32[(($196)>>2)]=$194;
  var $197=$X001;
  var $198=((($197)*(426))|0);
  var $199=$X003;
  var $200=((($199)*(810))|0);
  var $201=((($198)+($200))|0);
  var $202=(($201)|0);
  var $203=(($202)|0);
  var $204=((($203)+(512))|0);
  var $205=$204 >> 10;
  var $206=$1;
  var $207=__ZN4jpgd12DCT_Upsample8Matrix442atEii($206, 0, 1);
  HEAP32[(($207)>>2)]=$205;
  var $208=$X004;
  var $209=$1;
  var $210=__ZN4jpgd12DCT_Upsample8Matrix442atEii($209, 0, 2);
  HEAP32[(($210)>>2)]=$208;
  var $211=$X001;
  var $212=((($211)*(23))|0);
  var $213=$X003;
  var $214=((($213)*(-99))|0);
  var $215=((($212)+($214))|0);
  var $216=(($215)|0);
  var $217=(($216)|0);
  var $218=((($217)+(512))|0);
  var $219=$218 >> 10;
  var $220=$1;
  var $221=__ZN4jpgd12DCT_Upsample8Matrix442atEii($220, 0, 3);
  HEAP32[(($221)>>2)]=$219;
  var $222=$X010;
  var $223=$1;
  var $224=__ZN4jpgd12DCT_Upsample8Matrix442atEii($223, 1, 0);
  HEAP32[(($224)>>2)]=$222;
  var $225=$X011;
  var $226=((($225)*(426))|0);
  var $227=$X013;
  var $228=((($227)*(810))|0);
  var $229=((($226)+($228))|0);
  var $230=(($229)|0);
  var $231=(($230)|0);
  var $232=((($231)+(512))|0);
  var $233=$232 >> 10;
  var $234=$1;
  var $235=__ZN4jpgd12DCT_Upsample8Matrix442atEii($234, 1, 1);
  HEAP32[(($235)>>2)]=$233;
  var $236=$X014;
  var $237=$1;
  var $238=__ZN4jpgd12DCT_Upsample8Matrix442atEii($237, 1, 2);
  HEAP32[(($238)>>2)]=$236;
  var $239=$X011;
  var $240=((($239)*(23))|0);
  var $241=$X013;
  var $242=((($241)*(-99))|0);
  var $243=((($240)+($242))|0);
  var $244=(($243)|0);
  var $245=(($244)|0);
  var $246=((($245)+(512))|0);
  var $247=$246 >> 10;
  var $248=$1;
  var $249=__ZN4jpgd12DCT_Upsample8Matrix442atEii($248, 1, 3);
  HEAP32[(($249)>>2)]=$247;
  var $250=$X020;
  var $251=$1;
  var $252=__ZN4jpgd12DCT_Upsample8Matrix442atEii($251, 2, 0);
  HEAP32[(($252)>>2)]=$250;
  var $253=$X021;
  var $254=((($253)*(426))|0);
  var $255=$X023;
  var $256=((($255)*(810))|0);
  var $257=((($254)+($256))|0);
  var $258=(($257)|0);
  var $259=(($258)|0);
  var $260=((($259)+(512))|0);
  var $261=$260 >> 10;
  var $262=$1;
  var $263=__ZN4jpgd12DCT_Upsample8Matrix442atEii($262, 2, 1);
  HEAP32[(($263)>>2)]=$261;
  var $264=$X024;
  var $265=$1;
  var $266=__ZN4jpgd12DCT_Upsample8Matrix442atEii($265, 2, 2);
  HEAP32[(($266)>>2)]=$264;
  var $267=$X021;
  var $268=((($267)*(23))|0);
  var $269=$X023;
  var $270=((($269)*(-99))|0);
  var $271=((($268)+($270))|0);
  var $272=(($271)|0);
  var $273=(($272)|0);
  var $274=((($273)+(512))|0);
  var $275=$274 >> 10;
  var $276=$1;
  var $277=__ZN4jpgd12DCT_Upsample8Matrix442atEii($276, 2, 3);
  HEAP32[(($277)>>2)]=$275;
  var $278=$X030;
  var $279=$1;
  var $280=__ZN4jpgd12DCT_Upsample8Matrix442atEii($279, 3, 0);
  HEAP32[(($280)>>2)]=$278;
  var $281=$X031;
  var $282=((($281)*(426))|0);
  var $283=$X033;
  var $284=((($283)*(810))|0);
  var $285=((($282)+($284))|0);
  var $286=(($285)|0);
  var $287=(($286)|0);
  var $288=((($287)+(512))|0);
  var $289=$288 >> 10;
  var $290=$1;
  var $291=__ZN4jpgd12DCT_Upsample8Matrix442atEii($290, 3, 1);
  HEAP32[(($291)>>2)]=$289;
  var $292=$X034;
  var $293=$1;
  var $294=__ZN4jpgd12DCT_Upsample8Matrix442atEii($293, 3, 2);
  HEAP32[(($294)>>2)]=$292;
  var $295=$X031;
  var $296=((($295)*(23))|0);
  var $297=$X033;
  var $298=((($297)*(-99))|0);
  var $299=((($296)+($298))|0);
  var $300=(($299)|0);
  var $301=(($300)|0);
  var $302=((($301)+(512))|0);
  var $303=$302 >> 10;
  var $304=$1;
  var $305=__ZN4jpgd12DCT_Upsample8Matrix442atEii($304, 3, 3);
  HEAP32[(($305)>>2)]=$303;
  var $306=$X001;
  var $307=((($306)*(928))|0);
  var $308=$X003;
  var $309=((($308)*(-325))|0);
  var $310=((($307)+($309))|0);
  var $311=(($310)|0);
  var $312=(($311)|0);
  var $313=((($312)+(512))|0);
  var $314=$313 >> 10;
  var $315=$2;
  var $316=__ZN4jpgd12DCT_Upsample8Matrix442atEii($315, 0, 0);
  HEAP32[(($316)>>2)]=$314;
  var $317=$X002;
  var $318=$2;
  var $319=__ZN4jpgd12DCT_Upsample8Matrix442atEii($318, 0, 1);
  HEAP32[(($319)>>2)]=$317;
  var $320=$X001;
  var $321=((($320)*(-75))|0);
  var $322=$X003;
  var $323=((($322)*(526))|0);
  var $324=((($321)+($323))|0);
  var $325=(($324)|0);
  var $326=(($325)|0);
  var $327=((($326)+(512))|0);
  var $328=$327 >> 10;
  var $329=$2;
  var $330=__ZN4jpgd12DCT_Upsample8Matrix442atEii($329, 0, 2);
  HEAP32[(($330)>>2)]=$328;
  var $331=$2;
  var $332=__ZN4jpgd12DCT_Upsample8Matrix442atEii($331, 0, 3);
  HEAP32[(($332)>>2)]=0;
  var $333=$X011;
  var $334=((($333)*(928))|0);
  var $335=$X013;
  var $336=((($335)*(-325))|0);
  var $337=((($334)+($336))|0);
  var $338=(($337)|0);
  var $339=(($338)|0);
  var $340=((($339)+(512))|0);
  var $341=$340 >> 10;
  var $342=$2;
  var $343=__ZN4jpgd12DCT_Upsample8Matrix442atEii($342, 1, 0);
  HEAP32[(($343)>>2)]=$341;
  var $344=$X012;
  var $345=$2;
  var $346=__ZN4jpgd12DCT_Upsample8Matrix442atEii($345, 1, 1);
  HEAP32[(($346)>>2)]=$344;
  var $347=$X011;
  var $348=((($347)*(-75))|0);
  var $349=$X013;
  var $350=((($349)*(526))|0);
  var $351=((($348)+($350))|0);
  var $352=(($351)|0);
  var $353=(($352)|0);
  var $354=((($353)+(512))|0);
  var $355=$354 >> 10;
  var $356=$2;
  var $357=__ZN4jpgd12DCT_Upsample8Matrix442atEii($356, 1, 2);
  HEAP32[(($357)>>2)]=$355;
  var $358=$2;
  var $359=__ZN4jpgd12DCT_Upsample8Matrix442atEii($358, 1, 3);
  HEAP32[(($359)>>2)]=0;
  var $360=$X021;
  var $361=((($360)*(928))|0);
  var $362=$X023;
  var $363=((($362)*(-325))|0);
  var $364=((($361)+($363))|0);
  var $365=(($364)|0);
  var $366=(($365)|0);
  var $367=((($366)+(512))|0);
  var $368=$367 >> 10;
  var $369=$2;
  var $370=__ZN4jpgd12DCT_Upsample8Matrix442atEii($369, 2, 0);
  HEAP32[(($370)>>2)]=$368;
  var $371=$X022;
  var $372=$2;
  var $373=__ZN4jpgd12DCT_Upsample8Matrix442atEii($372, 2, 1);
  HEAP32[(($373)>>2)]=$371;
  var $374=$X021;
  var $375=((($374)*(-75))|0);
  var $376=$X023;
  var $377=((($376)*(526))|0);
  var $378=((($375)+($377))|0);
  var $379=(($378)|0);
  var $380=(($379)|0);
  var $381=((($380)+(512))|0);
  var $382=$381 >> 10;
  var $383=$2;
  var $384=__ZN4jpgd12DCT_Upsample8Matrix442atEii($383, 2, 2);
  HEAP32[(($384)>>2)]=$382;
  var $385=$2;
  var $386=__ZN4jpgd12DCT_Upsample8Matrix442atEii($385, 2, 3);
  HEAP32[(($386)>>2)]=0;
  var $387=$X031;
  var $388=((($387)*(928))|0);
  var $389=$X033;
  var $390=((($389)*(-325))|0);
  var $391=((($388)+($390))|0);
  var $392=(($391)|0);
  var $393=(($392)|0);
  var $394=((($393)+(512))|0);
  var $395=$394 >> 10;
  var $396=$2;
  var $397=__ZN4jpgd12DCT_Upsample8Matrix442atEii($396, 3, 0);
  HEAP32[(($397)>>2)]=$395;
  var $398=$X032;
  var $399=$2;
  var $400=__ZN4jpgd12DCT_Upsample8Matrix442atEii($399, 3, 1);
  HEAP32[(($400)>>2)]=$398;
  var $401=$X031;
  var $402=((($401)*(-75))|0);
  var $403=$X033;
  var $404=((($403)*(526))|0);
  var $405=((($402)+($404))|0);
  var $406=(($405)|0);
  var $407=(($406)|0);
  var $408=((($407)+(512))|0);
  var $409=$408 >> 10;
  var $410=$2;
  var $411=__ZN4jpgd12DCT_Upsample8Matrix442atEii($410, 3, 2);
  HEAP32[(($411)>>2)]=$409;
  var $412=$2;
  var $413=__ZN4jpgd12DCT_Upsample8Matrix442atEii($412, 3, 3);
  HEAP32[(($413)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=(($14)|0);
  var $16=(($15)|0);
  var $17=((($16)+(512))|0);
  var $18=$17 >> 10;
  $X100=$18;
  var $19=$3;
  var $20=(($19+18)|0);
  var $21=HEAP16[(($20)>>1)];
  var $22=(($21 << 16) >> 16);
  var $23=((($22)*(928))|0);
  var $24=$3;
  var $25=(($24+22)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(-325))|0);
  var $29=((($23)+($28))|0);
  var $30=(($29)|0);
  var $31=(($30)|0);
  var $32=((($31)+(512))|0);
  var $33=$32 >> 10;
  $X101=$33;
  var $34=$3;
  var $35=(($34+34)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(928))|0);
  var $39=$3;
  var $40=(($39+38)|0);
  var $41=HEAP16[(($40)>>1)];
  var $42=(($41 << 16) >> 16);
  var $43=((($42)*(-325))|0);
  var $44=((($38)+($43))|0);
  var $45=(($44)|0);
  var $46=(($45)|0);
  var $47=((($46)+(512))|0);
  var $48=$47 >> 10;
  $X102=$48;
  var $49=$3;
  var $50=(($49+50)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(928))|0);
  var $54=$3;
  var $55=(($54+54)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(-325))|0);
  var $59=((($53)+($58))|0);
  var $60=(($59)|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X103=$63;
  var $64=$3;
  var $65=(($64+66)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  var $68=((($67)*(928))|0);
  var $69=$3;
  var $70=(($69+70)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(-325))|0);
  var $74=((($68)+($73))|0);
  var $75=(($74)|0);
  var $76=(($75)|0);
  var $77=((($76)+(512))|0);
  var $78=$77 >> 10;
  $X104=$78;
  $X105=0;
  $X106=0;
  $X107=0;
  var $79=$3;
  var $80=(($79+4)|0);
  var $81=HEAP16[(($80)>>1)];
  var $82=(($81 << 16) >> 16);
  $X110=$82;
  var $83=$3;
  var $84=(($83+20)|0);
  var $85=HEAP16[(($84)>>1)];
  var $86=(($85 << 16) >> 16);
  $X111=$86;
  var $87=$3;
  var $88=(($87+36)|0);
  var $89=HEAP16[(($88)>>1)];
  var $90=(($89 << 16) >> 16);
  $X112=$90;
  var $91=$3;
  var $92=(($91+52)|0);
  var $93=HEAP16[(($92)>>1)];
  var $94=(($93 << 16) >> 16);
  $X113=$94;
  var $95=$3;
  var $96=(($95+68)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  $X114=$98;
  $X115=0;
  $X116=0;
  $X117=0;
  var $99=$3;
  var $100=(($99+2)|0);
  var $101=HEAP16[(($100)>>1)];
  var $102=(($101 << 16) >> 16);
  var $103=((($102)*(-75))|0);
  var $104=$3;
  var $105=(($104+6)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(526))|0);
  var $109=((($103)+($108))|0);
  var $110=(($109)|0);
  var $111=(($110)|0);
  var $112=((($111)+(512))|0);
  var $113=$112 >> 10;
  $X120=$113;
  var $114=$3;
  var $115=(($114+18)|0);
  var $116=HEAP16[(($115)>>1)];
  var $117=(($116 << 16) >> 16);
  var $118=((($117)*(-75))|0);
  var $119=$3;
  var $120=(($119+22)|0);
  var $121=HEAP16[(($120)>>1)];
  var $122=(($121 << 16) >> 16);
  var $123=((($122)*(526))|0);
  var $124=((($118)+($123))|0);
  var $125=(($124)|0);
  var $126=(($125)|0);
  var $127=((($126)+(512))|0);
  var $128=$127 >> 10;
  $X121=$128;
  var $129=$3;
  var $130=(($129+34)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(-75))|0);
  var $134=$3;
  var $135=(($134+38)|0);
  var $136=HEAP16[(($135)>>1)];
  var $137=(($136 << 16) >> 16);
  var $138=((($137)*(526))|0);
  var $139=((($133)+($138))|0);
  var $140=(($139)|0);
  var $141=(($140)|0);
  var $142=((($141)+(512))|0);
  var $143=$142 >> 10;
  $X122=$143;
  var $144=$3;
  var $145=(($144+50)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  var $148=((($147)*(-75))|0);
  var $149=$3;
  var $150=(($149+54)|0);
  var $151=HEAP16[(($150)>>1)];
  var $152=(($151 << 16) >> 16);
  var $153=((($152)*(526))|0);
  var $154=((($148)+($153))|0);
  var $155=(($154)|0);
  var $156=(($155)|0);
  var $157=((($156)+(512))|0);
  var $158=$157 >> 10;
  $X123=$158;
  var $159=$3;
  var $160=(($159+66)|0);
  var $161=HEAP16[(($160)>>1)];
  var $162=(($161 << 16) >> 16);
  var $163=((($162)*(-75))|0);
  var $164=$3;
  var $165=(($164+70)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  var $168=((($167)*(526))|0);
  var $169=((($163)+($168))|0);
  var $170=(($169)|0);
  var $171=(($170)|0);
  var $172=((($171)+(512))|0);
  var $173=$172 >> 10;
  $X124=$173;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $174=$X100;
  var $175=$1;
  var $176=__ZN4jpgd12DCT_Upsample8Matrix442atEii($175, 0, 0);
  HEAP32[(($176)>>2)]=$174;
  var $177=$X101;
  var $178=((($177)*(426))|0);
  var $179=$X103;
  var $180=((($179)*(810))|0);
  var $181=((($178)+($180))|0);
  var $182=(($181)|0);
  var $183=(($182)|0);
  var $184=((($183)+(512))|0);
  var $185=$184 >> 10;
  var $186=$1;
  var $187=__ZN4jpgd12DCT_Upsample8Matrix442atEii($186, 0, 1);
  HEAP32[(($187)>>2)]=$185;
  var $188=$X104;
  var $189=$1;
  var $190=__ZN4jpgd12DCT_Upsample8Matrix442atEii($189, 0, 2);
  HEAP32[(($190)>>2)]=$188;
  var $191=$X101;
  var $192=((($191)*(23))|0);
  var $193=$X103;
  var $194=((($193)*(-99))|0);
  var $195=((($192)+($194))|0);
  var $196=(($195)|0);
  var $197=(($196)|0);
  var $198=((($197)+(512))|0);
  var $199=$198 >> 10;
  var $200=$1;
  var $201=__ZN4jpgd12DCT_Upsample8Matrix442atEii($200, 0, 3);
  HEAP32[(($201)>>2)]=$199;
  var $202=$X110;
  var $203=$1;
  var $204=__ZN4jpgd12DCT_Upsample8Matrix442atEii($203, 1, 0);
  HEAP32[(($204)>>2)]=$202;
  var $205=$X111;
  var $206=((($205)*(426))|0);
  var $207=$X113;
  var $208=((($207)*(810))|0);
  var $209=((($206)+($208))|0);
  var $210=(($209)|0);
  var $211=(($210)|0);
  var $212=((($211)+(512))|0);
  var $213=$212 >> 10;
  var $214=$1;
  var $215=__ZN4jpgd12DCT_Upsample8Matrix442atEii($214, 1, 1);
  HEAP32[(($215)>>2)]=$213;
  var $216=$X114;
  var $217=$1;
  var $218=__ZN4jpgd12DCT_Upsample8Matrix442atEii($217, 1, 2);
  HEAP32[(($218)>>2)]=$216;
  var $219=$X111;
  var $220=((($219)*(23))|0);
  var $221=$X113;
  var $222=((($221)*(-99))|0);
  var $223=((($220)+($222))|0);
  var $224=(($223)|0);
  var $225=(($224)|0);
  var $226=((($225)+(512))|0);
  var $227=$226 >> 10;
  var $228=$1;
  var $229=__ZN4jpgd12DCT_Upsample8Matrix442atEii($228, 1, 3);
  HEAP32[(($229)>>2)]=$227;
  var $230=$X120;
  var $231=$1;
  var $232=__ZN4jpgd12DCT_Upsample8Matrix442atEii($231, 2, 0);
  HEAP32[(($232)>>2)]=$230;
  var $233=$X121;
  var $234=((($233)*(426))|0);
  var $235=$X123;
  var $236=((($235)*(810))|0);
  var $237=((($234)+($236))|0);
  var $238=(($237)|0);
  var $239=(($238)|0);
  var $240=((($239)+(512))|0);
  var $241=$240 >> 10;
  var $242=$1;
  var $243=__ZN4jpgd12DCT_Upsample8Matrix442atEii($242, 2, 1);
  HEAP32[(($243)>>2)]=$241;
  var $244=$X124;
  var $245=$1;
  var $246=__ZN4jpgd12DCT_Upsample8Matrix442atEii($245, 2, 2);
  HEAP32[(($246)>>2)]=$244;
  var $247=$X121;
  var $248=((($247)*(23))|0);
  var $249=$X123;
  var $250=((($249)*(-99))|0);
  var $251=((($248)+($250))|0);
  var $252=(($251)|0);
  var $253=(($252)|0);
  var $254=((($253)+(512))|0);
  var $255=$254 >> 10;
  var $256=$1;
  var $257=__ZN4jpgd12DCT_Upsample8Matrix442atEii($256, 2, 3);
  HEAP32[(($257)>>2)]=$255;
  var $258=$1;
  var $259=__ZN4jpgd12DCT_Upsample8Matrix442atEii($258, 3, 0);
  HEAP32[(($259)>>2)]=0;
  var $260=$1;
  var $261=__ZN4jpgd12DCT_Upsample8Matrix442atEii($260, 3, 1);
  HEAP32[(($261)>>2)]=0;
  var $262=$1;
  var $263=__ZN4jpgd12DCT_Upsample8Matrix442atEii($262, 3, 2);
  HEAP32[(($263)>>2)]=0;
  var $264=$1;
  var $265=__ZN4jpgd12DCT_Upsample8Matrix442atEii($264, 3, 3);
  HEAP32[(($265)>>2)]=0;
  var $266=$X101;
  var $267=((($266)*(928))|0);
  var $268=$X103;
  var $269=((($268)*(-325))|0);
  var $270=((($267)+($269))|0);
  var $271=(($270)|0);
  var $272=(($271)|0);
  var $273=((($272)+(512))|0);
  var $274=$273 >> 10;
  var $275=$2;
  var $276=__ZN4jpgd12DCT_Upsample8Matrix442atEii($275, 0, 0);
  HEAP32[(($276)>>2)]=$274;
  var $277=$X102;
  var $278=$2;
  var $279=__ZN4jpgd12DCT_Upsample8Matrix442atEii($278, 0, 1);
  HEAP32[(($279)>>2)]=$277;
  var $280=$X101;
  var $281=((($280)*(-75))|0);
  var $282=$X103;
  var $283=((($282)*(526))|0);
  var $284=((($281)+($283))|0);
  var $285=(($284)|0);
  var $286=(($285)|0);
  var $287=((($286)+(512))|0);
  var $288=$287 >> 10;
  var $289=$2;
  var $290=__ZN4jpgd12DCT_Upsample8Matrix442atEii($289, 0, 2);
  HEAP32[(($290)>>2)]=$288;
  var $291=$2;
  var $292=__ZN4jpgd12DCT_Upsample8Matrix442atEii($291, 0, 3);
  HEAP32[(($292)>>2)]=0;
  var $293=$X111;
  var $294=((($293)*(928))|0);
  var $295=$X113;
  var $296=((($295)*(-325))|0);
  var $297=((($294)+($296))|0);
  var $298=(($297)|0);
  var $299=(($298)|0);
  var $300=((($299)+(512))|0);
  var $301=$300 >> 10;
  var $302=$2;
  var $303=__ZN4jpgd12DCT_Upsample8Matrix442atEii($302, 1, 0);
  HEAP32[(($303)>>2)]=$301;
  var $304=$X112;
  var $305=$2;
  var $306=__ZN4jpgd12DCT_Upsample8Matrix442atEii($305, 1, 1);
  HEAP32[(($306)>>2)]=$304;
  var $307=$X111;
  var $308=((($307)*(-75))|0);
  var $309=$X113;
  var $310=((($309)*(526))|0);
  var $311=((($308)+($310))|0);
  var $312=(($311)|0);
  var $313=(($312)|0);
  var $314=((($313)+(512))|0);
  var $315=$314 >> 10;
  var $316=$2;
  var $317=__ZN4jpgd12DCT_Upsample8Matrix442atEii($316, 1, 2);
  HEAP32[(($317)>>2)]=$315;
  var $318=$2;
  var $319=__ZN4jpgd12DCT_Upsample8Matrix442atEii($318, 1, 3);
  HEAP32[(($319)>>2)]=0;
  var $320=$X121;
  var $321=((($320)*(928))|0);
  var $322=$X123;
  var $323=((($322)*(-325))|0);
  var $324=((($321)+($323))|0);
  var $325=(($324)|0);
  var $326=(($325)|0);
  var $327=((($326)+(512))|0);
  var $328=$327 >> 10;
  var $329=$2;
  var $330=__ZN4jpgd12DCT_Upsample8Matrix442atEii($329, 2, 0);
  HEAP32[(($330)>>2)]=$328;
  var $331=$X122;
  var $332=$2;
  var $333=__ZN4jpgd12DCT_Upsample8Matrix442atEii($332, 2, 1);
  HEAP32[(($333)>>2)]=$331;
  var $334=$X121;
  var $335=((($334)*(-75))|0);
  var $336=$X123;
  var $337=((($336)*(526))|0);
  var $338=((($335)+($337))|0);
  var $339=(($338)|0);
  var $340=(($339)|0);
  var $341=((($340)+(512))|0);
  var $342=$341 >> 10;
  var $343=$2;
  var $344=__ZN4jpgd12DCT_Upsample8Matrix442atEii($343, 2, 2);
  HEAP32[(($344)>>2)]=$342;
  var $345=$2;
  var $346=__ZN4jpgd12DCT_Upsample8Matrix442atEii($345, 2, 3);
  HEAP32[(($346)>>2)]=0;
  var $347=$2;
  var $348=__ZN4jpgd12DCT_Upsample8Matrix442atEii($347, 3, 0);
  HEAP32[(($348)>>2)]=0;
  var $349=$2;
  var $350=__ZN4jpgd12DCT_Upsample8Matrix442atEii($349, 3, 1);
  HEAP32[(($350)>>2)]=0;
  var $351=$2;
  var $352=__ZN4jpgd12DCT_Upsample8Matrix442atEii($351, 3, 2);
  HEAP32[(($352)>>2)]=0;
  var $353=$2;
  var $354=__ZN4jpgd12DCT_Upsample8Matrix442atEii($353, 3, 3);
  HEAP32[(($354)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  $X005=0;
  $X006=0;
  $X007=0;
  var $24=$3;
  var $25=(($24+2)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(426))|0);
  var $29=$3;
  var $30=(($29+6)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(810))|0);
  var $34=((($28)+($33))|0);
  var $35=$3;
  var $36=(($35+10)|0);
  var $37=HEAP16[(($36)>>1)];
  var $38=(($37 << 16) >> 16);
  var $39=((($38)*(-360))|0);
  var $40=((($34)+($39))|0);
  var $41=(($40)|0);
  var $42=((($41)+(512))|0);
  var $43=$42 >> 10;
  $X010=$43;
  var $44=$3;
  var $45=(($44+18)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(426))|0);
  var $49=$3;
  var $50=(($49+22)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(810))|0);
  var $54=((($48)+($53))|0);
  var $55=$3;
  var $56=(($55+26)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  var $59=((($58)*(-360))|0);
  var $60=((($54)+($59))|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X011=$63;
  var $64=$3;
  var $65=(($64+34)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  var $68=((($67)*(426))|0);
  var $69=$3;
  var $70=(($69+38)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(810))|0);
  var $74=((($68)+($73))|0);
  var $75=$3;
  var $76=(($75+42)|0);
  var $77=HEAP16[(($76)>>1)];
  var $78=(($77 << 16) >> 16);
  var $79=((($78)*(-360))|0);
  var $80=((($74)+($79))|0);
  var $81=(($80)|0);
  var $82=((($81)+(512))|0);
  var $83=$82 >> 10;
  $X012=$83;
  var $84=$3;
  var $85=(($84+50)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(426))|0);
  var $89=$3;
  var $90=(($89+54)|0);
  var $91=HEAP16[(($90)>>1)];
  var $92=(($91 << 16) >> 16);
  var $93=((($92)*(810))|0);
  var $94=((($88)+($93))|0);
  var $95=$3;
  var $96=(($95+58)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  var $99=((($98)*(-360))|0);
  var $100=((($94)+($99))|0);
  var $101=(($100)|0);
  var $102=((($101)+(512))|0);
  var $103=$102 >> 10;
  $X013=$103;
  var $104=$3;
  var $105=(($104+66)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(426))|0);
  var $109=$3;
  var $110=(($109+70)|0);
  var $111=HEAP16[(($110)>>1)];
  var $112=(($111 << 16) >> 16);
  var $113=((($112)*(810))|0);
  var $114=((($108)+($113))|0);
  var $115=$3;
  var $116=(($115+74)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(-360))|0);
  var $120=((($114)+($119))|0);
  var $121=(($120)|0);
  var $122=((($121)+(512))|0);
  var $123=$122 >> 10;
  $X014=$123;
  $X015=0;
  $X016=0;
  $X017=0;
  var $124=$3;
  var $125=(($124+8)|0);
  var $126=HEAP16[(($125)>>1)];
  var $127=(($126 << 16) >> 16);
  $X020=$127;
  var $128=$3;
  var $129=(($128+24)|0);
  var $130=HEAP16[(($129)>>1)];
  var $131=(($130 << 16) >> 16);
  $X021=$131;
  var $132=$3;
  var $133=(($132+40)|0);
  var $134=HEAP16[(($133)>>1)];
  var $135=(($134 << 16) >> 16);
  $X022=$135;
  var $136=$3;
  var $137=(($136+56)|0);
  var $138=HEAP16[(($137)>>1)];
  var $139=(($138 << 16) >> 16);
  $X023=$139;
  var $140=$3;
  var $141=(($140+72)|0);
  var $142=HEAP16[(($141)>>1)];
  var $143=(($142 << 16) >> 16);
  $X024=$143;
  $X025=0;
  $X026=0;
  $X027=0;
  var $144=$3;
  var $145=(($144+2)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  var $148=((($147)*(23))|0);
  var $149=$3;
  var $150=(($149+6)|0);
  var $151=HEAP16[(($150)>>1)];
  var $152=(($151 << 16) >> 16);
  var $153=((($152)*(-99))|0);
  var $154=((($148)+($153))|0);
  var $155=$3;
  var $156=(($155+10)|0);
  var $157=HEAP16[(($156)>>1)];
  var $158=(($157 << 16) >> 16);
  var $159=((($158)*(502))|0);
  var $160=((($154)+($159))|0);
  var $161=(($160)|0);
  var $162=((($161)+(512))|0);
  var $163=$162 >> 10;
  $X030=$163;
  var $164=$3;
  var $165=(($164+18)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  var $168=((($167)*(23))|0);
  var $169=$3;
  var $170=(($169+22)|0);
  var $171=HEAP16[(($170)>>1)];
  var $172=(($171 << 16) >> 16);
  var $173=((($172)*(-99))|0);
  var $174=((($168)+($173))|0);
  var $175=$3;
  var $176=(($175+26)|0);
  var $177=HEAP16[(($176)>>1)];
  var $178=(($177 << 16) >> 16);
  var $179=((($178)*(502))|0);
  var $180=((($174)+($179))|0);
  var $181=(($180)|0);
  var $182=((($181)+(512))|0);
  var $183=$182 >> 10;
  $X031=$183;
  var $184=$3;
  var $185=(($184+34)|0);
  var $186=HEAP16[(($185)>>1)];
  var $187=(($186 << 16) >> 16);
  var $188=((($187)*(23))|0);
  var $189=$3;
  var $190=(($189+38)|0);
  var $191=HEAP16[(($190)>>1)];
  var $192=(($191 << 16) >> 16);
  var $193=((($192)*(-99))|0);
  var $194=((($188)+($193))|0);
  var $195=$3;
  var $196=(($195+42)|0);
  var $197=HEAP16[(($196)>>1)];
  var $198=(($197 << 16) >> 16);
  var $199=((($198)*(502))|0);
  var $200=((($194)+($199))|0);
  var $201=(($200)|0);
  var $202=((($201)+(512))|0);
  var $203=$202 >> 10;
  $X032=$203;
  var $204=$3;
  var $205=(($204+50)|0);
  var $206=HEAP16[(($205)>>1)];
  var $207=(($206 << 16) >> 16);
  var $208=((($207)*(23))|0);
  var $209=$3;
  var $210=(($209+54)|0);
  var $211=HEAP16[(($210)>>1)];
  var $212=(($211 << 16) >> 16);
  var $213=((($212)*(-99))|0);
  var $214=((($208)+($213))|0);
  var $215=$3;
  var $216=(($215+58)|0);
  var $217=HEAP16[(($216)>>1)];
  var $218=(($217 << 16) >> 16);
  var $219=((($218)*(502))|0);
  var $220=((($214)+($219))|0);
  var $221=(($220)|0);
  var $222=((($221)+(512))|0);
  var $223=$222 >> 10;
  $X033=$223;
  var $224=$3;
  var $225=(($224+66)|0);
  var $226=HEAP16[(($225)>>1)];
  var $227=(($226 << 16) >> 16);
  var $228=((($227)*(23))|0);
  var $229=$3;
  var $230=(($229+70)|0);
  var $231=HEAP16[(($230)>>1)];
  var $232=(($231 << 16) >> 16);
  var $233=((($232)*(-99))|0);
  var $234=((($228)+($233))|0);
  var $235=$3;
  var $236=(($235+74)|0);
  var $237=HEAP16[(($236)>>1)];
  var $238=(($237 << 16) >> 16);
  var $239=((($238)*(502))|0);
  var $240=((($234)+($239))|0);
  var $241=(($240)|0);
  var $242=((($241)+(512))|0);
  var $243=$242 >> 10;
  $X034=$243;
  $X035=0;
  $X036=0;
  $X037=0;
  var $244=$X000;
  var $245=$1;
  var $246=__ZN4jpgd12DCT_Upsample8Matrix442atEii($245, 0, 0);
  HEAP32[(($246)>>2)]=$244;
  var $247=$X001;
  var $248=((($247)*(426))|0);
  var $249=$X003;
  var $250=((($249)*(810))|0);
  var $251=((($248)+($250))|0);
  var $252=(($251)|0);
  var $253=(($252)|0);
  var $254=((($253)+(512))|0);
  var $255=$254 >> 10;
  var $256=$1;
  var $257=__ZN4jpgd12DCT_Upsample8Matrix442atEii($256, 0, 1);
  HEAP32[(($257)>>2)]=$255;
  var $258=$X004;
  var $259=$1;
  var $260=__ZN4jpgd12DCT_Upsample8Matrix442atEii($259, 0, 2);
  HEAP32[(($260)>>2)]=$258;
  var $261=$X001;
  var $262=((($261)*(23))|0);
  var $263=$X003;
  var $264=((($263)*(-99))|0);
  var $265=((($262)+($264))|0);
  var $266=(($265)|0);
  var $267=(($266)|0);
  var $268=((($267)+(512))|0);
  var $269=$268 >> 10;
  var $270=$1;
  var $271=__ZN4jpgd12DCT_Upsample8Matrix442atEii($270, 0, 3);
  HEAP32[(($271)>>2)]=$269;
  var $272=$X010;
  var $273=$1;
  var $274=__ZN4jpgd12DCT_Upsample8Matrix442atEii($273, 1, 0);
  HEAP32[(($274)>>2)]=$272;
  var $275=$X011;
  var $276=((($275)*(426))|0);
  var $277=$X013;
  var $278=((($277)*(810))|0);
  var $279=((($276)+($278))|0);
  var $280=(($279)|0);
  var $281=(($280)|0);
  var $282=((($281)+(512))|0);
  var $283=$282 >> 10;
  var $284=$1;
  var $285=__ZN4jpgd12DCT_Upsample8Matrix442atEii($284, 1, 1);
  HEAP32[(($285)>>2)]=$283;
  var $286=$X014;
  var $287=$1;
  var $288=__ZN4jpgd12DCT_Upsample8Matrix442atEii($287, 1, 2);
  HEAP32[(($288)>>2)]=$286;
  var $289=$X011;
  var $290=((($289)*(23))|0);
  var $291=$X013;
  var $292=((($291)*(-99))|0);
  var $293=((($290)+($292))|0);
  var $294=(($293)|0);
  var $295=(($294)|0);
  var $296=((($295)+(512))|0);
  var $297=$296 >> 10;
  var $298=$1;
  var $299=__ZN4jpgd12DCT_Upsample8Matrix442atEii($298, 1, 3);
  HEAP32[(($299)>>2)]=$297;
  var $300=$X020;
  var $301=$1;
  var $302=__ZN4jpgd12DCT_Upsample8Matrix442atEii($301, 2, 0);
  HEAP32[(($302)>>2)]=$300;
  var $303=$X021;
  var $304=((($303)*(426))|0);
  var $305=$X023;
  var $306=((($305)*(810))|0);
  var $307=((($304)+($306))|0);
  var $308=(($307)|0);
  var $309=(($308)|0);
  var $310=((($309)+(512))|0);
  var $311=$310 >> 10;
  var $312=$1;
  var $313=__ZN4jpgd12DCT_Upsample8Matrix442atEii($312, 2, 1);
  HEAP32[(($313)>>2)]=$311;
  var $314=$X024;
  var $315=$1;
  var $316=__ZN4jpgd12DCT_Upsample8Matrix442atEii($315, 2, 2);
  HEAP32[(($316)>>2)]=$314;
  var $317=$X021;
  var $318=((($317)*(23))|0);
  var $319=$X023;
  var $320=((($319)*(-99))|0);
  var $321=((($318)+($320))|0);
  var $322=(($321)|0);
  var $323=(($322)|0);
  var $324=((($323)+(512))|0);
  var $325=$324 >> 10;
  var $326=$1;
  var $327=__ZN4jpgd12DCT_Upsample8Matrix442atEii($326, 2, 3);
  HEAP32[(($327)>>2)]=$325;
  var $328=$X030;
  var $329=$1;
  var $330=__ZN4jpgd12DCT_Upsample8Matrix442atEii($329, 3, 0);
  HEAP32[(($330)>>2)]=$328;
  var $331=$X031;
  var $332=((($331)*(426))|0);
  var $333=$X033;
  var $334=((($333)*(810))|0);
  var $335=((($332)+($334))|0);
  var $336=(($335)|0);
  var $337=(($336)|0);
  var $338=((($337)+(512))|0);
  var $339=$338 >> 10;
  var $340=$1;
  var $341=__ZN4jpgd12DCT_Upsample8Matrix442atEii($340, 3, 1);
  HEAP32[(($341)>>2)]=$339;
  var $342=$X034;
  var $343=$1;
  var $344=__ZN4jpgd12DCT_Upsample8Matrix442atEii($343, 3, 2);
  HEAP32[(($344)>>2)]=$342;
  var $345=$X031;
  var $346=((($345)*(23))|0);
  var $347=$X033;
  var $348=((($347)*(-99))|0);
  var $349=((($346)+($348))|0);
  var $350=(($349)|0);
  var $351=(($350)|0);
  var $352=((($351)+(512))|0);
  var $353=$352 >> 10;
  var $354=$1;
  var $355=__ZN4jpgd12DCT_Upsample8Matrix442atEii($354, 3, 3);
  HEAP32[(($355)>>2)]=$353;
  var $356=$X001;
  var $357=((($356)*(928))|0);
  var $358=$X003;
  var $359=((($358)*(-325))|0);
  var $360=((($357)+($359))|0);
  var $361=(($360)|0);
  var $362=(($361)|0);
  var $363=((($362)+(512))|0);
  var $364=$363 >> 10;
  var $365=$2;
  var $366=__ZN4jpgd12DCT_Upsample8Matrix442atEii($365, 0, 0);
  HEAP32[(($366)>>2)]=$364;
  var $367=$X002;
  var $368=$2;
  var $369=__ZN4jpgd12DCT_Upsample8Matrix442atEii($368, 0, 1);
  HEAP32[(($369)>>2)]=$367;
  var $370=$X001;
  var $371=((($370)*(-75))|0);
  var $372=$X003;
  var $373=((($372)*(526))|0);
  var $374=((($371)+($373))|0);
  var $375=(($374)|0);
  var $376=(($375)|0);
  var $377=((($376)+(512))|0);
  var $378=$377 >> 10;
  var $379=$2;
  var $380=__ZN4jpgd12DCT_Upsample8Matrix442atEii($379, 0, 2);
  HEAP32[(($380)>>2)]=$378;
  var $381=$2;
  var $382=__ZN4jpgd12DCT_Upsample8Matrix442atEii($381, 0, 3);
  HEAP32[(($382)>>2)]=0;
  var $383=$X011;
  var $384=((($383)*(928))|0);
  var $385=$X013;
  var $386=((($385)*(-325))|0);
  var $387=((($384)+($386))|0);
  var $388=(($387)|0);
  var $389=(($388)|0);
  var $390=((($389)+(512))|0);
  var $391=$390 >> 10;
  var $392=$2;
  var $393=__ZN4jpgd12DCT_Upsample8Matrix442atEii($392, 1, 0);
  HEAP32[(($393)>>2)]=$391;
  var $394=$X012;
  var $395=$2;
  var $396=__ZN4jpgd12DCT_Upsample8Matrix442atEii($395, 1, 1);
  HEAP32[(($396)>>2)]=$394;
  var $397=$X011;
  var $398=((($397)*(-75))|0);
  var $399=$X013;
  var $400=((($399)*(526))|0);
  var $401=((($398)+($400))|0);
  var $402=(($401)|0);
  var $403=(($402)|0);
  var $404=((($403)+(512))|0);
  var $405=$404 >> 10;
  var $406=$2;
  var $407=__ZN4jpgd12DCT_Upsample8Matrix442atEii($406, 1, 2);
  HEAP32[(($407)>>2)]=$405;
  var $408=$2;
  var $409=__ZN4jpgd12DCT_Upsample8Matrix442atEii($408, 1, 3);
  HEAP32[(($409)>>2)]=0;
  var $410=$X021;
  var $411=((($410)*(928))|0);
  var $412=$X023;
  var $413=((($412)*(-325))|0);
  var $414=((($411)+($413))|0);
  var $415=(($414)|0);
  var $416=(($415)|0);
  var $417=((($416)+(512))|0);
  var $418=$417 >> 10;
  var $419=$2;
  var $420=__ZN4jpgd12DCT_Upsample8Matrix442atEii($419, 2, 0);
  HEAP32[(($420)>>2)]=$418;
  var $421=$X022;
  var $422=$2;
  var $423=__ZN4jpgd12DCT_Upsample8Matrix442atEii($422, 2, 1);
  HEAP32[(($423)>>2)]=$421;
  var $424=$X021;
  var $425=((($424)*(-75))|0);
  var $426=$X023;
  var $427=((($426)*(526))|0);
  var $428=((($425)+($427))|0);
  var $429=(($428)|0);
  var $430=(($429)|0);
  var $431=((($430)+(512))|0);
  var $432=$431 >> 10;
  var $433=$2;
  var $434=__ZN4jpgd12DCT_Upsample8Matrix442atEii($433, 2, 2);
  HEAP32[(($434)>>2)]=$432;
  var $435=$2;
  var $436=__ZN4jpgd12DCT_Upsample8Matrix442atEii($435, 2, 3);
  HEAP32[(($436)>>2)]=0;
  var $437=$X031;
  var $438=((($437)*(928))|0);
  var $439=$X033;
  var $440=((($439)*(-325))|0);
  var $441=((($438)+($440))|0);
  var $442=(($441)|0);
  var $443=(($442)|0);
  var $444=((($443)+(512))|0);
  var $445=$444 >> 10;
  var $446=$2;
  var $447=__ZN4jpgd12DCT_Upsample8Matrix442atEii($446, 3, 0);
  HEAP32[(($447)>>2)]=$445;
  var $448=$X032;
  var $449=$2;
  var $450=__ZN4jpgd12DCT_Upsample8Matrix442atEii($449, 3, 1);
  HEAP32[(($450)>>2)]=$448;
  var $451=$X031;
  var $452=((($451)*(-75))|0);
  var $453=$X033;
  var $454=((($453)*(526))|0);
  var $455=((($452)+($454))|0);
  var $456=(($455)|0);
  var $457=(($456)|0);
  var $458=((($457)+(512))|0);
  var $459=$458 >> 10;
  var $460=$2;
  var $461=__ZN4jpgd12DCT_Upsample8Matrix442atEii($460, 3, 2);
  HEAP32[(($461)>>2)]=$459;
  var $462=$2;
  var $463=__ZN4jpgd12DCT_Upsample8Matrix442atEii($462, 3, 3);
  HEAP32[(($463)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=$3;
  var $16=(($15+10)|0);
  var $17=HEAP16[(($16)>>1)];
  var $18=(($17 << 16) >> 16);
  var $19=((($18)*(218))|0);
  var $20=((($14)+($19))|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X100=$23;
  var $24=$3;
  var $25=(($24+18)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(928))|0);
  var $29=$3;
  var $30=(($29+22)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(-325))|0);
  var $34=((($28)+($33))|0);
  var $35=$3;
  var $36=(($35+26)|0);
  var $37=HEAP16[(($36)>>1)];
  var $38=(($37 << 16) >> 16);
  var $39=((($38)*(218))|0);
  var $40=((($34)+($39))|0);
  var $41=(($40)|0);
  var $42=((($41)+(512))|0);
  var $43=$42 >> 10;
  $X101=$43;
  var $44=$3;
  var $45=(($44+34)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(928))|0);
  var $49=$3;
  var $50=(($49+38)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(-325))|0);
  var $54=((($48)+($53))|0);
  var $55=$3;
  var $56=(($55+42)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  var $59=((($58)*(218))|0);
  var $60=((($54)+($59))|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X102=$63;
  var $64=$3;
  var $65=(($64+50)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  var $68=((($67)*(928))|0);
  var $69=$3;
  var $70=(($69+54)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(-325))|0);
  var $74=((($68)+($73))|0);
  var $75=$3;
  var $76=(($75+58)|0);
  var $77=HEAP16[(($76)>>1)];
  var $78=(($77 << 16) >> 16);
  var $79=((($78)*(218))|0);
  var $80=((($74)+($79))|0);
  var $81=(($80)|0);
  var $82=((($81)+(512))|0);
  var $83=$82 >> 10;
  $X103=$83;
  var $84=$3;
  var $85=(($84+66)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(928))|0);
  var $89=$3;
  var $90=(($89+70)|0);
  var $91=HEAP16[(($90)>>1)];
  var $92=(($91 << 16) >> 16);
  var $93=((($92)*(-325))|0);
  var $94=((($88)+($93))|0);
  var $95=$3;
  var $96=(($95+74)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  var $99=((($98)*(218))|0);
  var $100=((($94)+($99))|0);
  var $101=(($100)|0);
  var $102=((($101)+(512))|0);
  var $103=$102 >> 10;
  $X104=$103;
  $X105=0;
  $X106=0;
  $X107=0;
  var $104=$3;
  var $105=(($104+4)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  $X110=$107;
  var $108=$3;
  var $109=(($108+20)|0);
  var $110=HEAP16[(($109)>>1)];
  var $111=(($110 << 16) >> 16);
  $X111=$111;
  var $112=$3;
  var $113=(($112+36)|0);
  var $114=HEAP16[(($113)>>1)];
  var $115=(($114 << 16) >> 16);
  $X112=$115;
  var $116=$3;
  var $117=(($116+52)|0);
  var $118=HEAP16[(($117)>>1)];
  var $119=(($118 << 16) >> 16);
  $X113=$119;
  var $120=$3;
  var $121=(($120+68)|0);
  var $122=HEAP16[(($121)>>1)];
  var $123=(($122 << 16) >> 16);
  $X114=$123;
  $X115=0;
  $X116=0;
  $X117=0;
  var $124=$3;
  var $125=(($124+2)|0);
  var $126=HEAP16[(($125)>>1)];
  var $127=(($126 << 16) >> 16);
  var $128=((($127)*(-75))|0);
  var $129=$3;
  var $130=(($129+6)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(526))|0);
  var $134=((($128)+($133))|0);
  var $135=$3;
  var $136=(($135+10)|0);
  var $137=HEAP16[(($136)>>1)];
  var $138=(($137 << 16) >> 16);
  var $139=((($138)*(787))|0);
  var $140=((($134)+($139))|0);
  var $141=(($140)|0);
  var $142=((($141)+(512))|0);
  var $143=$142 >> 10;
  $X120=$143;
  var $144=$3;
  var $145=(($144+18)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  var $148=((($147)*(-75))|0);
  var $149=$3;
  var $150=(($149+22)|0);
  var $151=HEAP16[(($150)>>1)];
  var $152=(($151 << 16) >> 16);
  var $153=((($152)*(526))|0);
  var $154=((($148)+($153))|0);
  var $155=$3;
  var $156=(($155+26)|0);
  var $157=HEAP16[(($156)>>1)];
  var $158=(($157 << 16) >> 16);
  var $159=((($158)*(787))|0);
  var $160=((($154)+($159))|0);
  var $161=(($160)|0);
  var $162=((($161)+(512))|0);
  var $163=$162 >> 10;
  $X121=$163;
  var $164=$3;
  var $165=(($164+34)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  var $168=((($167)*(-75))|0);
  var $169=$3;
  var $170=(($169+38)|0);
  var $171=HEAP16[(($170)>>1)];
  var $172=(($171 << 16) >> 16);
  var $173=((($172)*(526))|0);
  var $174=((($168)+($173))|0);
  var $175=$3;
  var $176=(($175+42)|0);
  var $177=HEAP16[(($176)>>1)];
  var $178=(($177 << 16) >> 16);
  var $179=((($178)*(787))|0);
  var $180=((($174)+($179))|0);
  var $181=(($180)|0);
  var $182=((($181)+(512))|0);
  var $183=$182 >> 10;
  $X122=$183;
  var $184=$3;
  var $185=(($184+50)|0);
  var $186=HEAP16[(($185)>>1)];
  var $187=(($186 << 16) >> 16);
  var $188=((($187)*(-75))|0);
  var $189=$3;
  var $190=(($189+54)|0);
  var $191=HEAP16[(($190)>>1)];
  var $192=(($191 << 16) >> 16);
  var $193=((($192)*(526))|0);
  var $194=((($188)+($193))|0);
  var $195=$3;
  var $196=(($195+58)|0);
  var $197=HEAP16[(($196)>>1)];
  var $198=(($197 << 16) >> 16);
  var $199=((($198)*(787))|0);
  var $200=((($194)+($199))|0);
  var $201=(($200)|0);
  var $202=((($201)+(512))|0);
  var $203=$202 >> 10;
  $X123=$203;
  var $204=$3;
  var $205=(($204+66)|0);
  var $206=HEAP16[(($205)>>1)];
  var $207=(($206 << 16) >> 16);
  var $208=((($207)*(-75))|0);
  var $209=$3;
  var $210=(($209+70)|0);
  var $211=HEAP16[(($210)>>1)];
  var $212=(($211 << 16) >> 16);
  var $213=((($212)*(526))|0);
  var $214=((($208)+($213))|0);
  var $215=$3;
  var $216=(($215+74)|0);
  var $217=HEAP16[(($216)>>1)];
  var $218=(($217 << 16) >> 16);
  var $219=((($218)*(787))|0);
  var $220=((($214)+($219))|0);
  var $221=(($220)|0);
  var $222=((($221)+(512))|0);
  var $223=$222 >> 10;
  $X124=$223;
  $X125=0;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $224=$X100;
  var $225=$1;
  var $226=__ZN4jpgd12DCT_Upsample8Matrix442atEii($225, 0, 0);
  HEAP32[(($226)>>2)]=$224;
  var $227=$X101;
  var $228=((($227)*(426))|0);
  var $229=$X103;
  var $230=((($229)*(810))|0);
  var $231=((($228)+($230))|0);
  var $232=(($231)|0);
  var $233=(($232)|0);
  var $234=((($233)+(512))|0);
  var $235=$234 >> 10;
  var $236=$1;
  var $237=__ZN4jpgd12DCT_Upsample8Matrix442atEii($236, 0, 1);
  HEAP32[(($237)>>2)]=$235;
  var $238=$X104;
  var $239=$1;
  var $240=__ZN4jpgd12DCT_Upsample8Matrix442atEii($239, 0, 2);
  HEAP32[(($240)>>2)]=$238;
  var $241=$X101;
  var $242=((($241)*(23))|0);
  var $243=$X103;
  var $244=((($243)*(-99))|0);
  var $245=((($242)+($244))|0);
  var $246=(($245)|0);
  var $247=(($246)|0);
  var $248=((($247)+(512))|0);
  var $249=$248 >> 10;
  var $250=$1;
  var $251=__ZN4jpgd12DCT_Upsample8Matrix442atEii($250, 0, 3);
  HEAP32[(($251)>>2)]=$249;
  var $252=$X110;
  var $253=$1;
  var $254=__ZN4jpgd12DCT_Upsample8Matrix442atEii($253, 1, 0);
  HEAP32[(($254)>>2)]=$252;
  var $255=$X111;
  var $256=((($255)*(426))|0);
  var $257=$X113;
  var $258=((($257)*(810))|0);
  var $259=((($256)+($258))|0);
  var $260=(($259)|0);
  var $261=(($260)|0);
  var $262=((($261)+(512))|0);
  var $263=$262 >> 10;
  var $264=$1;
  var $265=__ZN4jpgd12DCT_Upsample8Matrix442atEii($264, 1, 1);
  HEAP32[(($265)>>2)]=$263;
  var $266=$X114;
  var $267=$1;
  var $268=__ZN4jpgd12DCT_Upsample8Matrix442atEii($267, 1, 2);
  HEAP32[(($268)>>2)]=$266;
  var $269=$X111;
  var $270=((($269)*(23))|0);
  var $271=$X113;
  var $272=((($271)*(-99))|0);
  var $273=((($270)+($272))|0);
  var $274=(($273)|0);
  var $275=(($274)|0);
  var $276=((($275)+(512))|0);
  var $277=$276 >> 10;
  var $278=$1;
  var $279=__ZN4jpgd12DCT_Upsample8Matrix442atEii($278, 1, 3);
  HEAP32[(($279)>>2)]=$277;
  var $280=$X120;
  var $281=$1;
  var $282=__ZN4jpgd12DCT_Upsample8Matrix442atEii($281, 2, 0);
  HEAP32[(($282)>>2)]=$280;
  var $283=$X121;
  var $284=((($283)*(426))|0);
  var $285=$X123;
  var $286=((($285)*(810))|0);
  var $287=((($284)+($286))|0);
  var $288=(($287)|0);
  var $289=(($288)|0);
  var $290=((($289)+(512))|0);
  var $291=$290 >> 10;
  var $292=$1;
  var $293=__ZN4jpgd12DCT_Upsample8Matrix442atEii($292, 2, 1);
  HEAP32[(($293)>>2)]=$291;
  var $294=$X124;
  var $295=$1;
  var $296=__ZN4jpgd12DCT_Upsample8Matrix442atEii($295, 2, 2);
  HEAP32[(($296)>>2)]=$294;
  var $297=$X121;
  var $298=((($297)*(23))|0);
  var $299=$X123;
  var $300=((($299)*(-99))|0);
  var $301=((($298)+($300))|0);
  var $302=(($301)|0);
  var $303=(($302)|0);
  var $304=((($303)+(512))|0);
  var $305=$304 >> 10;
  var $306=$1;
  var $307=__ZN4jpgd12DCT_Upsample8Matrix442atEii($306, 2, 3);
  HEAP32[(($307)>>2)]=$305;
  var $308=$1;
  var $309=__ZN4jpgd12DCT_Upsample8Matrix442atEii($308, 3, 0);
  HEAP32[(($309)>>2)]=0;
  var $310=$1;
  var $311=__ZN4jpgd12DCT_Upsample8Matrix442atEii($310, 3, 1);
  HEAP32[(($311)>>2)]=0;
  var $312=$1;
  var $313=__ZN4jpgd12DCT_Upsample8Matrix442atEii($312, 3, 2);
  HEAP32[(($313)>>2)]=0;
  var $314=$1;
  var $315=__ZN4jpgd12DCT_Upsample8Matrix442atEii($314, 3, 3);
  HEAP32[(($315)>>2)]=0;
  var $316=$X101;
  var $317=((($316)*(928))|0);
  var $318=$X103;
  var $319=((($318)*(-325))|0);
  var $320=((($317)+($319))|0);
  var $321=(($320)|0);
  var $322=(($321)|0);
  var $323=((($322)+(512))|0);
  var $324=$323 >> 10;
  var $325=$2;
  var $326=__ZN4jpgd12DCT_Upsample8Matrix442atEii($325, 0, 0);
  HEAP32[(($326)>>2)]=$324;
  var $327=$X102;
  var $328=$2;
  var $329=__ZN4jpgd12DCT_Upsample8Matrix442atEii($328, 0, 1);
  HEAP32[(($329)>>2)]=$327;
  var $330=$X101;
  var $331=((($330)*(-75))|0);
  var $332=$X103;
  var $333=((($332)*(526))|0);
  var $334=((($331)+($333))|0);
  var $335=(($334)|0);
  var $336=(($335)|0);
  var $337=((($336)+(512))|0);
  var $338=$337 >> 10;
  var $339=$2;
  var $340=__ZN4jpgd12DCT_Upsample8Matrix442atEii($339, 0, 2);
  HEAP32[(($340)>>2)]=$338;
  var $341=$2;
  var $342=__ZN4jpgd12DCT_Upsample8Matrix442atEii($341, 0, 3);
  HEAP32[(($342)>>2)]=0;
  var $343=$X111;
  var $344=((($343)*(928))|0);
  var $345=$X113;
  var $346=((($345)*(-325))|0);
  var $347=((($344)+($346))|0);
  var $348=(($347)|0);
  var $349=(($348)|0);
  var $350=((($349)+(512))|0);
  var $351=$350 >> 10;
  var $352=$2;
  var $353=__ZN4jpgd12DCT_Upsample8Matrix442atEii($352, 1, 0);
  HEAP32[(($353)>>2)]=$351;
  var $354=$X112;
  var $355=$2;
  var $356=__ZN4jpgd12DCT_Upsample8Matrix442atEii($355, 1, 1);
  HEAP32[(($356)>>2)]=$354;
  var $357=$X111;
  var $358=((($357)*(-75))|0);
  var $359=$X113;
  var $360=((($359)*(526))|0);
  var $361=((($358)+($360))|0);
  var $362=(($361)|0);
  var $363=(($362)|0);
  var $364=((($363)+(512))|0);
  var $365=$364 >> 10;
  var $366=$2;
  var $367=__ZN4jpgd12DCT_Upsample8Matrix442atEii($366, 1, 2);
  HEAP32[(($367)>>2)]=$365;
  var $368=$2;
  var $369=__ZN4jpgd12DCT_Upsample8Matrix442atEii($368, 1, 3);
  HEAP32[(($369)>>2)]=0;
  var $370=$X121;
  var $371=((($370)*(928))|0);
  var $372=$X123;
  var $373=((($372)*(-325))|0);
  var $374=((($371)+($373))|0);
  var $375=(($374)|0);
  var $376=(($375)|0);
  var $377=((($376)+(512))|0);
  var $378=$377 >> 10;
  var $379=$2;
  var $380=__ZN4jpgd12DCT_Upsample8Matrix442atEii($379, 2, 0);
  HEAP32[(($380)>>2)]=$378;
  var $381=$X122;
  var $382=$2;
  var $383=__ZN4jpgd12DCT_Upsample8Matrix442atEii($382, 2, 1);
  HEAP32[(($383)>>2)]=$381;
  var $384=$X121;
  var $385=((($384)*(-75))|0);
  var $386=$X123;
  var $387=((($386)*(526))|0);
  var $388=((($385)+($387))|0);
  var $389=(($388)|0);
  var $390=(($389)|0);
  var $391=((($390)+(512))|0);
  var $392=$391 >> 10;
  var $393=$2;
  var $394=__ZN4jpgd12DCT_Upsample8Matrix442atEii($393, 2, 2);
  HEAP32[(($394)>>2)]=$392;
  var $395=$2;
  var $396=__ZN4jpgd12DCT_Upsample8Matrix442atEii($395, 2, 3);
  HEAP32[(($396)>>2)]=0;
  var $397=$2;
  var $398=__ZN4jpgd12DCT_Upsample8Matrix442atEii($397, 3, 0);
  HEAP32[(($398)>>2)]=0;
  var $399=$2;
  var $400=__ZN4jpgd12DCT_Upsample8Matrix442atEii($399, 3, 1);
  HEAP32[(($400)>>2)]=0;
  var $401=$2;
  var $402=__ZN4jpgd12DCT_Upsample8Matrix442atEii($401, 3, 2);
  HEAP32[(($402)>>2)]=0;
  var $403=$2;
  var $404=__ZN4jpgd12DCT_Upsample8Matrix442atEii($403, 3, 3);
  HEAP32[(($404)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  var $24=$3;
  var $25=(($24+80)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  $X005=$27;
  $X006=0;
  $X007=0;
  var $28=$3;
  var $29=(($28+2)|0);
  var $30=HEAP16[(($29)>>1)];
  var $31=(($30 << 16) >> 16);
  var $32=((($31)*(426))|0);
  var $33=$3;
  var $34=(($33+6)|0);
  var $35=HEAP16[(($34)>>1)];
  var $36=(($35 << 16) >> 16);
  var $37=((($36)*(810))|0);
  var $38=((($32)+($37))|0);
  var $39=$3;
  var $40=(($39+10)|0);
  var $41=HEAP16[(($40)>>1)];
  var $42=(($41 << 16) >> 16);
  var $43=((($42)*(-360))|0);
  var $44=((($38)+($43))|0);
  var $45=(($44)|0);
  var $46=((($45)+(512))|0);
  var $47=$46 >> 10;
  $X010=$47;
  var $48=$3;
  var $49=(($48+18)|0);
  var $50=HEAP16[(($49)>>1)];
  var $51=(($50 << 16) >> 16);
  var $52=((($51)*(426))|0);
  var $53=$3;
  var $54=(($53+22)|0);
  var $55=HEAP16[(($54)>>1)];
  var $56=(($55 << 16) >> 16);
  var $57=((($56)*(810))|0);
  var $58=((($52)+($57))|0);
  var $59=$3;
  var $60=(($59+26)|0);
  var $61=HEAP16[(($60)>>1)];
  var $62=(($61 << 16) >> 16);
  var $63=((($62)*(-360))|0);
  var $64=((($58)+($63))|0);
  var $65=(($64)|0);
  var $66=((($65)+(512))|0);
  var $67=$66 >> 10;
  $X011=$67;
  var $68=$3;
  var $69=(($68+34)|0);
  var $70=HEAP16[(($69)>>1)];
  var $71=(($70 << 16) >> 16);
  var $72=((($71)*(426))|0);
  var $73=$3;
  var $74=(($73+38)|0);
  var $75=HEAP16[(($74)>>1)];
  var $76=(($75 << 16) >> 16);
  var $77=((($76)*(810))|0);
  var $78=((($72)+($77))|0);
  var $79=$3;
  var $80=(($79+42)|0);
  var $81=HEAP16[(($80)>>1)];
  var $82=(($81 << 16) >> 16);
  var $83=((($82)*(-360))|0);
  var $84=((($78)+($83))|0);
  var $85=(($84)|0);
  var $86=((($85)+(512))|0);
  var $87=$86 >> 10;
  $X012=$87;
  var $88=$3;
  var $89=(($88+50)|0);
  var $90=HEAP16[(($89)>>1)];
  var $91=(($90 << 16) >> 16);
  var $92=((($91)*(426))|0);
  var $93=$3;
  var $94=(($93+54)|0);
  var $95=HEAP16[(($94)>>1)];
  var $96=(($95 << 16) >> 16);
  var $97=((($96)*(810))|0);
  var $98=((($92)+($97))|0);
  var $99=$3;
  var $100=(($99+58)|0);
  var $101=HEAP16[(($100)>>1)];
  var $102=(($101 << 16) >> 16);
  var $103=((($102)*(-360))|0);
  var $104=((($98)+($103))|0);
  var $105=(($104)|0);
  var $106=((($105)+(512))|0);
  var $107=$106 >> 10;
  $X013=$107;
  var $108=$3;
  var $109=(($108+66)|0);
  var $110=HEAP16[(($109)>>1)];
  var $111=(($110 << 16) >> 16);
  var $112=((($111)*(426))|0);
  var $113=$3;
  var $114=(($113+70)|0);
  var $115=HEAP16[(($114)>>1)];
  var $116=(($115 << 16) >> 16);
  var $117=((($116)*(810))|0);
  var $118=((($112)+($117))|0);
  var $119=$3;
  var $120=(($119+74)|0);
  var $121=HEAP16[(($120)>>1)];
  var $122=(($121 << 16) >> 16);
  var $123=((($122)*(-360))|0);
  var $124=((($118)+($123))|0);
  var $125=(($124)|0);
  var $126=((($125)+(512))|0);
  var $127=$126 >> 10;
  $X014=$127;
  var $128=$3;
  var $129=(($128+82)|0);
  var $130=HEAP16[(($129)>>1)];
  var $131=(($130 << 16) >> 16);
  var $132=((($131)*(426))|0);
  var $133=$3;
  var $134=(($133+86)|0);
  var $135=HEAP16[(($134)>>1)];
  var $136=(($135 << 16) >> 16);
  var $137=((($136)*(810))|0);
  var $138=((($132)+($137))|0);
  var $139=$3;
  var $140=(($139+90)|0);
  var $141=HEAP16[(($140)>>1)];
  var $142=(($141 << 16) >> 16);
  var $143=((($142)*(-360))|0);
  var $144=((($138)+($143))|0);
  var $145=(($144)|0);
  var $146=((($145)+(512))|0);
  var $147=$146 >> 10;
  $X015=$147;
  $X016=0;
  $X017=0;
  var $148=$3;
  var $149=(($148+8)|0);
  var $150=HEAP16[(($149)>>1)];
  var $151=(($150 << 16) >> 16);
  $X020=$151;
  var $152=$3;
  var $153=(($152+24)|0);
  var $154=HEAP16[(($153)>>1)];
  var $155=(($154 << 16) >> 16);
  $X021=$155;
  var $156=$3;
  var $157=(($156+40)|0);
  var $158=HEAP16[(($157)>>1)];
  var $159=(($158 << 16) >> 16);
  $X022=$159;
  var $160=$3;
  var $161=(($160+56)|0);
  var $162=HEAP16[(($161)>>1)];
  var $163=(($162 << 16) >> 16);
  $X023=$163;
  var $164=$3;
  var $165=(($164+72)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  $X024=$167;
  var $168=$3;
  var $169=(($168+88)|0);
  var $170=HEAP16[(($169)>>1)];
  var $171=(($170 << 16) >> 16);
  $X025=$171;
  $X026=0;
  $X027=0;
  var $172=$3;
  var $173=(($172+2)|0);
  var $174=HEAP16[(($173)>>1)];
  var $175=(($174 << 16) >> 16);
  var $176=((($175)*(23))|0);
  var $177=$3;
  var $178=(($177+6)|0);
  var $179=HEAP16[(($178)>>1)];
  var $180=(($179 << 16) >> 16);
  var $181=((($180)*(-99))|0);
  var $182=((($176)+($181))|0);
  var $183=$3;
  var $184=(($183+10)|0);
  var $185=HEAP16[(($184)>>1)];
  var $186=(($185 << 16) >> 16);
  var $187=((($186)*(502))|0);
  var $188=((($182)+($187))|0);
  var $189=(($188)|0);
  var $190=((($189)+(512))|0);
  var $191=$190 >> 10;
  $X030=$191;
  var $192=$3;
  var $193=(($192+18)|0);
  var $194=HEAP16[(($193)>>1)];
  var $195=(($194 << 16) >> 16);
  var $196=((($195)*(23))|0);
  var $197=$3;
  var $198=(($197+22)|0);
  var $199=HEAP16[(($198)>>1)];
  var $200=(($199 << 16) >> 16);
  var $201=((($200)*(-99))|0);
  var $202=((($196)+($201))|0);
  var $203=$3;
  var $204=(($203+26)|0);
  var $205=HEAP16[(($204)>>1)];
  var $206=(($205 << 16) >> 16);
  var $207=((($206)*(502))|0);
  var $208=((($202)+($207))|0);
  var $209=(($208)|0);
  var $210=((($209)+(512))|0);
  var $211=$210 >> 10;
  $X031=$211;
  var $212=$3;
  var $213=(($212+34)|0);
  var $214=HEAP16[(($213)>>1)];
  var $215=(($214 << 16) >> 16);
  var $216=((($215)*(23))|0);
  var $217=$3;
  var $218=(($217+38)|0);
  var $219=HEAP16[(($218)>>1)];
  var $220=(($219 << 16) >> 16);
  var $221=((($220)*(-99))|0);
  var $222=((($216)+($221))|0);
  var $223=$3;
  var $224=(($223+42)|0);
  var $225=HEAP16[(($224)>>1)];
  var $226=(($225 << 16) >> 16);
  var $227=((($226)*(502))|0);
  var $228=((($222)+($227))|0);
  var $229=(($228)|0);
  var $230=((($229)+(512))|0);
  var $231=$230 >> 10;
  $X032=$231;
  var $232=$3;
  var $233=(($232+50)|0);
  var $234=HEAP16[(($233)>>1)];
  var $235=(($234 << 16) >> 16);
  var $236=((($235)*(23))|0);
  var $237=$3;
  var $238=(($237+54)|0);
  var $239=HEAP16[(($238)>>1)];
  var $240=(($239 << 16) >> 16);
  var $241=((($240)*(-99))|0);
  var $242=((($236)+($241))|0);
  var $243=$3;
  var $244=(($243+58)|0);
  var $245=HEAP16[(($244)>>1)];
  var $246=(($245 << 16) >> 16);
  var $247=((($246)*(502))|0);
  var $248=((($242)+($247))|0);
  var $249=(($248)|0);
  var $250=((($249)+(512))|0);
  var $251=$250 >> 10;
  $X033=$251;
  var $252=$3;
  var $253=(($252+66)|0);
  var $254=HEAP16[(($253)>>1)];
  var $255=(($254 << 16) >> 16);
  var $256=((($255)*(23))|0);
  var $257=$3;
  var $258=(($257+70)|0);
  var $259=HEAP16[(($258)>>1)];
  var $260=(($259 << 16) >> 16);
  var $261=((($260)*(-99))|0);
  var $262=((($256)+($261))|0);
  var $263=$3;
  var $264=(($263+74)|0);
  var $265=HEAP16[(($264)>>1)];
  var $266=(($265 << 16) >> 16);
  var $267=((($266)*(502))|0);
  var $268=((($262)+($267))|0);
  var $269=(($268)|0);
  var $270=((($269)+(512))|0);
  var $271=$270 >> 10;
  $X034=$271;
  var $272=$3;
  var $273=(($272+82)|0);
  var $274=HEAP16[(($273)>>1)];
  var $275=(($274 << 16) >> 16);
  var $276=((($275)*(23))|0);
  var $277=$3;
  var $278=(($277+86)|0);
  var $279=HEAP16[(($278)>>1)];
  var $280=(($279 << 16) >> 16);
  var $281=((($280)*(-99))|0);
  var $282=((($276)+($281))|0);
  var $283=$3;
  var $284=(($283+90)|0);
  var $285=HEAP16[(($284)>>1)];
  var $286=(($285 << 16) >> 16);
  var $287=((($286)*(502))|0);
  var $288=((($282)+($287))|0);
  var $289=(($288)|0);
  var $290=((($289)+(512))|0);
  var $291=$290 >> 10;
  $X035=$291;
  $X036=0;
  $X037=0;
  var $292=$X000;
  var $293=$1;
  var $294=__ZN4jpgd12DCT_Upsample8Matrix442atEii($293, 0, 0);
  HEAP32[(($294)>>2)]=$292;
  var $295=$X001;
  var $296=((($295)*(426))|0);
  var $297=$X003;
  var $298=((($297)*(810))|0);
  var $299=((($296)+($298))|0);
  var $300=$X005;
  var $301=((($300)*(-360))|0);
  var $302=((($299)+($301))|0);
  var $303=(($302)|0);
  var $304=((($303)+(512))|0);
  var $305=$304 >> 10;
  var $306=$1;
  var $307=__ZN4jpgd12DCT_Upsample8Matrix442atEii($306, 0, 1);
  HEAP32[(($307)>>2)]=$305;
  var $308=$X004;
  var $309=$1;
  var $310=__ZN4jpgd12DCT_Upsample8Matrix442atEii($309, 0, 2);
  HEAP32[(($310)>>2)]=$308;
  var $311=$X001;
  var $312=((($311)*(23))|0);
  var $313=$X003;
  var $314=((($313)*(-99))|0);
  var $315=((($312)+($314))|0);
  var $316=$X005;
  var $317=((($316)*(502))|0);
  var $318=((($315)+($317))|0);
  var $319=(($318)|0);
  var $320=((($319)+(512))|0);
  var $321=$320 >> 10;
  var $322=$1;
  var $323=__ZN4jpgd12DCT_Upsample8Matrix442atEii($322, 0, 3);
  HEAP32[(($323)>>2)]=$321;
  var $324=$X010;
  var $325=$1;
  var $326=__ZN4jpgd12DCT_Upsample8Matrix442atEii($325, 1, 0);
  HEAP32[(($326)>>2)]=$324;
  var $327=$X011;
  var $328=((($327)*(426))|0);
  var $329=$X013;
  var $330=((($329)*(810))|0);
  var $331=((($328)+($330))|0);
  var $332=$X015;
  var $333=((($332)*(-360))|0);
  var $334=((($331)+($333))|0);
  var $335=(($334)|0);
  var $336=((($335)+(512))|0);
  var $337=$336 >> 10;
  var $338=$1;
  var $339=__ZN4jpgd12DCT_Upsample8Matrix442atEii($338, 1, 1);
  HEAP32[(($339)>>2)]=$337;
  var $340=$X014;
  var $341=$1;
  var $342=__ZN4jpgd12DCT_Upsample8Matrix442atEii($341, 1, 2);
  HEAP32[(($342)>>2)]=$340;
  var $343=$X011;
  var $344=((($343)*(23))|0);
  var $345=$X013;
  var $346=((($345)*(-99))|0);
  var $347=((($344)+($346))|0);
  var $348=$X015;
  var $349=((($348)*(502))|0);
  var $350=((($347)+($349))|0);
  var $351=(($350)|0);
  var $352=((($351)+(512))|0);
  var $353=$352 >> 10;
  var $354=$1;
  var $355=__ZN4jpgd12DCT_Upsample8Matrix442atEii($354, 1, 3);
  HEAP32[(($355)>>2)]=$353;
  var $356=$X020;
  var $357=$1;
  var $358=__ZN4jpgd12DCT_Upsample8Matrix442atEii($357, 2, 0);
  HEAP32[(($358)>>2)]=$356;
  var $359=$X021;
  var $360=((($359)*(426))|0);
  var $361=$X023;
  var $362=((($361)*(810))|0);
  var $363=((($360)+($362))|0);
  var $364=$X025;
  var $365=((($364)*(-360))|0);
  var $366=((($363)+($365))|0);
  var $367=(($366)|0);
  var $368=((($367)+(512))|0);
  var $369=$368 >> 10;
  var $370=$1;
  var $371=__ZN4jpgd12DCT_Upsample8Matrix442atEii($370, 2, 1);
  HEAP32[(($371)>>2)]=$369;
  var $372=$X024;
  var $373=$1;
  var $374=__ZN4jpgd12DCT_Upsample8Matrix442atEii($373, 2, 2);
  HEAP32[(($374)>>2)]=$372;
  var $375=$X021;
  var $376=((($375)*(23))|0);
  var $377=$X023;
  var $378=((($377)*(-99))|0);
  var $379=((($376)+($378))|0);
  var $380=$X025;
  var $381=((($380)*(502))|0);
  var $382=((($379)+($381))|0);
  var $383=(($382)|0);
  var $384=((($383)+(512))|0);
  var $385=$384 >> 10;
  var $386=$1;
  var $387=__ZN4jpgd12DCT_Upsample8Matrix442atEii($386, 2, 3);
  HEAP32[(($387)>>2)]=$385;
  var $388=$X030;
  var $389=$1;
  var $390=__ZN4jpgd12DCT_Upsample8Matrix442atEii($389, 3, 0);
  HEAP32[(($390)>>2)]=$388;
  var $391=$X031;
  var $392=((($391)*(426))|0);
  var $393=$X033;
  var $394=((($393)*(810))|0);
  var $395=((($392)+($394))|0);
  var $396=$X035;
  var $397=((($396)*(-360))|0);
  var $398=((($395)+($397))|0);
  var $399=(($398)|0);
  var $400=((($399)+(512))|0);
  var $401=$400 >> 10;
  var $402=$1;
  var $403=__ZN4jpgd12DCT_Upsample8Matrix442atEii($402, 3, 1);
  HEAP32[(($403)>>2)]=$401;
  var $404=$X034;
  var $405=$1;
  var $406=__ZN4jpgd12DCT_Upsample8Matrix442atEii($405, 3, 2);
  HEAP32[(($406)>>2)]=$404;
  var $407=$X031;
  var $408=((($407)*(23))|0);
  var $409=$X033;
  var $410=((($409)*(-99))|0);
  var $411=((($408)+($410))|0);
  var $412=$X035;
  var $413=((($412)*(502))|0);
  var $414=((($411)+($413))|0);
  var $415=(($414)|0);
  var $416=((($415)+(512))|0);
  var $417=$416 >> 10;
  var $418=$1;
  var $419=__ZN4jpgd12DCT_Upsample8Matrix442atEii($418, 3, 3);
  HEAP32[(($419)>>2)]=$417;
  var $420=$X001;
  var $421=((($420)*(928))|0);
  var $422=$X003;
  var $423=((($422)*(-325))|0);
  var $424=((($421)+($423))|0);
  var $425=$X005;
  var $426=((($425)*(218))|0);
  var $427=((($424)+($426))|0);
  var $428=(($427)|0);
  var $429=((($428)+(512))|0);
  var $430=$429 >> 10;
  var $431=$2;
  var $432=__ZN4jpgd12DCT_Upsample8Matrix442atEii($431, 0, 0);
  HEAP32[(($432)>>2)]=$430;
  var $433=$X002;
  var $434=$2;
  var $435=__ZN4jpgd12DCT_Upsample8Matrix442atEii($434, 0, 1);
  HEAP32[(($435)>>2)]=$433;
  var $436=$X001;
  var $437=((($436)*(-75))|0);
  var $438=$X003;
  var $439=((($438)*(526))|0);
  var $440=((($437)+($439))|0);
  var $441=$X005;
  var $442=((($441)*(787))|0);
  var $443=((($440)+($442))|0);
  var $444=(($443)|0);
  var $445=((($444)+(512))|0);
  var $446=$445 >> 10;
  var $447=$2;
  var $448=__ZN4jpgd12DCT_Upsample8Matrix442atEii($447, 0, 2);
  HEAP32[(($448)>>2)]=$446;
  var $449=$2;
  var $450=__ZN4jpgd12DCT_Upsample8Matrix442atEii($449, 0, 3);
  HEAP32[(($450)>>2)]=0;
  var $451=$X011;
  var $452=((($451)*(928))|0);
  var $453=$X013;
  var $454=((($453)*(-325))|0);
  var $455=((($452)+($454))|0);
  var $456=$X015;
  var $457=((($456)*(218))|0);
  var $458=((($455)+($457))|0);
  var $459=(($458)|0);
  var $460=((($459)+(512))|0);
  var $461=$460 >> 10;
  var $462=$2;
  var $463=__ZN4jpgd12DCT_Upsample8Matrix442atEii($462, 1, 0);
  HEAP32[(($463)>>2)]=$461;
  var $464=$X012;
  var $465=$2;
  var $466=__ZN4jpgd12DCT_Upsample8Matrix442atEii($465, 1, 1);
  HEAP32[(($466)>>2)]=$464;
  var $467=$X011;
  var $468=((($467)*(-75))|0);
  var $469=$X013;
  var $470=((($469)*(526))|0);
  var $471=((($468)+($470))|0);
  var $472=$X015;
  var $473=((($472)*(787))|0);
  var $474=((($471)+($473))|0);
  var $475=(($474)|0);
  var $476=((($475)+(512))|0);
  var $477=$476 >> 10;
  var $478=$2;
  var $479=__ZN4jpgd12DCT_Upsample8Matrix442atEii($478, 1, 2);
  HEAP32[(($479)>>2)]=$477;
  var $480=$2;
  var $481=__ZN4jpgd12DCT_Upsample8Matrix442atEii($480, 1, 3);
  HEAP32[(($481)>>2)]=0;
  var $482=$X021;
  var $483=((($482)*(928))|0);
  var $484=$X023;
  var $485=((($484)*(-325))|0);
  var $486=((($483)+($485))|0);
  var $487=$X025;
  var $488=((($487)*(218))|0);
  var $489=((($486)+($488))|0);
  var $490=(($489)|0);
  var $491=((($490)+(512))|0);
  var $492=$491 >> 10;
  var $493=$2;
  var $494=__ZN4jpgd12DCT_Upsample8Matrix442atEii($493, 2, 0);
  HEAP32[(($494)>>2)]=$492;
  var $495=$X022;
  var $496=$2;
  var $497=__ZN4jpgd12DCT_Upsample8Matrix442atEii($496, 2, 1);
  HEAP32[(($497)>>2)]=$495;
  var $498=$X021;
  var $499=((($498)*(-75))|0);
  var $500=$X023;
  var $501=((($500)*(526))|0);
  var $502=((($499)+($501))|0);
  var $503=$X025;
  var $504=((($503)*(787))|0);
  var $505=((($502)+($504))|0);
  var $506=(($505)|0);
  var $507=((($506)+(512))|0);
  var $508=$507 >> 10;
  var $509=$2;
  var $510=__ZN4jpgd12DCT_Upsample8Matrix442atEii($509, 2, 2);
  HEAP32[(($510)>>2)]=$508;
  var $511=$2;
  var $512=__ZN4jpgd12DCT_Upsample8Matrix442atEii($511, 2, 3);
  HEAP32[(($512)>>2)]=0;
  var $513=$X031;
  var $514=((($513)*(928))|0);
  var $515=$X033;
  var $516=((($515)*(-325))|0);
  var $517=((($514)+($516))|0);
  var $518=$X035;
  var $519=((($518)*(218))|0);
  var $520=((($517)+($519))|0);
  var $521=(($520)|0);
  var $522=((($521)+(512))|0);
  var $523=$522 >> 10;
  var $524=$2;
  var $525=__ZN4jpgd12DCT_Upsample8Matrix442atEii($524, 3, 0);
  HEAP32[(($525)>>2)]=$523;
  var $526=$X032;
  var $527=$2;
  var $528=__ZN4jpgd12DCT_Upsample8Matrix442atEii($527, 3, 1);
  HEAP32[(($528)>>2)]=$526;
  var $529=$X031;
  var $530=((($529)*(-75))|0);
  var $531=$X033;
  var $532=((($531)*(526))|0);
  var $533=((($530)+($532))|0);
  var $534=$X035;
  var $535=((($534)*(787))|0);
  var $536=((($533)+($535))|0);
  var $537=(($536)|0);
  var $538=((($537)+(512))|0);
  var $539=$538 >> 10;
  var $540=$2;
  var $541=__ZN4jpgd12DCT_Upsample8Matrix442atEii($540, 3, 2);
  HEAP32[(($541)>>2)]=$539;
  var $542=$2;
  var $543=__ZN4jpgd12DCT_Upsample8Matrix442atEii($542, 3, 3);
  HEAP32[(($543)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=$3;
  var $16=(($15+10)|0);
  var $17=HEAP16[(($16)>>1)];
  var $18=(($17 << 16) >> 16);
  var $19=((($18)*(218))|0);
  var $20=((($14)+($19))|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X100=$23;
  var $24=$3;
  var $25=(($24+18)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(928))|0);
  var $29=$3;
  var $30=(($29+22)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(-325))|0);
  var $34=((($28)+($33))|0);
  var $35=$3;
  var $36=(($35+26)|0);
  var $37=HEAP16[(($36)>>1)];
  var $38=(($37 << 16) >> 16);
  var $39=((($38)*(218))|0);
  var $40=((($34)+($39))|0);
  var $41=(($40)|0);
  var $42=((($41)+(512))|0);
  var $43=$42 >> 10;
  $X101=$43;
  var $44=$3;
  var $45=(($44+34)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(928))|0);
  var $49=$3;
  var $50=(($49+38)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(-325))|0);
  var $54=((($48)+($53))|0);
  var $55=$3;
  var $56=(($55+42)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  var $59=((($58)*(218))|0);
  var $60=((($54)+($59))|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X102=$63;
  var $64=$3;
  var $65=(($64+50)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  var $68=((($67)*(928))|0);
  var $69=$3;
  var $70=(($69+54)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(-325))|0);
  var $74=((($68)+($73))|0);
  var $75=$3;
  var $76=(($75+58)|0);
  var $77=HEAP16[(($76)>>1)];
  var $78=(($77 << 16) >> 16);
  var $79=((($78)*(218))|0);
  var $80=((($74)+($79))|0);
  var $81=(($80)|0);
  var $82=((($81)+(512))|0);
  var $83=$82 >> 10;
  $X103=$83;
  var $84=$3;
  var $85=(($84+66)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(928))|0);
  var $89=$3;
  var $90=(($89+70)|0);
  var $91=HEAP16[(($90)>>1)];
  var $92=(($91 << 16) >> 16);
  var $93=((($92)*(-325))|0);
  var $94=((($88)+($93))|0);
  var $95=$3;
  var $96=(($95+74)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  var $99=((($98)*(218))|0);
  var $100=((($94)+($99))|0);
  var $101=(($100)|0);
  var $102=((($101)+(512))|0);
  var $103=$102 >> 10;
  $X104=$103;
  var $104=$3;
  var $105=(($104+82)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(928))|0);
  var $109=$3;
  var $110=(($109+86)|0);
  var $111=HEAP16[(($110)>>1)];
  var $112=(($111 << 16) >> 16);
  var $113=((($112)*(-325))|0);
  var $114=((($108)+($113))|0);
  var $115=$3;
  var $116=(($115+90)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(218))|0);
  var $120=((($114)+($119))|0);
  var $121=(($120)|0);
  var $122=((($121)+(512))|0);
  var $123=$122 >> 10;
  $X105=$123;
  $X106=0;
  $X107=0;
  var $124=$3;
  var $125=(($124+4)|0);
  var $126=HEAP16[(($125)>>1)];
  var $127=(($126 << 16) >> 16);
  $X110=$127;
  var $128=$3;
  var $129=(($128+20)|0);
  var $130=HEAP16[(($129)>>1)];
  var $131=(($130 << 16) >> 16);
  $X111=$131;
  var $132=$3;
  var $133=(($132+36)|0);
  var $134=HEAP16[(($133)>>1)];
  var $135=(($134 << 16) >> 16);
  $X112=$135;
  var $136=$3;
  var $137=(($136+52)|0);
  var $138=HEAP16[(($137)>>1)];
  var $139=(($138 << 16) >> 16);
  $X113=$139;
  var $140=$3;
  var $141=(($140+68)|0);
  var $142=HEAP16[(($141)>>1)];
  var $143=(($142 << 16) >> 16);
  $X114=$143;
  var $144=$3;
  var $145=(($144+84)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  $X115=$147;
  $X116=0;
  $X117=0;
  var $148=$3;
  var $149=(($148+2)|0);
  var $150=HEAP16[(($149)>>1)];
  var $151=(($150 << 16) >> 16);
  var $152=((($151)*(-75))|0);
  var $153=$3;
  var $154=(($153+6)|0);
  var $155=HEAP16[(($154)>>1)];
  var $156=(($155 << 16) >> 16);
  var $157=((($156)*(526))|0);
  var $158=((($152)+($157))|0);
  var $159=$3;
  var $160=(($159+10)|0);
  var $161=HEAP16[(($160)>>1)];
  var $162=(($161 << 16) >> 16);
  var $163=((($162)*(787))|0);
  var $164=((($158)+($163))|0);
  var $165=(($164)|0);
  var $166=((($165)+(512))|0);
  var $167=$166 >> 10;
  $X120=$167;
  var $168=$3;
  var $169=(($168+18)|0);
  var $170=HEAP16[(($169)>>1)];
  var $171=(($170 << 16) >> 16);
  var $172=((($171)*(-75))|0);
  var $173=$3;
  var $174=(($173+22)|0);
  var $175=HEAP16[(($174)>>1)];
  var $176=(($175 << 16) >> 16);
  var $177=((($176)*(526))|0);
  var $178=((($172)+($177))|0);
  var $179=$3;
  var $180=(($179+26)|0);
  var $181=HEAP16[(($180)>>1)];
  var $182=(($181 << 16) >> 16);
  var $183=((($182)*(787))|0);
  var $184=((($178)+($183))|0);
  var $185=(($184)|0);
  var $186=((($185)+(512))|0);
  var $187=$186 >> 10;
  $X121=$187;
  var $188=$3;
  var $189=(($188+34)|0);
  var $190=HEAP16[(($189)>>1)];
  var $191=(($190 << 16) >> 16);
  var $192=((($191)*(-75))|0);
  var $193=$3;
  var $194=(($193+38)|0);
  var $195=HEAP16[(($194)>>1)];
  var $196=(($195 << 16) >> 16);
  var $197=((($196)*(526))|0);
  var $198=((($192)+($197))|0);
  var $199=$3;
  var $200=(($199+42)|0);
  var $201=HEAP16[(($200)>>1)];
  var $202=(($201 << 16) >> 16);
  var $203=((($202)*(787))|0);
  var $204=((($198)+($203))|0);
  var $205=(($204)|0);
  var $206=((($205)+(512))|0);
  var $207=$206 >> 10;
  $X122=$207;
  var $208=$3;
  var $209=(($208+50)|0);
  var $210=HEAP16[(($209)>>1)];
  var $211=(($210 << 16) >> 16);
  var $212=((($211)*(-75))|0);
  var $213=$3;
  var $214=(($213+54)|0);
  var $215=HEAP16[(($214)>>1)];
  var $216=(($215 << 16) >> 16);
  var $217=((($216)*(526))|0);
  var $218=((($212)+($217))|0);
  var $219=$3;
  var $220=(($219+58)|0);
  var $221=HEAP16[(($220)>>1)];
  var $222=(($221 << 16) >> 16);
  var $223=((($222)*(787))|0);
  var $224=((($218)+($223))|0);
  var $225=(($224)|0);
  var $226=((($225)+(512))|0);
  var $227=$226 >> 10;
  $X123=$227;
  var $228=$3;
  var $229=(($228+66)|0);
  var $230=HEAP16[(($229)>>1)];
  var $231=(($230 << 16) >> 16);
  var $232=((($231)*(-75))|0);
  var $233=$3;
  var $234=(($233+70)|0);
  var $235=HEAP16[(($234)>>1)];
  var $236=(($235 << 16) >> 16);
  var $237=((($236)*(526))|0);
  var $238=((($232)+($237))|0);
  var $239=$3;
  var $240=(($239+74)|0);
  var $241=HEAP16[(($240)>>1)];
  var $242=(($241 << 16) >> 16);
  var $243=((($242)*(787))|0);
  var $244=((($238)+($243))|0);
  var $245=(($244)|0);
  var $246=((($245)+(512))|0);
  var $247=$246 >> 10;
  $X124=$247;
  var $248=$3;
  var $249=(($248+82)|0);
  var $250=HEAP16[(($249)>>1)];
  var $251=(($250 << 16) >> 16);
  var $252=((($251)*(-75))|0);
  var $253=$3;
  var $254=(($253+86)|0);
  var $255=HEAP16[(($254)>>1)];
  var $256=(($255 << 16) >> 16);
  var $257=((($256)*(526))|0);
  var $258=((($252)+($257))|0);
  var $259=$3;
  var $260=(($259+90)|0);
  var $261=HEAP16[(($260)>>1)];
  var $262=(($261 << 16) >> 16);
  var $263=((($262)*(787))|0);
  var $264=((($258)+($263))|0);
  var $265=(($264)|0);
  var $266=((($265)+(512))|0);
  var $267=$266 >> 10;
  $X125=$267;
  $X126=0;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $268=$X100;
  var $269=$1;
  var $270=__ZN4jpgd12DCT_Upsample8Matrix442atEii($269, 0, 0);
  HEAP32[(($270)>>2)]=$268;
  var $271=$X101;
  var $272=((($271)*(426))|0);
  var $273=$X103;
  var $274=((($273)*(810))|0);
  var $275=((($272)+($274))|0);
  var $276=$X105;
  var $277=((($276)*(-360))|0);
  var $278=((($275)+($277))|0);
  var $279=(($278)|0);
  var $280=((($279)+(512))|0);
  var $281=$280 >> 10;
  var $282=$1;
  var $283=__ZN4jpgd12DCT_Upsample8Matrix442atEii($282, 0, 1);
  HEAP32[(($283)>>2)]=$281;
  var $284=$X104;
  var $285=$1;
  var $286=__ZN4jpgd12DCT_Upsample8Matrix442atEii($285, 0, 2);
  HEAP32[(($286)>>2)]=$284;
  var $287=$X101;
  var $288=((($287)*(23))|0);
  var $289=$X103;
  var $290=((($289)*(-99))|0);
  var $291=((($288)+($290))|0);
  var $292=$X105;
  var $293=((($292)*(502))|0);
  var $294=((($291)+($293))|0);
  var $295=(($294)|0);
  var $296=((($295)+(512))|0);
  var $297=$296 >> 10;
  var $298=$1;
  var $299=__ZN4jpgd12DCT_Upsample8Matrix442atEii($298, 0, 3);
  HEAP32[(($299)>>2)]=$297;
  var $300=$X110;
  var $301=$1;
  var $302=__ZN4jpgd12DCT_Upsample8Matrix442atEii($301, 1, 0);
  HEAP32[(($302)>>2)]=$300;
  var $303=$X111;
  var $304=((($303)*(426))|0);
  var $305=$X113;
  var $306=((($305)*(810))|0);
  var $307=((($304)+($306))|0);
  var $308=$X115;
  var $309=((($308)*(-360))|0);
  var $310=((($307)+($309))|0);
  var $311=(($310)|0);
  var $312=((($311)+(512))|0);
  var $313=$312 >> 10;
  var $314=$1;
  var $315=__ZN4jpgd12DCT_Upsample8Matrix442atEii($314, 1, 1);
  HEAP32[(($315)>>2)]=$313;
  var $316=$X114;
  var $317=$1;
  var $318=__ZN4jpgd12DCT_Upsample8Matrix442atEii($317, 1, 2);
  HEAP32[(($318)>>2)]=$316;
  var $319=$X111;
  var $320=((($319)*(23))|0);
  var $321=$X113;
  var $322=((($321)*(-99))|0);
  var $323=((($320)+($322))|0);
  var $324=$X115;
  var $325=((($324)*(502))|0);
  var $326=((($323)+($325))|0);
  var $327=(($326)|0);
  var $328=((($327)+(512))|0);
  var $329=$328 >> 10;
  var $330=$1;
  var $331=__ZN4jpgd12DCT_Upsample8Matrix442atEii($330, 1, 3);
  HEAP32[(($331)>>2)]=$329;
  var $332=$X120;
  var $333=$1;
  var $334=__ZN4jpgd12DCT_Upsample8Matrix442atEii($333, 2, 0);
  HEAP32[(($334)>>2)]=$332;
  var $335=$X121;
  var $336=((($335)*(426))|0);
  var $337=$X123;
  var $338=((($337)*(810))|0);
  var $339=((($336)+($338))|0);
  var $340=$X125;
  var $341=((($340)*(-360))|0);
  var $342=((($339)+($341))|0);
  var $343=(($342)|0);
  var $344=((($343)+(512))|0);
  var $345=$344 >> 10;
  var $346=$1;
  var $347=__ZN4jpgd12DCT_Upsample8Matrix442atEii($346, 2, 1);
  HEAP32[(($347)>>2)]=$345;
  var $348=$X124;
  var $349=$1;
  var $350=__ZN4jpgd12DCT_Upsample8Matrix442atEii($349, 2, 2);
  HEAP32[(($350)>>2)]=$348;
  var $351=$X121;
  var $352=((($351)*(23))|0);
  var $353=$X123;
  var $354=((($353)*(-99))|0);
  var $355=((($352)+($354))|0);
  var $356=$X125;
  var $357=((($356)*(502))|0);
  var $358=((($355)+($357))|0);
  var $359=(($358)|0);
  var $360=((($359)+(512))|0);
  var $361=$360 >> 10;
  var $362=$1;
  var $363=__ZN4jpgd12DCT_Upsample8Matrix442atEii($362, 2, 3);
  HEAP32[(($363)>>2)]=$361;
  var $364=$1;
  var $365=__ZN4jpgd12DCT_Upsample8Matrix442atEii($364, 3, 0);
  HEAP32[(($365)>>2)]=0;
  var $366=$1;
  var $367=__ZN4jpgd12DCT_Upsample8Matrix442atEii($366, 3, 1);
  HEAP32[(($367)>>2)]=0;
  var $368=$1;
  var $369=__ZN4jpgd12DCT_Upsample8Matrix442atEii($368, 3, 2);
  HEAP32[(($369)>>2)]=0;
  var $370=$1;
  var $371=__ZN4jpgd12DCT_Upsample8Matrix442atEii($370, 3, 3);
  HEAP32[(($371)>>2)]=0;
  var $372=$X101;
  var $373=((($372)*(928))|0);
  var $374=$X103;
  var $375=((($374)*(-325))|0);
  var $376=((($373)+($375))|0);
  var $377=$X105;
  var $378=((($377)*(218))|0);
  var $379=((($376)+($378))|0);
  var $380=(($379)|0);
  var $381=((($380)+(512))|0);
  var $382=$381 >> 10;
  var $383=$2;
  var $384=__ZN4jpgd12DCT_Upsample8Matrix442atEii($383, 0, 0);
  HEAP32[(($384)>>2)]=$382;
  var $385=$X102;
  var $386=$2;
  var $387=__ZN4jpgd12DCT_Upsample8Matrix442atEii($386, 0, 1);
  HEAP32[(($387)>>2)]=$385;
  var $388=$X101;
  var $389=((($388)*(-75))|0);
  var $390=$X103;
  var $391=((($390)*(526))|0);
  var $392=((($389)+($391))|0);
  var $393=$X105;
  var $394=((($393)*(787))|0);
  var $395=((($392)+($394))|0);
  var $396=(($395)|0);
  var $397=((($396)+(512))|0);
  var $398=$397 >> 10;
  var $399=$2;
  var $400=__ZN4jpgd12DCT_Upsample8Matrix442atEii($399, 0, 2);
  HEAP32[(($400)>>2)]=$398;
  var $401=$2;
  var $402=__ZN4jpgd12DCT_Upsample8Matrix442atEii($401, 0, 3);
  HEAP32[(($402)>>2)]=0;
  var $403=$X111;
  var $404=((($403)*(928))|0);
  var $405=$X113;
  var $406=((($405)*(-325))|0);
  var $407=((($404)+($406))|0);
  var $408=$X115;
  var $409=((($408)*(218))|0);
  var $410=((($407)+($409))|0);
  var $411=(($410)|0);
  var $412=((($411)+(512))|0);
  var $413=$412 >> 10;
  var $414=$2;
  var $415=__ZN4jpgd12DCT_Upsample8Matrix442atEii($414, 1, 0);
  HEAP32[(($415)>>2)]=$413;
  var $416=$X112;
  var $417=$2;
  var $418=__ZN4jpgd12DCT_Upsample8Matrix442atEii($417, 1, 1);
  HEAP32[(($418)>>2)]=$416;
  var $419=$X111;
  var $420=((($419)*(-75))|0);
  var $421=$X113;
  var $422=((($421)*(526))|0);
  var $423=((($420)+($422))|0);
  var $424=$X115;
  var $425=((($424)*(787))|0);
  var $426=((($423)+($425))|0);
  var $427=(($426)|0);
  var $428=((($427)+(512))|0);
  var $429=$428 >> 10;
  var $430=$2;
  var $431=__ZN4jpgd12DCT_Upsample8Matrix442atEii($430, 1, 2);
  HEAP32[(($431)>>2)]=$429;
  var $432=$2;
  var $433=__ZN4jpgd12DCT_Upsample8Matrix442atEii($432, 1, 3);
  HEAP32[(($433)>>2)]=0;
  var $434=$X121;
  var $435=((($434)*(928))|0);
  var $436=$X123;
  var $437=((($436)*(-325))|0);
  var $438=((($435)+($437))|0);
  var $439=$X125;
  var $440=((($439)*(218))|0);
  var $441=((($438)+($440))|0);
  var $442=(($441)|0);
  var $443=((($442)+(512))|0);
  var $444=$443 >> 10;
  var $445=$2;
  var $446=__ZN4jpgd12DCT_Upsample8Matrix442atEii($445, 2, 0);
  HEAP32[(($446)>>2)]=$444;
  var $447=$X122;
  var $448=$2;
  var $449=__ZN4jpgd12DCT_Upsample8Matrix442atEii($448, 2, 1);
  HEAP32[(($449)>>2)]=$447;
  var $450=$X121;
  var $451=((($450)*(-75))|0);
  var $452=$X123;
  var $453=((($452)*(526))|0);
  var $454=((($451)+($453))|0);
  var $455=$X125;
  var $456=((($455)*(787))|0);
  var $457=((($454)+($456))|0);
  var $458=(($457)|0);
  var $459=((($458)+(512))|0);
  var $460=$459 >> 10;
  var $461=$2;
  var $462=__ZN4jpgd12DCT_Upsample8Matrix442atEii($461, 2, 2);
  HEAP32[(($462)>>2)]=$460;
  var $463=$2;
  var $464=__ZN4jpgd12DCT_Upsample8Matrix442atEii($463, 2, 3);
  HEAP32[(($464)>>2)]=0;
  var $465=$2;
  var $466=__ZN4jpgd12DCT_Upsample8Matrix442atEii($465, 3, 0);
  HEAP32[(($466)>>2)]=0;
  var $467=$2;
  var $468=__ZN4jpgd12DCT_Upsample8Matrix442atEii($467, 3, 1);
  HEAP32[(($468)>>2)]=0;
  var $469=$2;
  var $470=__ZN4jpgd12DCT_Upsample8Matrix442atEii($469, 3, 2);
  HEAP32[(($470)>>2)]=0;
  var $471=$2;
  var $472=__ZN4jpgd12DCT_Upsample8Matrix442atEii($471, 3, 3);
  HEAP32[(($472)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  var $24=$3;
  var $25=(($24+80)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  $X005=$27;
  var $28=$3;
  var $29=(($28+96)|0);
  var $30=HEAP16[(($29)>>1)];
  var $31=(($30 << 16) >> 16);
  $X006=$31;
  $X007=0;
  var $32=$3;
  var $33=(($32+2)|0);
  var $34=HEAP16[(($33)>>1)];
  var $35=(($34 << 16) >> 16);
  var $36=((($35)*(426))|0);
  var $37=$3;
  var $38=(($37+6)|0);
  var $39=HEAP16[(($38)>>1)];
  var $40=(($39 << 16) >> 16);
  var $41=((($40)*(810))|0);
  var $42=((($36)+($41))|0);
  var $43=$3;
  var $44=(($43+10)|0);
  var $45=HEAP16[(($44)>>1)];
  var $46=(($45 << 16) >> 16);
  var $47=((($46)*(-360))|0);
  var $48=((($42)+($47))|0);
  var $49=(($48)|0);
  var $50=((($49)+(512))|0);
  var $51=$50 >> 10;
  $X010=$51;
  var $52=$3;
  var $53=(($52+18)|0);
  var $54=HEAP16[(($53)>>1)];
  var $55=(($54 << 16) >> 16);
  var $56=((($55)*(426))|0);
  var $57=$3;
  var $58=(($57+22)|0);
  var $59=HEAP16[(($58)>>1)];
  var $60=(($59 << 16) >> 16);
  var $61=((($60)*(810))|0);
  var $62=((($56)+($61))|0);
  var $63=$3;
  var $64=(($63+26)|0);
  var $65=HEAP16[(($64)>>1)];
  var $66=(($65 << 16) >> 16);
  var $67=((($66)*(-360))|0);
  var $68=((($62)+($67))|0);
  var $69=(($68)|0);
  var $70=((($69)+(512))|0);
  var $71=$70 >> 10;
  $X011=$71;
  var $72=$3;
  var $73=(($72+34)|0);
  var $74=HEAP16[(($73)>>1)];
  var $75=(($74 << 16) >> 16);
  var $76=((($75)*(426))|0);
  var $77=$3;
  var $78=(($77+38)|0);
  var $79=HEAP16[(($78)>>1)];
  var $80=(($79 << 16) >> 16);
  var $81=((($80)*(810))|0);
  var $82=((($76)+($81))|0);
  var $83=$3;
  var $84=(($83+42)|0);
  var $85=HEAP16[(($84)>>1)];
  var $86=(($85 << 16) >> 16);
  var $87=((($86)*(-360))|0);
  var $88=((($82)+($87))|0);
  var $89=(($88)|0);
  var $90=((($89)+(512))|0);
  var $91=$90 >> 10;
  $X012=$91;
  var $92=$3;
  var $93=(($92+50)|0);
  var $94=HEAP16[(($93)>>1)];
  var $95=(($94 << 16) >> 16);
  var $96=((($95)*(426))|0);
  var $97=$3;
  var $98=(($97+54)|0);
  var $99=HEAP16[(($98)>>1)];
  var $100=(($99 << 16) >> 16);
  var $101=((($100)*(810))|0);
  var $102=((($96)+($101))|0);
  var $103=$3;
  var $104=(($103+58)|0);
  var $105=HEAP16[(($104)>>1)];
  var $106=(($105 << 16) >> 16);
  var $107=((($106)*(-360))|0);
  var $108=((($102)+($107))|0);
  var $109=(($108)|0);
  var $110=((($109)+(512))|0);
  var $111=$110 >> 10;
  $X013=$111;
  var $112=$3;
  var $113=(($112+66)|0);
  var $114=HEAP16[(($113)>>1)];
  var $115=(($114 << 16) >> 16);
  var $116=((($115)*(426))|0);
  var $117=$3;
  var $118=(($117+70)|0);
  var $119=HEAP16[(($118)>>1)];
  var $120=(($119 << 16) >> 16);
  var $121=((($120)*(810))|0);
  var $122=((($116)+($121))|0);
  var $123=$3;
  var $124=(($123+74)|0);
  var $125=HEAP16[(($124)>>1)];
  var $126=(($125 << 16) >> 16);
  var $127=((($126)*(-360))|0);
  var $128=((($122)+($127))|0);
  var $129=(($128)|0);
  var $130=((($129)+(512))|0);
  var $131=$130 >> 10;
  $X014=$131;
  var $132=$3;
  var $133=(($132+82)|0);
  var $134=HEAP16[(($133)>>1)];
  var $135=(($134 << 16) >> 16);
  var $136=((($135)*(426))|0);
  var $137=$3;
  var $138=(($137+86)|0);
  var $139=HEAP16[(($138)>>1)];
  var $140=(($139 << 16) >> 16);
  var $141=((($140)*(810))|0);
  var $142=((($136)+($141))|0);
  var $143=$3;
  var $144=(($143+90)|0);
  var $145=HEAP16[(($144)>>1)];
  var $146=(($145 << 16) >> 16);
  var $147=((($146)*(-360))|0);
  var $148=((($142)+($147))|0);
  var $149=(($148)|0);
  var $150=((($149)+(512))|0);
  var $151=$150 >> 10;
  $X015=$151;
  var $152=$3;
  var $153=(($152+98)|0);
  var $154=HEAP16[(($153)>>1)];
  var $155=(($154 << 16) >> 16);
  var $156=((($155)*(426))|0);
  var $157=$3;
  var $158=(($157+102)|0);
  var $159=HEAP16[(($158)>>1)];
  var $160=(($159 << 16) >> 16);
  var $161=((($160)*(810))|0);
  var $162=((($156)+($161))|0);
  var $163=$3;
  var $164=(($163+106)|0);
  var $165=HEAP16[(($164)>>1)];
  var $166=(($165 << 16) >> 16);
  var $167=((($166)*(-360))|0);
  var $168=((($162)+($167))|0);
  var $169=(($168)|0);
  var $170=((($169)+(512))|0);
  var $171=$170 >> 10;
  $X016=$171;
  $X017=0;
  var $172=$3;
  var $173=(($172+8)|0);
  var $174=HEAP16[(($173)>>1)];
  var $175=(($174 << 16) >> 16);
  $X020=$175;
  var $176=$3;
  var $177=(($176+24)|0);
  var $178=HEAP16[(($177)>>1)];
  var $179=(($178 << 16) >> 16);
  $X021=$179;
  var $180=$3;
  var $181=(($180+40)|0);
  var $182=HEAP16[(($181)>>1)];
  var $183=(($182 << 16) >> 16);
  $X022=$183;
  var $184=$3;
  var $185=(($184+56)|0);
  var $186=HEAP16[(($185)>>1)];
  var $187=(($186 << 16) >> 16);
  $X023=$187;
  var $188=$3;
  var $189=(($188+72)|0);
  var $190=HEAP16[(($189)>>1)];
  var $191=(($190 << 16) >> 16);
  $X024=$191;
  var $192=$3;
  var $193=(($192+88)|0);
  var $194=HEAP16[(($193)>>1)];
  var $195=(($194 << 16) >> 16);
  $X025=$195;
  var $196=$3;
  var $197=(($196+104)|0);
  var $198=HEAP16[(($197)>>1)];
  var $199=(($198 << 16) >> 16);
  $X026=$199;
  $X027=0;
  var $200=$3;
  var $201=(($200+2)|0);
  var $202=HEAP16[(($201)>>1)];
  var $203=(($202 << 16) >> 16);
  var $204=((($203)*(23))|0);
  var $205=$3;
  var $206=(($205+6)|0);
  var $207=HEAP16[(($206)>>1)];
  var $208=(($207 << 16) >> 16);
  var $209=((($208)*(-99))|0);
  var $210=((($204)+($209))|0);
  var $211=$3;
  var $212=(($211+10)|0);
  var $213=HEAP16[(($212)>>1)];
  var $214=(($213 << 16) >> 16);
  var $215=((($214)*(502))|0);
  var $216=((($210)+($215))|0);
  var $217=(($216)|0);
  var $218=((($217)+(512))|0);
  var $219=$218 >> 10;
  $X030=$219;
  var $220=$3;
  var $221=(($220+18)|0);
  var $222=HEAP16[(($221)>>1)];
  var $223=(($222 << 16) >> 16);
  var $224=((($223)*(23))|0);
  var $225=$3;
  var $226=(($225+22)|0);
  var $227=HEAP16[(($226)>>1)];
  var $228=(($227 << 16) >> 16);
  var $229=((($228)*(-99))|0);
  var $230=((($224)+($229))|0);
  var $231=$3;
  var $232=(($231+26)|0);
  var $233=HEAP16[(($232)>>1)];
  var $234=(($233 << 16) >> 16);
  var $235=((($234)*(502))|0);
  var $236=((($230)+($235))|0);
  var $237=(($236)|0);
  var $238=((($237)+(512))|0);
  var $239=$238 >> 10;
  $X031=$239;
  var $240=$3;
  var $241=(($240+34)|0);
  var $242=HEAP16[(($241)>>1)];
  var $243=(($242 << 16) >> 16);
  var $244=((($243)*(23))|0);
  var $245=$3;
  var $246=(($245+38)|0);
  var $247=HEAP16[(($246)>>1)];
  var $248=(($247 << 16) >> 16);
  var $249=((($248)*(-99))|0);
  var $250=((($244)+($249))|0);
  var $251=$3;
  var $252=(($251+42)|0);
  var $253=HEAP16[(($252)>>1)];
  var $254=(($253 << 16) >> 16);
  var $255=((($254)*(502))|0);
  var $256=((($250)+($255))|0);
  var $257=(($256)|0);
  var $258=((($257)+(512))|0);
  var $259=$258 >> 10;
  $X032=$259;
  var $260=$3;
  var $261=(($260+50)|0);
  var $262=HEAP16[(($261)>>1)];
  var $263=(($262 << 16) >> 16);
  var $264=((($263)*(23))|0);
  var $265=$3;
  var $266=(($265+54)|0);
  var $267=HEAP16[(($266)>>1)];
  var $268=(($267 << 16) >> 16);
  var $269=((($268)*(-99))|0);
  var $270=((($264)+($269))|0);
  var $271=$3;
  var $272=(($271+58)|0);
  var $273=HEAP16[(($272)>>1)];
  var $274=(($273 << 16) >> 16);
  var $275=((($274)*(502))|0);
  var $276=((($270)+($275))|0);
  var $277=(($276)|0);
  var $278=((($277)+(512))|0);
  var $279=$278 >> 10;
  $X033=$279;
  var $280=$3;
  var $281=(($280+66)|0);
  var $282=HEAP16[(($281)>>1)];
  var $283=(($282 << 16) >> 16);
  var $284=((($283)*(23))|0);
  var $285=$3;
  var $286=(($285+70)|0);
  var $287=HEAP16[(($286)>>1)];
  var $288=(($287 << 16) >> 16);
  var $289=((($288)*(-99))|0);
  var $290=((($284)+($289))|0);
  var $291=$3;
  var $292=(($291+74)|0);
  var $293=HEAP16[(($292)>>1)];
  var $294=(($293 << 16) >> 16);
  var $295=((($294)*(502))|0);
  var $296=((($290)+($295))|0);
  var $297=(($296)|0);
  var $298=((($297)+(512))|0);
  var $299=$298 >> 10;
  $X034=$299;
  var $300=$3;
  var $301=(($300+82)|0);
  var $302=HEAP16[(($301)>>1)];
  var $303=(($302 << 16) >> 16);
  var $304=((($303)*(23))|0);
  var $305=$3;
  var $306=(($305+86)|0);
  var $307=HEAP16[(($306)>>1)];
  var $308=(($307 << 16) >> 16);
  var $309=((($308)*(-99))|0);
  var $310=((($304)+($309))|0);
  var $311=$3;
  var $312=(($311+90)|0);
  var $313=HEAP16[(($312)>>1)];
  var $314=(($313 << 16) >> 16);
  var $315=((($314)*(502))|0);
  var $316=((($310)+($315))|0);
  var $317=(($316)|0);
  var $318=((($317)+(512))|0);
  var $319=$318 >> 10;
  $X035=$319;
  var $320=$3;
  var $321=(($320+98)|0);
  var $322=HEAP16[(($321)>>1)];
  var $323=(($322 << 16) >> 16);
  var $324=((($323)*(23))|0);
  var $325=$3;
  var $326=(($325+102)|0);
  var $327=HEAP16[(($326)>>1)];
  var $328=(($327 << 16) >> 16);
  var $329=((($328)*(-99))|0);
  var $330=((($324)+($329))|0);
  var $331=$3;
  var $332=(($331+106)|0);
  var $333=HEAP16[(($332)>>1)];
  var $334=(($333 << 16) >> 16);
  var $335=((($334)*(502))|0);
  var $336=((($330)+($335))|0);
  var $337=(($336)|0);
  var $338=((($337)+(512))|0);
  var $339=$338 >> 10;
  $X036=$339;
  $X037=0;
  var $340=$X000;
  var $341=$1;
  var $342=__ZN4jpgd12DCT_Upsample8Matrix442atEii($341, 0, 0);
  HEAP32[(($342)>>2)]=$340;
  var $343=$X001;
  var $344=((($343)*(426))|0);
  var $345=$X003;
  var $346=((($345)*(810))|0);
  var $347=((($344)+($346))|0);
  var $348=$X005;
  var $349=((($348)*(-360))|0);
  var $350=((($347)+($349))|0);
  var $351=(($350)|0);
  var $352=((($351)+(512))|0);
  var $353=$352 >> 10;
  var $354=$1;
  var $355=__ZN4jpgd12DCT_Upsample8Matrix442atEii($354, 0, 1);
  HEAP32[(($355)>>2)]=$353;
  var $356=$X004;
  var $357=$1;
  var $358=__ZN4jpgd12DCT_Upsample8Matrix442atEii($357, 0, 2);
  HEAP32[(($358)>>2)]=$356;
  var $359=$X001;
  var $360=((($359)*(23))|0);
  var $361=$X003;
  var $362=((($361)*(-99))|0);
  var $363=((($360)+($362))|0);
  var $364=$X005;
  var $365=((($364)*(502))|0);
  var $366=((($363)+($365))|0);
  var $367=(($366)|0);
  var $368=((($367)+(512))|0);
  var $369=$368 >> 10;
  var $370=$1;
  var $371=__ZN4jpgd12DCT_Upsample8Matrix442atEii($370, 0, 3);
  HEAP32[(($371)>>2)]=$369;
  var $372=$X010;
  var $373=$1;
  var $374=__ZN4jpgd12DCT_Upsample8Matrix442atEii($373, 1, 0);
  HEAP32[(($374)>>2)]=$372;
  var $375=$X011;
  var $376=((($375)*(426))|0);
  var $377=$X013;
  var $378=((($377)*(810))|0);
  var $379=((($376)+($378))|0);
  var $380=$X015;
  var $381=((($380)*(-360))|0);
  var $382=((($379)+($381))|0);
  var $383=(($382)|0);
  var $384=((($383)+(512))|0);
  var $385=$384 >> 10;
  var $386=$1;
  var $387=__ZN4jpgd12DCT_Upsample8Matrix442atEii($386, 1, 1);
  HEAP32[(($387)>>2)]=$385;
  var $388=$X014;
  var $389=$1;
  var $390=__ZN4jpgd12DCT_Upsample8Matrix442atEii($389, 1, 2);
  HEAP32[(($390)>>2)]=$388;
  var $391=$X011;
  var $392=((($391)*(23))|0);
  var $393=$X013;
  var $394=((($393)*(-99))|0);
  var $395=((($392)+($394))|0);
  var $396=$X015;
  var $397=((($396)*(502))|0);
  var $398=((($395)+($397))|0);
  var $399=(($398)|0);
  var $400=((($399)+(512))|0);
  var $401=$400 >> 10;
  var $402=$1;
  var $403=__ZN4jpgd12DCT_Upsample8Matrix442atEii($402, 1, 3);
  HEAP32[(($403)>>2)]=$401;
  var $404=$X020;
  var $405=$1;
  var $406=__ZN4jpgd12DCT_Upsample8Matrix442atEii($405, 2, 0);
  HEAP32[(($406)>>2)]=$404;
  var $407=$X021;
  var $408=((($407)*(426))|0);
  var $409=$X023;
  var $410=((($409)*(810))|0);
  var $411=((($408)+($410))|0);
  var $412=$X025;
  var $413=((($412)*(-360))|0);
  var $414=((($411)+($413))|0);
  var $415=(($414)|0);
  var $416=((($415)+(512))|0);
  var $417=$416 >> 10;
  var $418=$1;
  var $419=__ZN4jpgd12DCT_Upsample8Matrix442atEii($418, 2, 1);
  HEAP32[(($419)>>2)]=$417;
  var $420=$X024;
  var $421=$1;
  var $422=__ZN4jpgd12DCT_Upsample8Matrix442atEii($421, 2, 2);
  HEAP32[(($422)>>2)]=$420;
  var $423=$X021;
  var $424=((($423)*(23))|0);
  var $425=$X023;
  var $426=((($425)*(-99))|0);
  var $427=((($424)+($426))|0);
  var $428=$X025;
  var $429=((($428)*(502))|0);
  var $430=((($427)+($429))|0);
  var $431=(($430)|0);
  var $432=((($431)+(512))|0);
  var $433=$432 >> 10;
  var $434=$1;
  var $435=__ZN4jpgd12DCT_Upsample8Matrix442atEii($434, 2, 3);
  HEAP32[(($435)>>2)]=$433;
  var $436=$X030;
  var $437=$1;
  var $438=__ZN4jpgd12DCT_Upsample8Matrix442atEii($437, 3, 0);
  HEAP32[(($438)>>2)]=$436;
  var $439=$X031;
  var $440=((($439)*(426))|0);
  var $441=$X033;
  var $442=((($441)*(810))|0);
  var $443=((($440)+($442))|0);
  var $444=$X035;
  var $445=((($444)*(-360))|0);
  var $446=((($443)+($445))|0);
  var $447=(($446)|0);
  var $448=((($447)+(512))|0);
  var $449=$448 >> 10;
  var $450=$1;
  var $451=__ZN4jpgd12DCT_Upsample8Matrix442atEii($450, 3, 1);
  HEAP32[(($451)>>2)]=$449;
  var $452=$X034;
  var $453=$1;
  var $454=__ZN4jpgd12DCT_Upsample8Matrix442atEii($453, 3, 2);
  HEAP32[(($454)>>2)]=$452;
  var $455=$X031;
  var $456=((($455)*(23))|0);
  var $457=$X033;
  var $458=((($457)*(-99))|0);
  var $459=((($456)+($458))|0);
  var $460=$X035;
  var $461=((($460)*(502))|0);
  var $462=((($459)+($461))|0);
  var $463=(($462)|0);
  var $464=((($463)+(512))|0);
  var $465=$464 >> 10;
  var $466=$1;
  var $467=__ZN4jpgd12DCT_Upsample8Matrix442atEii($466, 3, 3);
  HEAP32[(($467)>>2)]=$465;
  var $468=$X001;
  var $469=((($468)*(928))|0);
  var $470=$X003;
  var $471=((($470)*(-325))|0);
  var $472=((($469)+($471))|0);
  var $473=$X005;
  var $474=((($473)*(218))|0);
  var $475=((($472)+($474))|0);
  var $476=(($475)|0);
  var $477=((($476)+(512))|0);
  var $478=$477 >> 10;
  var $479=$2;
  var $480=__ZN4jpgd12DCT_Upsample8Matrix442atEii($479, 0, 0);
  HEAP32[(($480)>>2)]=$478;
  var $481=$X002;
  var $482=$2;
  var $483=__ZN4jpgd12DCT_Upsample8Matrix442atEii($482, 0, 1);
  HEAP32[(($483)>>2)]=$481;
  var $484=$X001;
  var $485=((($484)*(-75))|0);
  var $486=$X003;
  var $487=((($486)*(526))|0);
  var $488=((($485)+($487))|0);
  var $489=$X005;
  var $490=((($489)*(787))|0);
  var $491=((($488)+($490))|0);
  var $492=(($491)|0);
  var $493=((($492)+(512))|0);
  var $494=$493 >> 10;
  var $495=$2;
  var $496=__ZN4jpgd12DCT_Upsample8Matrix442atEii($495, 0, 2);
  HEAP32[(($496)>>2)]=$494;
  var $497=$X006;
  var $498=$2;
  var $499=__ZN4jpgd12DCT_Upsample8Matrix442atEii($498, 0, 3);
  HEAP32[(($499)>>2)]=$497;
  var $500=$X011;
  var $501=((($500)*(928))|0);
  var $502=$X013;
  var $503=((($502)*(-325))|0);
  var $504=((($501)+($503))|0);
  var $505=$X015;
  var $506=((($505)*(218))|0);
  var $507=((($504)+($506))|0);
  var $508=(($507)|0);
  var $509=((($508)+(512))|0);
  var $510=$509 >> 10;
  var $511=$2;
  var $512=__ZN4jpgd12DCT_Upsample8Matrix442atEii($511, 1, 0);
  HEAP32[(($512)>>2)]=$510;
  var $513=$X012;
  var $514=$2;
  var $515=__ZN4jpgd12DCT_Upsample8Matrix442atEii($514, 1, 1);
  HEAP32[(($515)>>2)]=$513;
  var $516=$X011;
  var $517=((($516)*(-75))|0);
  var $518=$X013;
  var $519=((($518)*(526))|0);
  var $520=((($517)+($519))|0);
  var $521=$X015;
  var $522=((($521)*(787))|0);
  var $523=((($520)+($522))|0);
  var $524=(($523)|0);
  var $525=((($524)+(512))|0);
  var $526=$525 >> 10;
  var $527=$2;
  var $528=__ZN4jpgd12DCT_Upsample8Matrix442atEii($527, 1, 2);
  HEAP32[(($528)>>2)]=$526;
  var $529=$X016;
  var $530=$2;
  var $531=__ZN4jpgd12DCT_Upsample8Matrix442atEii($530, 1, 3);
  HEAP32[(($531)>>2)]=$529;
  var $532=$X021;
  var $533=((($532)*(928))|0);
  var $534=$X023;
  var $535=((($534)*(-325))|0);
  var $536=((($533)+($535))|0);
  var $537=$X025;
  var $538=((($537)*(218))|0);
  var $539=((($536)+($538))|0);
  var $540=(($539)|0);
  var $541=((($540)+(512))|0);
  var $542=$541 >> 10;
  var $543=$2;
  var $544=__ZN4jpgd12DCT_Upsample8Matrix442atEii($543, 2, 0);
  HEAP32[(($544)>>2)]=$542;
  var $545=$X022;
  var $546=$2;
  var $547=__ZN4jpgd12DCT_Upsample8Matrix442atEii($546, 2, 1);
  HEAP32[(($547)>>2)]=$545;
  var $548=$X021;
  var $549=((($548)*(-75))|0);
  var $550=$X023;
  var $551=((($550)*(526))|0);
  var $552=((($549)+($551))|0);
  var $553=$X025;
  var $554=((($553)*(787))|0);
  var $555=((($552)+($554))|0);
  var $556=(($555)|0);
  var $557=((($556)+(512))|0);
  var $558=$557 >> 10;
  var $559=$2;
  var $560=__ZN4jpgd12DCT_Upsample8Matrix442atEii($559, 2, 2);
  HEAP32[(($560)>>2)]=$558;
  var $561=$X026;
  var $562=$2;
  var $563=__ZN4jpgd12DCT_Upsample8Matrix442atEii($562, 2, 3);
  HEAP32[(($563)>>2)]=$561;
  var $564=$X031;
  var $565=((($564)*(928))|0);
  var $566=$X033;
  var $567=((($566)*(-325))|0);
  var $568=((($565)+($567))|0);
  var $569=$X035;
  var $570=((($569)*(218))|0);
  var $571=((($568)+($570))|0);
  var $572=(($571)|0);
  var $573=((($572)+(512))|0);
  var $574=$573 >> 10;
  var $575=$2;
  var $576=__ZN4jpgd12DCT_Upsample8Matrix442atEii($575, 3, 0);
  HEAP32[(($576)>>2)]=$574;
  var $577=$X032;
  var $578=$2;
  var $579=__ZN4jpgd12DCT_Upsample8Matrix442atEii($578, 3, 1);
  HEAP32[(($579)>>2)]=$577;
  var $580=$X031;
  var $581=((($580)*(-75))|0);
  var $582=$X033;
  var $583=((($582)*(526))|0);
  var $584=((($581)+($583))|0);
  var $585=$X035;
  var $586=((($585)*(787))|0);
  var $587=((($584)+($586))|0);
  var $588=(($587)|0);
  var $589=((($588)+(512))|0);
  var $590=$589 >> 10;
  var $591=$2;
  var $592=__ZN4jpgd12DCT_Upsample8Matrix442atEii($591, 3, 2);
  HEAP32[(($592)>>2)]=$590;
  var $593=$X036;
  var $594=$2;
  var $595=__ZN4jpgd12DCT_Upsample8Matrix442atEii($594, 3, 3);
  HEAP32[(($595)>>2)]=$593;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=$3;
  var $16=(($15+10)|0);
  var $17=HEAP16[(($16)>>1)];
  var $18=(($17 << 16) >> 16);
  var $19=((($18)*(218))|0);
  var $20=((($14)+($19))|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X100=$23;
  var $24=$3;
  var $25=(($24+18)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(928))|0);
  var $29=$3;
  var $30=(($29+22)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(-325))|0);
  var $34=((($28)+($33))|0);
  var $35=$3;
  var $36=(($35+26)|0);
  var $37=HEAP16[(($36)>>1)];
  var $38=(($37 << 16) >> 16);
  var $39=((($38)*(218))|0);
  var $40=((($34)+($39))|0);
  var $41=(($40)|0);
  var $42=((($41)+(512))|0);
  var $43=$42 >> 10;
  $X101=$43;
  var $44=$3;
  var $45=(($44+34)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(928))|0);
  var $49=$3;
  var $50=(($49+38)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(-325))|0);
  var $54=((($48)+($53))|0);
  var $55=$3;
  var $56=(($55+42)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  var $59=((($58)*(218))|0);
  var $60=((($54)+($59))|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X102=$63;
  var $64=$3;
  var $65=(($64+50)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  var $68=((($67)*(928))|0);
  var $69=$3;
  var $70=(($69+54)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(-325))|0);
  var $74=((($68)+($73))|0);
  var $75=$3;
  var $76=(($75+58)|0);
  var $77=HEAP16[(($76)>>1)];
  var $78=(($77 << 16) >> 16);
  var $79=((($78)*(218))|0);
  var $80=((($74)+($79))|0);
  var $81=(($80)|0);
  var $82=((($81)+(512))|0);
  var $83=$82 >> 10;
  $X103=$83;
  var $84=$3;
  var $85=(($84+66)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(928))|0);
  var $89=$3;
  var $90=(($89+70)|0);
  var $91=HEAP16[(($90)>>1)];
  var $92=(($91 << 16) >> 16);
  var $93=((($92)*(-325))|0);
  var $94=((($88)+($93))|0);
  var $95=$3;
  var $96=(($95+74)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  var $99=((($98)*(218))|0);
  var $100=((($94)+($99))|0);
  var $101=(($100)|0);
  var $102=((($101)+(512))|0);
  var $103=$102 >> 10;
  $X104=$103;
  var $104=$3;
  var $105=(($104+82)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(928))|0);
  var $109=$3;
  var $110=(($109+86)|0);
  var $111=HEAP16[(($110)>>1)];
  var $112=(($111 << 16) >> 16);
  var $113=((($112)*(-325))|0);
  var $114=((($108)+($113))|0);
  var $115=$3;
  var $116=(($115+90)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(218))|0);
  var $120=((($114)+($119))|0);
  var $121=(($120)|0);
  var $122=((($121)+(512))|0);
  var $123=$122 >> 10;
  $X105=$123;
  var $124=$3;
  var $125=(($124+98)|0);
  var $126=HEAP16[(($125)>>1)];
  var $127=(($126 << 16) >> 16);
  var $128=((($127)*(928))|0);
  var $129=$3;
  var $130=(($129+102)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(-325))|0);
  var $134=((($128)+($133))|0);
  var $135=$3;
  var $136=(($135+106)|0);
  var $137=HEAP16[(($136)>>1)];
  var $138=(($137 << 16) >> 16);
  var $139=((($138)*(218))|0);
  var $140=((($134)+($139))|0);
  var $141=(($140)|0);
  var $142=((($141)+(512))|0);
  var $143=$142 >> 10;
  $X106=$143;
  $X107=0;
  var $144=$3;
  var $145=(($144+4)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  $X110=$147;
  var $148=$3;
  var $149=(($148+20)|0);
  var $150=HEAP16[(($149)>>1)];
  var $151=(($150 << 16) >> 16);
  $X111=$151;
  var $152=$3;
  var $153=(($152+36)|0);
  var $154=HEAP16[(($153)>>1)];
  var $155=(($154 << 16) >> 16);
  $X112=$155;
  var $156=$3;
  var $157=(($156+52)|0);
  var $158=HEAP16[(($157)>>1)];
  var $159=(($158 << 16) >> 16);
  $X113=$159;
  var $160=$3;
  var $161=(($160+68)|0);
  var $162=HEAP16[(($161)>>1)];
  var $163=(($162 << 16) >> 16);
  $X114=$163;
  var $164=$3;
  var $165=(($164+84)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  $X115=$167;
  var $168=$3;
  var $169=(($168+100)|0);
  var $170=HEAP16[(($169)>>1)];
  var $171=(($170 << 16) >> 16);
  $X116=$171;
  $X117=0;
  var $172=$3;
  var $173=(($172+2)|0);
  var $174=HEAP16[(($173)>>1)];
  var $175=(($174 << 16) >> 16);
  var $176=((($175)*(-75))|0);
  var $177=$3;
  var $178=(($177+6)|0);
  var $179=HEAP16[(($178)>>1)];
  var $180=(($179 << 16) >> 16);
  var $181=((($180)*(526))|0);
  var $182=((($176)+($181))|0);
  var $183=$3;
  var $184=(($183+10)|0);
  var $185=HEAP16[(($184)>>1)];
  var $186=(($185 << 16) >> 16);
  var $187=((($186)*(787))|0);
  var $188=((($182)+($187))|0);
  var $189=(($188)|0);
  var $190=((($189)+(512))|0);
  var $191=$190 >> 10;
  $X120=$191;
  var $192=$3;
  var $193=(($192+18)|0);
  var $194=HEAP16[(($193)>>1)];
  var $195=(($194 << 16) >> 16);
  var $196=((($195)*(-75))|0);
  var $197=$3;
  var $198=(($197+22)|0);
  var $199=HEAP16[(($198)>>1)];
  var $200=(($199 << 16) >> 16);
  var $201=((($200)*(526))|0);
  var $202=((($196)+($201))|0);
  var $203=$3;
  var $204=(($203+26)|0);
  var $205=HEAP16[(($204)>>1)];
  var $206=(($205 << 16) >> 16);
  var $207=((($206)*(787))|0);
  var $208=((($202)+($207))|0);
  var $209=(($208)|0);
  var $210=((($209)+(512))|0);
  var $211=$210 >> 10;
  $X121=$211;
  var $212=$3;
  var $213=(($212+34)|0);
  var $214=HEAP16[(($213)>>1)];
  var $215=(($214 << 16) >> 16);
  var $216=((($215)*(-75))|0);
  var $217=$3;
  var $218=(($217+38)|0);
  var $219=HEAP16[(($218)>>1)];
  var $220=(($219 << 16) >> 16);
  var $221=((($220)*(526))|0);
  var $222=((($216)+($221))|0);
  var $223=$3;
  var $224=(($223+42)|0);
  var $225=HEAP16[(($224)>>1)];
  var $226=(($225 << 16) >> 16);
  var $227=((($226)*(787))|0);
  var $228=((($222)+($227))|0);
  var $229=(($228)|0);
  var $230=((($229)+(512))|0);
  var $231=$230 >> 10;
  $X122=$231;
  var $232=$3;
  var $233=(($232+50)|0);
  var $234=HEAP16[(($233)>>1)];
  var $235=(($234 << 16) >> 16);
  var $236=((($235)*(-75))|0);
  var $237=$3;
  var $238=(($237+54)|0);
  var $239=HEAP16[(($238)>>1)];
  var $240=(($239 << 16) >> 16);
  var $241=((($240)*(526))|0);
  var $242=((($236)+($241))|0);
  var $243=$3;
  var $244=(($243+58)|0);
  var $245=HEAP16[(($244)>>1)];
  var $246=(($245 << 16) >> 16);
  var $247=((($246)*(787))|0);
  var $248=((($242)+($247))|0);
  var $249=(($248)|0);
  var $250=((($249)+(512))|0);
  var $251=$250 >> 10;
  $X123=$251;
  var $252=$3;
  var $253=(($252+66)|0);
  var $254=HEAP16[(($253)>>1)];
  var $255=(($254 << 16) >> 16);
  var $256=((($255)*(-75))|0);
  var $257=$3;
  var $258=(($257+70)|0);
  var $259=HEAP16[(($258)>>1)];
  var $260=(($259 << 16) >> 16);
  var $261=((($260)*(526))|0);
  var $262=((($256)+($261))|0);
  var $263=$3;
  var $264=(($263+74)|0);
  var $265=HEAP16[(($264)>>1)];
  var $266=(($265 << 16) >> 16);
  var $267=((($266)*(787))|0);
  var $268=((($262)+($267))|0);
  var $269=(($268)|0);
  var $270=((($269)+(512))|0);
  var $271=$270 >> 10;
  $X124=$271;
  var $272=$3;
  var $273=(($272+82)|0);
  var $274=HEAP16[(($273)>>1)];
  var $275=(($274 << 16) >> 16);
  var $276=((($275)*(-75))|0);
  var $277=$3;
  var $278=(($277+86)|0);
  var $279=HEAP16[(($278)>>1)];
  var $280=(($279 << 16) >> 16);
  var $281=((($280)*(526))|0);
  var $282=((($276)+($281))|0);
  var $283=$3;
  var $284=(($283+90)|0);
  var $285=HEAP16[(($284)>>1)];
  var $286=(($285 << 16) >> 16);
  var $287=((($286)*(787))|0);
  var $288=((($282)+($287))|0);
  var $289=(($288)|0);
  var $290=((($289)+(512))|0);
  var $291=$290 >> 10;
  $X125=$291;
  var $292=$3;
  var $293=(($292+98)|0);
  var $294=HEAP16[(($293)>>1)];
  var $295=(($294 << 16) >> 16);
  var $296=((($295)*(-75))|0);
  var $297=$3;
  var $298=(($297+102)|0);
  var $299=HEAP16[(($298)>>1)];
  var $300=(($299 << 16) >> 16);
  var $301=((($300)*(526))|0);
  var $302=((($296)+($301))|0);
  var $303=$3;
  var $304=(($303+106)|0);
  var $305=HEAP16[(($304)>>1)];
  var $306=(($305 << 16) >> 16);
  var $307=((($306)*(787))|0);
  var $308=((($302)+($307))|0);
  var $309=(($308)|0);
  var $310=((($309)+(512))|0);
  var $311=$310 >> 10;
  $X126=$311;
  $X127=0;
  $X130=0;
  $X131=0;
  $X132=0;
  $X133=0;
  $X134=0;
  $X135=0;
  $X136=0;
  $X137=0;
  var $312=$X100;
  var $313=$1;
  var $314=__ZN4jpgd12DCT_Upsample8Matrix442atEii($313, 0, 0);
  HEAP32[(($314)>>2)]=$312;
  var $315=$X101;
  var $316=((($315)*(426))|0);
  var $317=$X103;
  var $318=((($317)*(810))|0);
  var $319=((($316)+($318))|0);
  var $320=$X105;
  var $321=((($320)*(-360))|0);
  var $322=((($319)+($321))|0);
  var $323=(($322)|0);
  var $324=((($323)+(512))|0);
  var $325=$324 >> 10;
  var $326=$1;
  var $327=__ZN4jpgd12DCT_Upsample8Matrix442atEii($326, 0, 1);
  HEAP32[(($327)>>2)]=$325;
  var $328=$X104;
  var $329=$1;
  var $330=__ZN4jpgd12DCT_Upsample8Matrix442atEii($329, 0, 2);
  HEAP32[(($330)>>2)]=$328;
  var $331=$X101;
  var $332=((($331)*(23))|0);
  var $333=$X103;
  var $334=((($333)*(-99))|0);
  var $335=((($332)+($334))|0);
  var $336=$X105;
  var $337=((($336)*(502))|0);
  var $338=((($335)+($337))|0);
  var $339=(($338)|0);
  var $340=((($339)+(512))|0);
  var $341=$340 >> 10;
  var $342=$1;
  var $343=__ZN4jpgd12DCT_Upsample8Matrix442atEii($342, 0, 3);
  HEAP32[(($343)>>2)]=$341;
  var $344=$X110;
  var $345=$1;
  var $346=__ZN4jpgd12DCT_Upsample8Matrix442atEii($345, 1, 0);
  HEAP32[(($346)>>2)]=$344;
  var $347=$X111;
  var $348=((($347)*(426))|0);
  var $349=$X113;
  var $350=((($349)*(810))|0);
  var $351=((($348)+($350))|0);
  var $352=$X115;
  var $353=((($352)*(-360))|0);
  var $354=((($351)+($353))|0);
  var $355=(($354)|0);
  var $356=((($355)+(512))|0);
  var $357=$356 >> 10;
  var $358=$1;
  var $359=__ZN4jpgd12DCT_Upsample8Matrix442atEii($358, 1, 1);
  HEAP32[(($359)>>2)]=$357;
  var $360=$X114;
  var $361=$1;
  var $362=__ZN4jpgd12DCT_Upsample8Matrix442atEii($361, 1, 2);
  HEAP32[(($362)>>2)]=$360;
  var $363=$X111;
  var $364=((($363)*(23))|0);
  var $365=$X113;
  var $366=((($365)*(-99))|0);
  var $367=((($364)+($366))|0);
  var $368=$X115;
  var $369=((($368)*(502))|0);
  var $370=((($367)+($369))|0);
  var $371=(($370)|0);
  var $372=((($371)+(512))|0);
  var $373=$372 >> 10;
  var $374=$1;
  var $375=__ZN4jpgd12DCT_Upsample8Matrix442atEii($374, 1, 3);
  HEAP32[(($375)>>2)]=$373;
  var $376=$X120;
  var $377=$1;
  var $378=__ZN4jpgd12DCT_Upsample8Matrix442atEii($377, 2, 0);
  HEAP32[(($378)>>2)]=$376;
  var $379=$X121;
  var $380=((($379)*(426))|0);
  var $381=$X123;
  var $382=((($381)*(810))|0);
  var $383=((($380)+($382))|0);
  var $384=$X125;
  var $385=((($384)*(-360))|0);
  var $386=((($383)+($385))|0);
  var $387=(($386)|0);
  var $388=((($387)+(512))|0);
  var $389=$388 >> 10;
  var $390=$1;
  var $391=__ZN4jpgd12DCT_Upsample8Matrix442atEii($390, 2, 1);
  HEAP32[(($391)>>2)]=$389;
  var $392=$X124;
  var $393=$1;
  var $394=__ZN4jpgd12DCT_Upsample8Matrix442atEii($393, 2, 2);
  HEAP32[(($394)>>2)]=$392;
  var $395=$X121;
  var $396=((($395)*(23))|0);
  var $397=$X123;
  var $398=((($397)*(-99))|0);
  var $399=((($396)+($398))|0);
  var $400=$X125;
  var $401=((($400)*(502))|0);
  var $402=((($399)+($401))|0);
  var $403=(($402)|0);
  var $404=((($403)+(512))|0);
  var $405=$404 >> 10;
  var $406=$1;
  var $407=__ZN4jpgd12DCT_Upsample8Matrix442atEii($406, 2, 3);
  HEAP32[(($407)>>2)]=$405;
  var $408=$1;
  var $409=__ZN4jpgd12DCT_Upsample8Matrix442atEii($408, 3, 0);
  HEAP32[(($409)>>2)]=0;
  var $410=$1;
  var $411=__ZN4jpgd12DCT_Upsample8Matrix442atEii($410, 3, 1);
  HEAP32[(($411)>>2)]=0;
  var $412=$1;
  var $413=__ZN4jpgd12DCT_Upsample8Matrix442atEii($412, 3, 2);
  HEAP32[(($413)>>2)]=0;
  var $414=$1;
  var $415=__ZN4jpgd12DCT_Upsample8Matrix442atEii($414, 3, 3);
  HEAP32[(($415)>>2)]=0;
  var $416=$X101;
  var $417=((($416)*(928))|0);
  var $418=$X103;
  var $419=((($418)*(-325))|0);
  var $420=((($417)+($419))|0);
  var $421=$X105;
  var $422=((($421)*(218))|0);
  var $423=((($420)+($422))|0);
  var $424=(($423)|0);
  var $425=((($424)+(512))|0);
  var $426=$425 >> 10;
  var $427=$2;
  var $428=__ZN4jpgd12DCT_Upsample8Matrix442atEii($427, 0, 0);
  HEAP32[(($428)>>2)]=$426;
  var $429=$X102;
  var $430=$2;
  var $431=__ZN4jpgd12DCT_Upsample8Matrix442atEii($430, 0, 1);
  HEAP32[(($431)>>2)]=$429;
  var $432=$X101;
  var $433=((($432)*(-75))|0);
  var $434=$X103;
  var $435=((($434)*(526))|0);
  var $436=((($433)+($435))|0);
  var $437=$X105;
  var $438=((($437)*(787))|0);
  var $439=((($436)+($438))|0);
  var $440=(($439)|0);
  var $441=((($440)+(512))|0);
  var $442=$441 >> 10;
  var $443=$2;
  var $444=__ZN4jpgd12DCT_Upsample8Matrix442atEii($443, 0, 2);
  HEAP32[(($444)>>2)]=$442;
  var $445=$X106;
  var $446=$2;
  var $447=__ZN4jpgd12DCT_Upsample8Matrix442atEii($446, 0, 3);
  HEAP32[(($447)>>2)]=$445;
  var $448=$X111;
  var $449=((($448)*(928))|0);
  var $450=$X113;
  var $451=((($450)*(-325))|0);
  var $452=((($449)+($451))|0);
  var $453=$X115;
  var $454=((($453)*(218))|0);
  var $455=((($452)+($454))|0);
  var $456=(($455)|0);
  var $457=((($456)+(512))|0);
  var $458=$457 >> 10;
  var $459=$2;
  var $460=__ZN4jpgd12DCT_Upsample8Matrix442atEii($459, 1, 0);
  HEAP32[(($460)>>2)]=$458;
  var $461=$X112;
  var $462=$2;
  var $463=__ZN4jpgd12DCT_Upsample8Matrix442atEii($462, 1, 1);
  HEAP32[(($463)>>2)]=$461;
  var $464=$X111;
  var $465=((($464)*(-75))|0);
  var $466=$X113;
  var $467=((($466)*(526))|0);
  var $468=((($465)+($467))|0);
  var $469=$X115;
  var $470=((($469)*(787))|0);
  var $471=((($468)+($470))|0);
  var $472=(($471)|0);
  var $473=((($472)+(512))|0);
  var $474=$473 >> 10;
  var $475=$2;
  var $476=__ZN4jpgd12DCT_Upsample8Matrix442atEii($475, 1, 2);
  HEAP32[(($476)>>2)]=$474;
  var $477=$X116;
  var $478=$2;
  var $479=__ZN4jpgd12DCT_Upsample8Matrix442atEii($478, 1, 3);
  HEAP32[(($479)>>2)]=$477;
  var $480=$X121;
  var $481=((($480)*(928))|0);
  var $482=$X123;
  var $483=((($482)*(-325))|0);
  var $484=((($481)+($483))|0);
  var $485=$X125;
  var $486=((($485)*(218))|0);
  var $487=((($484)+($486))|0);
  var $488=(($487)|0);
  var $489=((($488)+(512))|0);
  var $490=$489 >> 10;
  var $491=$2;
  var $492=__ZN4jpgd12DCT_Upsample8Matrix442atEii($491, 2, 0);
  HEAP32[(($492)>>2)]=$490;
  var $493=$X122;
  var $494=$2;
  var $495=__ZN4jpgd12DCT_Upsample8Matrix442atEii($494, 2, 1);
  HEAP32[(($495)>>2)]=$493;
  var $496=$X121;
  var $497=((($496)*(-75))|0);
  var $498=$X123;
  var $499=((($498)*(526))|0);
  var $500=((($497)+($499))|0);
  var $501=$X125;
  var $502=((($501)*(787))|0);
  var $503=((($500)+($502))|0);
  var $504=(($503)|0);
  var $505=((($504)+(512))|0);
  var $506=$505 >> 10;
  var $507=$2;
  var $508=__ZN4jpgd12DCT_Upsample8Matrix442atEii($507, 2, 2);
  HEAP32[(($508)>>2)]=$506;
  var $509=$X126;
  var $510=$2;
  var $511=__ZN4jpgd12DCT_Upsample8Matrix442atEii($510, 2, 3);
  HEAP32[(($511)>>2)]=$509;
  var $512=$2;
  var $513=__ZN4jpgd12DCT_Upsample8Matrix442atEii($512, 3, 0);
  HEAP32[(($513)>>2)]=0;
  var $514=$2;
  var $515=__ZN4jpgd12DCT_Upsample8Matrix442atEii($514, 3, 1);
  HEAP32[(($515)>>2)]=0;
  var $516=$2;
  var $517=__ZN4jpgd12DCT_Upsample8Matrix442atEii($516, 3, 2);
  HEAP32[(($517)>>2)]=0;
  var $518=$2;
  var $519=__ZN4jpgd12DCT_Upsample8Matrix442atEii($518, 3, 3);
  HEAP32[(($519)>>2)]=0;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  var $24=$3;
  var $25=(($24+80)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  $X005=$27;
  var $28=$3;
  var $29=(($28+96)|0);
  var $30=HEAP16[(($29)>>1)];
  var $31=(($30 << 16) >> 16);
  $X006=$31;
  $X007=0;
  var $32=$3;
  var $33=(($32+2)|0);
  var $34=HEAP16[(($33)>>1)];
  var $35=(($34 << 16) >> 16);
  var $36=((($35)*(426))|0);
  var $37=$3;
  var $38=(($37+6)|0);
  var $39=HEAP16[(($38)>>1)];
  var $40=(($39 << 16) >> 16);
  var $41=((($40)*(810))|0);
  var $42=((($36)+($41))|0);
  var $43=$3;
  var $44=(($43+10)|0);
  var $45=HEAP16[(($44)>>1)];
  var $46=(($45 << 16) >> 16);
  var $47=((($46)*(-360))|0);
  var $48=((($42)+($47))|0);
  var $49=(($48)|0);
  var $50=((($49)+(512))|0);
  var $51=$50 >> 10;
  $X010=$51;
  var $52=$3;
  var $53=(($52+18)|0);
  var $54=HEAP16[(($53)>>1)];
  var $55=(($54 << 16) >> 16);
  var $56=((($55)*(426))|0);
  var $57=$3;
  var $58=(($57+22)|0);
  var $59=HEAP16[(($58)>>1)];
  var $60=(($59 << 16) >> 16);
  var $61=((($60)*(810))|0);
  var $62=((($56)+($61))|0);
  var $63=$3;
  var $64=(($63+26)|0);
  var $65=HEAP16[(($64)>>1)];
  var $66=(($65 << 16) >> 16);
  var $67=((($66)*(-360))|0);
  var $68=((($62)+($67))|0);
  var $69=(($68)|0);
  var $70=((($69)+(512))|0);
  var $71=$70 >> 10;
  $X011=$71;
  var $72=$3;
  var $73=(($72+34)|0);
  var $74=HEAP16[(($73)>>1)];
  var $75=(($74 << 16) >> 16);
  var $76=((($75)*(426))|0);
  var $77=$3;
  var $78=(($77+38)|0);
  var $79=HEAP16[(($78)>>1)];
  var $80=(($79 << 16) >> 16);
  var $81=((($80)*(810))|0);
  var $82=((($76)+($81))|0);
  var $83=$3;
  var $84=(($83+42)|0);
  var $85=HEAP16[(($84)>>1)];
  var $86=(($85 << 16) >> 16);
  var $87=((($86)*(-360))|0);
  var $88=((($82)+($87))|0);
  var $89=(($88)|0);
  var $90=((($89)+(512))|0);
  var $91=$90 >> 10;
  $X012=$91;
  var $92=$3;
  var $93=(($92+50)|0);
  var $94=HEAP16[(($93)>>1)];
  var $95=(($94 << 16) >> 16);
  var $96=((($95)*(426))|0);
  var $97=$3;
  var $98=(($97+54)|0);
  var $99=HEAP16[(($98)>>1)];
  var $100=(($99 << 16) >> 16);
  var $101=((($100)*(810))|0);
  var $102=((($96)+($101))|0);
  var $103=$3;
  var $104=(($103+58)|0);
  var $105=HEAP16[(($104)>>1)];
  var $106=(($105 << 16) >> 16);
  var $107=((($106)*(-360))|0);
  var $108=((($102)+($107))|0);
  var $109=(($108)|0);
  var $110=((($109)+(512))|0);
  var $111=$110 >> 10;
  $X013=$111;
  var $112=$3;
  var $113=(($112+66)|0);
  var $114=HEAP16[(($113)>>1)];
  var $115=(($114 << 16) >> 16);
  var $116=((($115)*(426))|0);
  var $117=$3;
  var $118=(($117+70)|0);
  var $119=HEAP16[(($118)>>1)];
  var $120=(($119 << 16) >> 16);
  var $121=((($120)*(810))|0);
  var $122=((($116)+($121))|0);
  var $123=$3;
  var $124=(($123+74)|0);
  var $125=HEAP16[(($124)>>1)];
  var $126=(($125 << 16) >> 16);
  var $127=((($126)*(-360))|0);
  var $128=((($122)+($127))|0);
  var $129=(($128)|0);
  var $130=((($129)+(512))|0);
  var $131=$130 >> 10;
  $X014=$131;
  var $132=$3;
  var $133=(($132+82)|0);
  var $134=HEAP16[(($133)>>1)];
  var $135=(($134 << 16) >> 16);
  var $136=((($135)*(426))|0);
  var $137=$3;
  var $138=(($137+86)|0);
  var $139=HEAP16[(($138)>>1)];
  var $140=(($139 << 16) >> 16);
  var $141=((($140)*(810))|0);
  var $142=((($136)+($141))|0);
  var $143=$3;
  var $144=(($143+90)|0);
  var $145=HEAP16[(($144)>>1)];
  var $146=(($145 << 16) >> 16);
  var $147=((($146)*(-360))|0);
  var $148=((($142)+($147))|0);
  var $149=(($148)|0);
  var $150=((($149)+(512))|0);
  var $151=$150 >> 10;
  $X015=$151;
  var $152=$3;
  var $153=(($152+98)|0);
  var $154=HEAP16[(($153)>>1)];
  var $155=(($154 << 16) >> 16);
  var $156=((($155)*(426))|0);
  var $157=$3;
  var $158=(($157+102)|0);
  var $159=HEAP16[(($158)>>1)];
  var $160=(($159 << 16) >> 16);
  var $161=((($160)*(810))|0);
  var $162=((($156)+($161))|0);
  var $163=$3;
  var $164=(($163+106)|0);
  var $165=HEAP16[(($164)>>1)];
  var $166=(($165 << 16) >> 16);
  var $167=((($166)*(-360))|0);
  var $168=((($162)+($167))|0);
  var $169=(($168)|0);
  var $170=((($169)+(512))|0);
  var $171=$170 >> 10;
  $X016=$171;
  $X017=0;
  var $172=$3;
  var $173=(($172+8)|0);
  var $174=HEAP16[(($173)>>1)];
  var $175=(($174 << 16) >> 16);
  $X020=$175;
  var $176=$3;
  var $177=(($176+24)|0);
  var $178=HEAP16[(($177)>>1)];
  var $179=(($178 << 16) >> 16);
  $X021=$179;
  var $180=$3;
  var $181=(($180+40)|0);
  var $182=HEAP16[(($181)>>1)];
  var $183=(($182 << 16) >> 16);
  $X022=$183;
  var $184=$3;
  var $185=(($184+56)|0);
  var $186=HEAP16[(($185)>>1)];
  var $187=(($186 << 16) >> 16);
  $X023=$187;
  var $188=$3;
  var $189=(($188+72)|0);
  var $190=HEAP16[(($189)>>1)];
  var $191=(($190 << 16) >> 16);
  $X024=$191;
  var $192=$3;
  var $193=(($192+88)|0);
  var $194=HEAP16[(($193)>>1)];
  var $195=(($194 << 16) >> 16);
  $X025=$195;
  var $196=$3;
  var $197=(($196+104)|0);
  var $198=HEAP16[(($197)>>1)];
  var $199=(($198 << 16) >> 16);
  $X026=$199;
  $X027=0;
  var $200=$3;
  var $201=(($200+2)|0);
  var $202=HEAP16[(($201)>>1)];
  var $203=(($202 << 16) >> 16);
  var $204=((($203)*(23))|0);
  var $205=$3;
  var $206=(($205+6)|0);
  var $207=HEAP16[(($206)>>1)];
  var $208=(($207 << 16) >> 16);
  var $209=((($208)*(-99))|0);
  var $210=((($204)+($209))|0);
  var $211=$3;
  var $212=(($211+10)|0);
  var $213=HEAP16[(($212)>>1)];
  var $214=(($213 << 16) >> 16);
  var $215=((($214)*(502))|0);
  var $216=((($210)+($215))|0);
  var $217=(($216)|0);
  var $218=((($217)+(512))|0);
  var $219=$218 >> 10;
  $X030=$219;
  var $220=$3;
  var $221=(($220+18)|0);
  var $222=HEAP16[(($221)>>1)];
  var $223=(($222 << 16) >> 16);
  var $224=((($223)*(23))|0);
  var $225=$3;
  var $226=(($225+22)|0);
  var $227=HEAP16[(($226)>>1)];
  var $228=(($227 << 16) >> 16);
  var $229=((($228)*(-99))|0);
  var $230=((($224)+($229))|0);
  var $231=$3;
  var $232=(($231+26)|0);
  var $233=HEAP16[(($232)>>1)];
  var $234=(($233 << 16) >> 16);
  var $235=((($234)*(502))|0);
  var $236=((($230)+($235))|0);
  var $237=(($236)|0);
  var $238=((($237)+(512))|0);
  var $239=$238 >> 10;
  $X031=$239;
  var $240=$3;
  var $241=(($240+34)|0);
  var $242=HEAP16[(($241)>>1)];
  var $243=(($242 << 16) >> 16);
  var $244=((($243)*(23))|0);
  var $245=$3;
  var $246=(($245+38)|0);
  var $247=HEAP16[(($246)>>1)];
  var $248=(($247 << 16) >> 16);
  var $249=((($248)*(-99))|0);
  var $250=((($244)+($249))|0);
  var $251=$3;
  var $252=(($251+42)|0);
  var $253=HEAP16[(($252)>>1)];
  var $254=(($253 << 16) >> 16);
  var $255=((($254)*(502))|0);
  var $256=((($250)+($255))|0);
  var $257=(($256)|0);
  var $258=((($257)+(512))|0);
  var $259=$258 >> 10;
  $X032=$259;
  var $260=$3;
  var $261=(($260+50)|0);
  var $262=HEAP16[(($261)>>1)];
  var $263=(($262 << 16) >> 16);
  var $264=((($263)*(23))|0);
  var $265=$3;
  var $266=(($265+54)|0);
  var $267=HEAP16[(($266)>>1)];
  var $268=(($267 << 16) >> 16);
  var $269=((($268)*(-99))|0);
  var $270=((($264)+($269))|0);
  var $271=$3;
  var $272=(($271+58)|0);
  var $273=HEAP16[(($272)>>1)];
  var $274=(($273 << 16) >> 16);
  var $275=((($274)*(502))|0);
  var $276=((($270)+($275))|0);
  var $277=(($276)|0);
  var $278=((($277)+(512))|0);
  var $279=$278 >> 10;
  $X033=$279;
  var $280=$3;
  var $281=(($280+66)|0);
  var $282=HEAP16[(($281)>>1)];
  var $283=(($282 << 16) >> 16);
  var $284=((($283)*(23))|0);
  var $285=$3;
  var $286=(($285+70)|0);
  var $287=HEAP16[(($286)>>1)];
  var $288=(($287 << 16) >> 16);
  var $289=((($288)*(-99))|0);
  var $290=((($284)+($289))|0);
  var $291=$3;
  var $292=(($291+74)|0);
  var $293=HEAP16[(($292)>>1)];
  var $294=(($293 << 16) >> 16);
  var $295=((($294)*(502))|0);
  var $296=((($290)+($295))|0);
  var $297=(($296)|0);
  var $298=((($297)+(512))|0);
  var $299=$298 >> 10;
  $X034=$299;
  var $300=$3;
  var $301=(($300+82)|0);
  var $302=HEAP16[(($301)>>1)];
  var $303=(($302 << 16) >> 16);
  var $304=((($303)*(23))|0);
  var $305=$3;
  var $306=(($305+86)|0);
  var $307=HEAP16[(($306)>>1)];
  var $308=(($307 << 16) >> 16);
  var $309=((($308)*(-99))|0);
  var $310=((($304)+($309))|0);
  var $311=$3;
  var $312=(($311+90)|0);
  var $313=HEAP16[(($312)>>1)];
  var $314=(($313 << 16) >> 16);
  var $315=((($314)*(502))|0);
  var $316=((($310)+($315))|0);
  var $317=(($316)|0);
  var $318=((($317)+(512))|0);
  var $319=$318 >> 10;
  $X035=$319;
  var $320=$3;
  var $321=(($320+98)|0);
  var $322=HEAP16[(($321)>>1)];
  var $323=(($322 << 16) >> 16);
  var $324=((($323)*(23))|0);
  var $325=$3;
  var $326=(($325+102)|0);
  var $327=HEAP16[(($326)>>1)];
  var $328=(($327 << 16) >> 16);
  var $329=((($328)*(-99))|0);
  var $330=((($324)+($329))|0);
  var $331=$3;
  var $332=(($331+106)|0);
  var $333=HEAP16[(($332)>>1)];
  var $334=(($333 << 16) >> 16);
  var $335=((($334)*(502))|0);
  var $336=((($330)+($335))|0);
  var $337=(($336)|0);
  var $338=((($337)+(512))|0);
  var $339=$338 >> 10;
  $X036=$339;
  $X037=0;
  var $340=$X000;
  var $341=$1;
  var $342=__ZN4jpgd12DCT_Upsample8Matrix442atEii($341, 0, 0);
  HEAP32[(($342)>>2)]=$340;
  var $343=$X001;
  var $344=((($343)*(426))|0);
  var $345=$X003;
  var $346=((($345)*(810))|0);
  var $347=((($344)+($346))|0);
  var $348=$X005;
  var $349=((($348)*(-360))|0);
  var $350=((($347)+($349))|0);
  var $351=(($350)|0);
  var $352=((($351)+(512))|0);
  var $353=$352 >> 10;
  var $354=$1;
  var $355=__ZN4jpgd12DCT_Upsample8Matrix442atEii($354, 0, 1);
  HEAP32[(($355)>>2)]=$353;
  var $356=$X004;
  var $357=$1;
  var $358=__ZN4jpgd12DCT_Upsample8Matrix442atEii($357, 0, 2);
  HEAP32[(($358)>>2)]=$356;
  var $359=$X001;
  var $360=((($359)*(23))|0);
  var $361=$X003;
  var $362=((($361)*(-99))|0);
  var $363=((($360)+($362))|0);
  var $364=$X005;
  var $365=((($364)*(502))|0);
  var $366=((($363)+($365))|0);
  var $367=(($366)|0);
  var $368=((($367)+(512))|0);
  var $369=$368 >> 10;
  var $370=$1;
  var $371=__ZN4jpgd12DCT_Upsample8Matrix442atEii($370, 0, 3);
  HEAP32[(($371)>>2)]=$369;
  var $372=$X010;
  var $373=$1;
  var $374=__ZN4jpgd12DCT_Upsample8Matrix442atEii($373, 1, 0);
  HEAP32[(($374)>>2)]=$372;
  var $375=$X011;
  var $376=((($375)*(426))|0);
  var $377=$X013;
  var $378=((($377)*(810))|0);
  var $379=((($376)+($378))|0);
  var $380=$X015;
  var $381=((($380)*(-360))|0);
  var $382=((($379)+($381))|0);
  var $383=(($382)|0);
  var $384=((($383)+(512))|0);
  var $385=$384 >> 10;
  var $386=$1;
  var $387=__ZN4jpgd12DCT_Upsample8Matrix442atEii($386, 1, 1);
  HEAP32[(($387)>>2)]=$385;
  var $388=$X014;
  var $389=$1;
  var $390=__ZN4jpgd12DCT_Upsample8Matrix442atEii($389, 1, 2);
  HEAP32[(($390)>>2)]=$388;
  var $391=$X011;
  var $392=((($391)*(23))|0);
  var $393=$X013;
  var $394=((($393)*(-99))|0);
  var $395=((($392)+($394))|0);
  var $396=$X015;
  var $397=((($396)*(502))|0);
  var $398=((($395)+($397))|0);
  var $399=(($398)|0);
  var $400=((($399)+(512))|0);
  var $401=$400 >> 10;
  var $402=$1;
  var $403=__ZN4jpgd12DCT_Upsample8Matrix442atEii($402, 1, 3);
  HEAP32[(($403)>>2)]=$401;
  var $404=$X020;
  var $405=$1;
  var $406=__ZN4jpgd12DCT_Upsample8Matrix442atEii($405, 2, 0);
  HEAP32[(($406)>>2)]=$404;
  var $407=$X021;
  var $408=((($407)*(426))|0);
  var $409=$X023;
  var $410=((($409)*(810))|0);
  var $411=((($408)+($410))|0);
  var $412=$X025;
  var $413=((($412)*(-360))|0);
  var $414=((($411)+($413))|0);
  var $415=(($414)|0);
  var $416=((($415)+(512))|0);
  var $417=$416 >> 10;
  var $418=$1;
  var $419=__ZN4jpgd12DCT_Upsample8Matrix442atEii($418, 2, 1);
  HEAP32[(($419)>>2)]=$417;
  var $420=$X024;
  var $421=$1;
  var $422=__ZN4jpgd12DCT_Upsample8Matrix442atEii($421, 2, 2);
  HEAP32[(($422)>>2)]=$420;
  var $423=$X021;
  var $424=((($423)*(23))|0);
  var $425=$X023;
  var $426=((($425)*(-99))|0);
  var $427=((($424)+($426))|0);
  var $428=$X025;
  var $429=((($428)*(502))|0);
  var $430=((($427)+($429))|0);
  var $431=(($430)|0);
  var $432=((($431)+(512))|0);
  var $433=$432 >> 10;
  var $434=$1;
  var $435=__ZN4jpgd12DCT_Upsample8Matrix442atEii($434, 2, 3);
  HEAP32[(($435)>>2)]=$433;
  var $436=$X030;
  var $437=$1;
  var $438=__ZN4jpgd12DCT_Upsample8Matrix442atEii($437, 3, 0);
  HEAP32[(($438)>>2)]=$436;
  var $439=$X031;
  var $440=((($439)*(426))|0);
  var $441=$X033;
  var $442=((($441)*(810))|0);
  var $443=((($440)+($442))|0);
  var $444=$X035;
  var $445=((($444)*(-360))|0);
  var $446=((($443)+($445))|0);
  var $447=(($446)|0);
  var $448=((($447)+(512))|0);
  var $449=$448 >> 10;
  var $450=$1;
  var $451=__ZN4jpgd12DCT_Upsample8Matrix442atEii($450, 3, 1);
  HEAP32[(($451)>>2)]=$449;
  var $452=$X034;
  var $453=$1;
  var $454=__ZN4jpgd12DCT_Upsample8Matrix442atEii($453, 3, 2);
  HEAP32[(($454)>>2)]=$452;
  var $455=$X031;
  var $456=((($455)*(23))|0);
  var $457=$X033;
  var $458=((($457)*(-99))|0);
  var $459=((($456)+($458))|0);
  var $460=$X035;
  var $461=((($460)*(502))|0);
  var $462=((($459)+($461))|0);
  var $463=(($462)|0);
  var $464=((($463)+(512))|0);
  var $465=$464 >> 10;
  var $466=$1;
  var $467=__ZN4jpgd12DCT_Upsample8Matrix442atEii($466, 3, 3);
  HEAP32[(($467)>>2)]=$465;
  var $468=$X001;
  var $469=((($468)*(928))|0);
  var $470=$X003;
  var $471=((($470)*(-325))|0);
  var $472=((($469)+($471))|0);
  var $473=$X005;
  var $474=((($473)*(218))|0);
  var $475=((($472)+($474))|0);
  var $476=(($475)|0);
  var $477=((($476)+(512))|0);
  var $478=$477 >> 10;
  var $479=$2;
  var $480=__ZN4jpgd12DCT_Upsample8Matrix442atEii($479, 0, 0);
  HEAP32[(($480)>>2)]=$478;
  var $481=$X002;
  var $482=$2;
  var $483=__ZN4jpgd12DCT_Upsample8Matrix442atEii($482, 0, 1);
  HEAP32[(($483)>>2)]=$481;
  var $484=$X001;
  var $485=((($484)*(-75))|0);
  var $486=$X003;
  var $487=((($486)*(526))|0);
  var $488=((($485)+($487))|0);
  var $489=$X005;
  var $490=((($489)*(787))|0);
  var $491=((($488)+($490))|0);
  var $492=(($491)|0);
  var $493=((($492)+(512))|0);
  var $494=$493 >> 10;
  var $495=$2;
  var $496=__ZN4jpgd12DCT_Upsample8Matrix442atEii($495, 0, 2);
  HEAP32[(($496)>>2)]=$494;
  var $497=$X006;
  var $498=$2;
  var $499=__ZN4jpgd12DCT_Upsample8Matrix442atEii($498, 0, 3);
  HEAP32[(($499)>>2)]=$497;
  var $500=$X011;
  var $501=((($500)*(928))|0);
  var $502=$X013;
  var $503=((($502)*(-325))|0);
  var $504=((($501)+($503))|0);
  var $505=$X015;
  var $506=((($505)*(218))|0);
  var $507=((($504)+($506))|0);
  var $508=(($507)|0);
  var $509=((($508)+(512))|0);
  var $510=$509 >> 10;
  var $511=$2;
  var $512=__ZN4jpgd12DCT_Upsample8Matrix442atEii($511, 1, 0);
  HEAP32[(($512)>>2)]=$510;
  var $513=$X012;
  var $514=$2;
  var $515=__ZN4jpgd12DCT_Upsample8Matrix442atEii($514, 1, 1);
  HEAP32[(($515)>>2)]=$513;
  var $516=$X011;
  var $517=((($516)*(-75))|0);
  var $518=$X013;
  var $519=((($518)*(526))|0);
  var $520=((($517)+($519))|0);
  var $521=$X015;
  var $522=((($521)*(787))|0);
  var $523=((($520)+($522))|0);
  var $524=(($523)|0);
  var $525=((($524)+(512))|0);
  var $526=$525 >> 10;
  var $527=$2;
  var $528=__ZN4jpgd12DCT_Upsample8Matrix442atEii($527, 1, 2);
  HEAP32[(($528)>>2)]=$526;
  var $529=$X016;
  var $530=$2;
  var $531=__ZN4jpgd12DCT_Upsample8Matrix442atEii($530, 1, 3);
  HEAP32[(($531)>>2)]=$529;
  var $532=$X021;
  var $533=((($532)*(928))|0);
  var $534=$X023;
  var $535=((($534)*(-325))|0);
  var $536=((($533)+($535))|0);
  var $537=$X025;
  var $538=((($537)*(218))|0);
  var $539=((($536)+($538))|0);
  var $540=(($539)|0);
  var $541=((($540)+(512))|0);
  var $542=$541 >> 10;
  var $543=$2;
  var $544=__ZN4jpgd12DCT_Upsample8Matrix442atEii($543, 2, 0);
  HEAP32[(($544)>>2)]=$542;
  var $545=$X022;
  var $546=$2;
  var $547=__ZN4jpgd12DCT_Upsample8Matrix442atEii($546, 2, 1);
  HEAP32[(($547)>>2)]=$545;
  var $548=$X021;
  var $549=((($548)*(-75))|0);
  var $550=$X023;
  var $551=((($550)*(526))|0);
  var $552=((($549)+($551))|0);
  var $553=$X025;
  var $554=((($553)*(787))|0);
  var $555=((($552)+($554))|0);
  var $556=(($555)|0);
  var $557=((($556)+(512))|0);
  var $558=$557 >> 10;
  var $559=$2;
  var $560=__ZN4jpgd12DCT_Upsample8Matrix442atEii($559, 2, 2);
  HEAP32[(($560)>>2)]=$558;
  var $561=$X026;
  var $562=$2;
  var $563=__ZN4jpgd12DCT_Upsample8Matrix442atEii($562, 2, 3);
  HEAP32[(($563)>>2)]=$561;
  var $564=$X031;
  var $565=((($564)*(928))|0);
  var $566=$X033;
  var $567=((($566)*(-325))|0);
  var $568=((($565)+($567))|0);
  var $569=$X035;
  var $570=((($569)*(218))|0);
  var $571=((($568)+($570))|0);
  var $572=(($571)|0);
  var $573=((($572)+(512))|0);
  var $574=$573 >> 10;
  var $575=$2;
  var $576=__ZN4jpgd12DCT_Upsample8Matrix442atEii($575, 3, 0);
  HEAP32[(($576)>>2)]=$574;
  var $577=$X032;
  var $578=$2;
  var $579=__ZN4jpgd12DCT_Upsample8Matrix442atEii($578, 3, 1);
  HEAP32[(($579)>>2)]=$577;
  var $580=$X031;
  var $581=((($580)*(-75))|0);
  var $582=$X033;
  var $583=((($582)*(526))|0);
  var $584=((($581)+($583))|0);
  var $585=$X035;
  var $586=((($585)*(787))|0);
  var $587=((($584)+($586))|0);
  var $588=(($587)|0);
  var $589=((($588)+(512))|0);
  var $590=$589 >> 10;
  var $591=$2;
  var $592=__ZN4jpgd12DCT_Upsample8Matrix442atEii($591, 3, 2);
  HEAP32[(($592)>>2)]=$590;
  var $593=$X036;
  var $594=$2;
  var $595=__ZN4jpgd12DCT_Upsample8Matrix442atEii($594, 3, 3);
  HEAP32[(($595)>>2)]=$593;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=$3;
  var $16=(($15+10)|0);
  var $17=HEAP16[(($16)>>1)];
  var $18=(($17 << 16) >> 16);
  var $19=((($18)*(218))|0);
  var $20=((($14)+($19))|0);
  var $21=(($20)|0);
  var $22=((($21)+(512))|0);
  var $23=$22 >> 10;
  $X100=$23;
  var $24=$3;
  var $25=(($24+18)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  var $28=((($27)*(928))|0);
  var $29=$3;
  var $30=(($29+22)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(-325))|0);
  var $34=((($28)+($33))|0);
  var $35=$3;
  var $36=(($35+26)|0);
  var $37=HEAP16[(($36)>>1)];
  var $38=(($37 << 16) >> 16);
  var $39=((($38)*(218))|0);
  var $40=((($34)+($39))|0);
  var $41=(($40)|0);
  var $42=((($41)+(512))|0);
  var $43=$42 >> 10;
  $X101=$43;
  var $44=$3;
  var $45=(($44+34)|0);
  var $46=HEAP16[(($45)>>1)];
  var $47=(($46 << 16) >> 16);
  var $48=((($47)*(928))|0);
  var $49=$3;
  var $50=(($49+38)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(-325))|0);
  var $54=((($48)+($53))|0);
  var $55=$3;
  var $56=(($55+42)|0);
  var $57=HEAP16[(($56)>>1)];
  var $58=(($57 << 16) >> 16);
  var $59=((($58)*(218))|0);
  var $60=((($54)+($59))|0);
  var $61=(($60)|0);
  var $62=((($61)+(512))|0);
  var $63=$62 >> 10;
  $X102=$63;
  var $64=$3;
  var $65=(($64+50)|0);
  var $66=HEAP16[(($65)>>1)];
  var $67=(($66 << 16) >> 16);
  var $68=((($67)*(928))|0);
  var $69=$3;
  var $70=(($69+54)|0);
  var $71=HEAP16[(($70)>>1)];
  var $72=(($71 << 16) >> 16);
  var $73=((($72)*(-325))|0);
  var $74=((($68)+($73))|0);
  var $75=$3;
  var $76=(($75+58)|0);
  var $77=HEAP16[(($76)>>1)];
  var $78=(($77 << 16) >> 16);
  var $79=((($78)*(218))|0);
  var $80=((($74)+($79))|0);
  var $81=(($80)|0);
  var $82=((($81)+(512))|0);
  var $83=$82 >> 10;
  $X103=$83;
  var $84=$3;
  var $85=(($84+66)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(928))|0);
  var $89=$3;
  var $90=(($89+70)|0);
  var $91=HEAP16[(($90)>>1)];
  var $92=(($91 << 16) >> 16);
  var $93=((($92)*(-325))|0);
  var $94=((($88)+($93))|0);
  var $95=$3;
  var $96=(($95+74)|0);
  var $97=HEAP16[(($96)>>1)];
  var $98=(($97 << 16) >> 16);
  var $99=((($98)*(218))|0);
  var $100=((($94)+($99))|0);
  var $101=(($100)|0);
  var $102=((($101)+(512))|0);
  var $103=$102 >> 10;
  $X104=$103;
  var $104=$3;
  var $105=(($104+82)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(928))|0);
  var $109=$3;
  var $110=(($109+86)|0);
  var $111=HEAP16[(($110)>>1)];
  var $112=(($111 << 16) >> 16);
  var $113=((($112)*(-325))|0);
  var $114=((($108)+($113))|0);
  var $115=$3;
  var $116=(($115+90)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(218))|0);
  var $120=((($114)+($119))|0);
  var $121=(($120)|0);
  var $122=((($121)+(512))|0);
  var $123=$122 >> 10;
  $X105=$123;
  var $124=$3;
  var $125=(($124+98)|0);
  var $126=HEAP16[(($125)>>1)];
  var $127=(($126 << 16) >> 16);
  var $128=((($127)*(928))|0);
  var $129=$3;
  var $130=(($129+102)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(-325))|0);
  var $134=((($128)+($133))|0);
  var $135=$3;
  var $136=(($135+106)|0);
  var $137=HEAP16[(($136)>>1)];
  var $138=(($137 << 16) >> 16);
  var $139=((($138)*(218))|0);
  var $140=((($134)+($139))|0);
  var $141=(($140)|0);
  var $142=((($141)+(512))|0);
  var $143=$142 >> 10;
  $X106=$143;
  $X107=0;
  var $144=$3;
  var $145=(($144+4)|0);
  var $146=HEAP16[(($145)>>1)];
  var $147=(($146 << 16) >> 16);
  $X110=$147;
  var $148=$3;
  var $149=(($148+20)|0);
  var $150=HEAP16[(($149)>>1)];
  var $151=(($150 << 16) >> 16);
  $X111=$151;
  var $152=$3;
  var $153=(($152+36)|0);
  var $154=HEAP16[(($153)>>1)];
  var $155=(($154 << 16) >> 16);
  $X112=$155;
  var $156=$3;
  var $157=(($156+52)|0);
  var $158=HEAP16[(($157)>>1)];
  var $159=(($158 << 16) >> 16);
  $X113=$159;
  var $160=$3;
  var $161=(($160+68)|0);
  var $162=HEAP16[(($161)>>1)];
  var $163=(($162 << 16) >> 16);
  $X114=$163;
  var $164=$3;
  var $165=(($164+84)|0);
  var $166=HEAP16[(($165)>>1)];
  var $167=(($166 << 16) >> 16);
  $X115=$167;
  var $168=$3;
  var $169=(($168+100)|0);
  var $170=HEAP16[(($169)>>1)];
  var $171=(($170 << 16) >> 16);
  $X116=$171;
  $X117=0;
  var $172=$3;
  var $173=(($172+2)|0);
  var $174=HEAP16[(($173)>>1)];
  var $175=(($174 << 16) >> 16);
  var $176=((($175)*(-75))|0);
  var $177=$3;
  var $178=(($177+6)|0);
  var $179=HEAP16[(($178)>>1)];
  var $180=(($179 << 16) >> 16);
  var $181=((($180)*(526))|0);
  var $182=((($176)+($181))|0);
  var $183=$3;
  var $184=(($183+10)|0);
  var $185=HEAP16[(($184)>>1)];
  var $186=(($185 << 16) >> 16);
  var $187=((($186)*(787))|0);
  var $188=((($182)+($187))|0);
  var $189=(($188)|0);
  var $190=((($189)+(512))|0);
  var $191=$190 >> 10;
  $X120=$191;
  var $192=$3;
  var $193=(($192+18)|0);
  var $194=HEAP16[(($193)>>1)];
  var $195=(($194 << 16) >> 16);
  var $196=((($195)*(-75))|0);
  var $197=$3;
  var $198=(($197+22)|0);
  var $199=HEAP16[(($198)>>1)];
  var $200=(($199 << 16) >> 16);
  var $201=((($200)*(526))|0);
  var $202=((($196)+($201))|0);
  var $203=$3;
  var $204=(($203+26)|0);
  var $205=HEAP16[(($204)>>1)];
  var $206=(($205 << 16) >> 16);
  var $207=((($206)*(787))|0);
  var $208=((($202)+($207))|0);
  var $209=(($208)|0);
  var $210=((($209)+(512))|0);
  var $211=$210 >> 10;
  $X121=$211;
  var $212=$3;
  var $213=(($212+34)|0);
  var $214=HEAP16[(($213)>>1)];
  var $215=(($214 << 16) >> 16);
  var $216=((($215)*(-75))|0);
  var $217=$3;
  var $218=(($217+38)|0);
  var $219=HEAP16[(($218)>>1)];
  var $220=(($219 << 16) >> 16);
  var $221=((($220)*(526))|0);
  var $222=((($216)+($221))|0);
  var $223=$3;
  var $224=(($223+42)|0);
  var $225=HEAP16[(($224)>>1)];
  var $226=(($225 << 16) >> 16);
  var $227=((($226)*(787))|0);
  var $228=((($222)+($227))|0);
  var $229=(($228)|0);
  var $230=((($229)+(512))|0);
  var $231=$230 >> 10;
  $X122=$231;
  var $232=$3;
  var $233=(($232+50)|0);
  var $234=HEAP16[(($233)>>1)];
  var $235=(($234 << 16) >> 16);
  var $236=((($235)*(-75))|0);
  var $237=$3;
  var $238=(($237+54)|0);
  var $239=HEAP16[(($238)>>1)];
  var $240=(($239 << 16) >> 16);
  var $241=((($240)*(526))|0);
  var $242=((($236)+($241))|0);
  var $243=$3;
  var $244=(($243+58)|0);
  var $245=HEAP16[(($244)>>1)];
  var $246=(($245 << 16) >> 16);
  var $247=((($246)*(787))|0);
  var $248=((($242)+($247))|0);
  var $249=(($248)|0);
  var $250=((($249)+(512))|0);
  var $251=$250 >> 10;
  $X123=$251;
  var $252=$3;
  var $253=(($252+66)|0);
  var $254=HEAP16[(($253)>>1)];
  var $255=(($254 << 16) >> 16);
  var $256=((($255)*(-75))|0);
  var $257=$3;
  var $258=(($257+70)|0);
  var $259=HEAP16[(($258)>>1)];
  var $260=(($259 << 16) >> 16);
  var $261=((($260)*(526))|0);
  var $262=((($256)+($261))|0);
  var $263=$3;
  var $264=(($263+74)|0);
  var $265=HEAP16[(($264)>>1)];
  var $266=(($265 << 16) >> 16);
  var $267=((($266)*(787))|0);
  var $268=((($262)+($267))|0);
  var $269=(($268)|0);
  var $270=((($269)+(512))|0);
  var $271=$270 >> 10;
  $X124=$271;
  var $272=$3;
  var $273=(($272+82)|0);
  var $274=HEAP16[(($273)>>1)];
  var $275=(($274 << 16) >> 16);
  var $276=((($275)*(-75))|0);
  var $277=$3;
  var $278=(($277+86)|0);
  var $279=HEAP16[(($278)>>1)];
  var $280=(($279 << 16) >> 16);
  var $281=((($280)*(526))|0);
  var $282=((($276)+($281))|0);
  var $283=$3;
  var $284=(($283+90)|0);
  var $285=HEAP16[(($284)>>1)];
  var $286=(($285 << 16) >> 16);
  var $287=((($286)*(787))|0);
  var $288=((($282)+($287))|0);
  var $289=(($288)|0);
  var $290=((($289)+(512))|0);
  var $291=$290 >> 10;
  $X125=$291;
  var $292=$3;
  var $293=(($292+98)|0);
  var $294=HEAP16[(($293)>>1)];
  var $295=(($294 << 16) >> 16);
  var $296=((($295)*(-75))|0);
  var $297=$3;
  var $298=(($297+102)|0);
  var $299=HEAP16[(($298)>>1)];
  var $300=(($299 << 16) >> 16);
  var $301=((($300)*(526))|0);
  var $302=((($296)+($301))|0);
  var $303=$3;
  var $304=(($303+106)|0);
  var $305=HEAP16[(($304)>>1)];
  var $306=(($305 << 16) >> 16);
  var $307=((($306)*(787))|0);
  var $308=((($302)+($307))|0);
  var $309=(($308)|0);
  var $310=((($309)+(512))|0);
  var $311=$310 >> 10;
  $X126=$311;
  $X127=0;
  var $312=$3;
  var $313=(($312+12)|0);
  var $314=HEAP16[(($313)>>1)];
  var $315=(($314 << 16) >> 16);
  $X130=$315;
  var $316=$3;
  var $317=(($316+28)|0);
  var $318=HEAP16[(($317)>>1)];
  var $319=(($318 << 16) >> 16);
  $X131=$319;
  var $320=$3;
  var $321=(($320+44)|0);
  var $322=HEAP16[(($321)>>1)];
  var $323=(($322 << 16) >> 16);
  $X132=$323;
  var $324=$3;
  var $325=(($324+60)|0);
  var $326=HEAP16[(($325)>>1)];
  var $327=(($326 << 16) >> 16);
  $X133=$327;
  var $328=$3;
  var $329=(($328+76)|0);
  var $330=HEAP16[(($329)>>1)];
  var $331=(($330 << 16) >> 16);
  $X134=$331;
  var $332=$3;
  var $333=(($332+92)|0);
  var $334=HEAP16[(($333)>>1)];
  var $335=(($334 << 16) >> 16);
  $X135=$335;
  var $336=$3;
  var $337=(($336+108)|0);
  var $338=HEAP16[(($337)>>1)];
  var $339=(($338 << 16) >> 16);
  $X136=$339;
  $X137=0;
  var $340=$X100;
  var $341=$1;
  var $342=__ZN4jpgd12DCT_Upsample8Matrix442atEii($341, 0, 0);
  HEAP32[(($342)>>2)]=$340;
  var $343=$X101;
  var $344=((($343)*(426))|0);
  var $345=$X103;
  var $346=((($345)*(810))|0);
  var $347=((($344)+($346))|0);
  var $348=$X105;
  var $349=((($348)*(-360))|0);
  var $350=((($347)+($349))|0);
  var $351=(($350)|0);
  var $352=((($351)+(512))|0);
  var $353=$352 >> 10;
  var $354=$1;
  var $355=__ZN4jpgd12DCT_Upsample8Matrix442atEii($354, 0, 1);
  HEAP32[(($355)>>2)]=$353;
  var $356=$X104;
  var $357=$1;
  var $358=__ZN4jpgd12DCT_Upsample8Matrix442atEii($357, 0, 2);
  HEAP32[(($358)>>2)]=$356;
  var $359=$X101;
  var $360=((($359)*(23))|0);
  var $361=$X103;
  var $362=((($361)*(-99))|0);
  var $363=((($360)+($362))|0);
  var $364=$X105;
  var $365=((($364)*(502))|0);
  var $366=((($363)+($365))|0);
  var $367=(($366)|0);
  var $368=((($367)+(512))|0);
  var $369=$368 >> 10;
  var $370=$1;
  var $371=__ZN4jpgd12DCT_Upsample8Matrix442atEii($370, 0, 3);
  HEAP32[(($371)>>2)]=$369;
  var $372=$X110;
  var $373=$1;
  var $374=__ZN4jpgd12DCT_Upsample8Matrix442atEii($373, 1, 0);
  HEAP32[(($374)>>2)]=$372;
  var $375=$X111;
  var $376=((($375)*(426))|0);
  var $377=$X113;
  var $378=((($377)*(810))|0);
  var $379=((($376)+($378))|0);
  var $380=$X115;
  var $381=((($380)*(-360))|0);
  var $382=((($379)+($381))|0);
  var $383=(($382)|0);
  var $384=((($383)+(512))|0);
  var $385=$384 >> 10;
  var $386=$1;
  var $387=__ZN4jpgd12DCT_Upsample8Matrix442atEii($386, 1, 1);
  HEAP32[(($387)>>2)]=$385;
  var $388=$X114;
  var $389=$1;
  var $390=__ZN4jpgd12DCT_Upsample8Matrix442atEii($389, 1, 2);
  HEAP32[(($390)>>2)]=$388;
  var $391=$X111;
  var $392=((($391)*(23))|0);
  var $393=$X113;
  var $394=((($393)*(-99))|0);
  var $395=((($392)+($394))|0);
  var $396=$X115;
  var $397=((($396)*(502))|0);
  var $398=((($395)+($397))|0);
  var $399=(($398)|0);
  var $400=((($399)+(512))|0);
  var $401=$400 >> 10;
  var $402=$1;
  var $403=__ZN4jpgd12DCT_Upsample8Matrix442atEii($402, 1, 3);
  HEAP32[(($403)>>2)]=$401;
  var $404=$X120;
  var $405=$1;
  var $406=__ZN4jpgd12DCT_Upsample8Matrix442atEii($405, 2, 0);
  HEAP32[(($406)>>2)]=$404;
  var $407=$X121;
  var $408=((($407)*(426))|0);
  var $409=$X123;
  var $410=((($409)*(810))|0);
  var $411=((($408)+($410))|0);
  var $412=$X125;
  var $413=((($412)*(-360))|0);
  var $414=((($411)+($413))|0);
  var $415=(($414)|0);
  var $416=((($415)+(512))|0);
  var $417=$416 >> 10;
  var $418=$1;
  var $419=__ZN4jpgd12DCT_Upsample8Matrix442atEii($418, 2, 1);
  HEAP32[(($419)>>2)]=$417;
  var $420=$X124;
  var $421=$1;
  var $422=__ZN4jpgd12DCT_Upsample8Matrix442atEii($421, 2, 2);
  HEAP32[(($422)>>2)]=$420;
  var $423=$X121;
  var $424=((($423)*(23))|0);
  var $425=$X123;
  var $426=((($425)*(-99))|0);
  var $427=((($424)+($426))|0);
  var $428=$X125;
  var $429=((($428)*(502))|0);
  var $430=((($427)+($429))|0);
  var $431=(($430)|0);
  var $432=((($431)+(512))|0);
  var $433=$432 >> 10;
  var $434=$1;
  var $435=__ZN4jpgd12DCT_Upsample8Matrix442atEii($434, 2, 3);
  HEAP32[(($435)>>2)]=$433;
  var $436=$X130;
  var $437=$1;
  var $438=__ZN4jpgd12DCT_Upsample8Matrix442atEii($437, 3, 0);
  HEAP32[(($438)>>2)]=$436;
  var $439=$X131;
  var $440=((($439)*(426))|0);
  var $441=$X133;
  var $442=((($441)*(810))|0);
  var $443=((($440)+($442))|0);
  var $444=$X135;
  var $445=((($444)*(-360))|0);
  var $446=((($443)+($445))|0);
  var $447=(($446)|0);
  var $448=((($447)+(512))|0);
  var $449=$448 >> 10;
  var $450=$1;
  var $451=__ZN4jpgd12DCT_Upsample8Matrix442atEii($450, 3, 1);
  HEAP32[(($451)>>2)]=$449;
  var $452=$X134;
  var $453=$1;
  var $454=__ZN4jpgd12DCT_Upsample8Matrix442atEii($453, 3, 2);
  HEAP32[(($454)>>2)]=$452;
  var $455=$X131;
  var $456=((($455)*(23))|0);
  var $457=$X133;
  var $458=((($457)*(-99))|0);
  var $459=((($456)+($458))|0);
  var $460=$X135;
  var $461=((($460)*(502))|0);
  var $462=((($459)+($461))|0);
  var $463=(($462)|0);
  var $464=((($463)+(512))|0);
  var $465=$464 >> 10;
  var $466=$1;
  var $467=__ZN4jpgd12DCT_Upsample8Matrix442atEii($466, 3, 3);
  HEAP32[(($467)>>2)]=$465;
  var $468=$X101;
  var $469=((($468)*(928))|0);
  var $470=$X103;
  var $471=((($470)*(-325))|0);
  var $472=((($469)+($471))|0);
  var $473=$X105;
  var $474=((($473)*(218))|0);
  var $475=((($472)+($474))|0);
  var $476=(($475)|0);
  var $477=((($476)+(512))|0);
  var $478=$477 >> 10;
  var $479=$2;
  var $480=__ZN4jpgd12DCT_Upsample8Matrix442atEii($479, 0, 0);
  HEAP32[(($480)>>2)]=$478;
  var $481=$X102;
  var $482=$2;
  var $483=__ZN4jpgd12DCT_Upsample8Matrix442atEii($482, 0, 1);
  HEAP32[(($483)>>2)]=$481;
  var $484=$X101;
  var $485=((($484)*(-75))|0);
  var $486=$X103;
  var $487=((($486)*(526))|0);
  var $488=((($485)+($487))|0);
  var $489=$X105;
  var $490=((($489)*(787))|0);
  var $491=((($488)+($490))|0);
  var $492=(($491)|0);
  var $493=((($492)+(512))|0);
  var $494=$493 >> 10;
  var $495=$2;
  var $496=__ZN4jpgd12DCT_Upsample8Matrix442atEii($495, 0, 2);
  HEAP32[(($496)>>2)]=$494;
  var $497=$X106;
  var $498=$2;
  var $499=__ZN4jpgd12DCT_Upsample8Matrix442atEii($498, 0, 3);
  HEAP32[(($499)>>2)]=$497;
  var $500=$X111;
  var $501=((($500)*(928))|0);
  var $502=$X113;
  var $503=((($502)*(-325))|0);
  var $504=((($501)+($503))|0);
  var $505=$X115;
  var $506=((($505)*(218))|0);
  var $507=((($504)+($506))|0);
  var $508=(($507)|0);
  var $509=((($508)+(512))|0);
  var $510=$509 >> 10;
  var $511=$2;
  var $512=__ZN4jpgd12DCT_Upsample8Matrix442atEii($511, 1, 0);
  HEAP32[(($512)>>2)]=$510;
  var $513=$X112;
  var $514=$2;
  var $515=__ZN4jpgd12DCT_Upsample8Matrix442atEii($514, 1, 1);
  HEAP32[(($515)>>2)]=$513;
  var $516=$X111;
  var $517=((($516)*(-75))|0);
  var $518=$X113;
  var $519=((($518)*(526))|0);
  var $520=((($517)+($519))|0);
  var $521=$X115;
  var $522=((($521)*(787))|0);
  var $523=((($520)+($522))|0);
  var $524=(($523)|0);
  var $525=((($524)+(512))|0);
  var $526=$525 >> 10;
  var $527=$2;
  var $528=__ZN4jpgd12DCT_Upsample8Matrix442atEii($527, 1, 2);
  HEAP32[(($528)>>2)]=$526;
  var $529=$X116;
  var $530=$2;
  var $531=__ZN4jpgd12DCT_Upsample8Matrix442atEii($530, 1, 3);
  HEAP32[(($531)>>2)]=$529;
  var $532=$X121;
  var $533=((($532)*(928))|0);
  var $534=$X123;
  var $535=((($534)*(-325))|0);
  var $536=((($533)+($535))|0);
  var $537=$X125;
  var $538=((($537)*(218))|0);
  var $539=((($536)+($538))|0);
  var $540=(($539)|0);
  var $541=((($540)+(512))|0);
  var $542=$541 >> 10;
  var $543=$2;
  var $544=__ZN4jpgd12DCT_Upsample8Matrix442atEii($543, 2, 0);
  HEAP32[(($544)>>2)]=$542;
  var $545=$X122;
  var $546=$2;
  var $547=__ZN4jpgd12DCT_Upsample8Matrix442atEii($546, 2, 1);
  HEAP32[(($547)>>2)]=$545;
  var $548=$X121;
  var $549=((($548)*(-75))|0);
  var $550=$X123;
  var $551=((($550)*(526))|0);
  var $552=((($549)+($551))|0);
  var $553=$X125;
  var $554=((($553)*(787))|0);
  var $555=((($552)+($554))|0);
  var $556=(($555)|0);
  var $557=((($556)+(512))|0);
  var $558=$557 >> 10;
  var $559=$2;
  var $560=__ZN4jpgd12DCT_Upsample8Matrix442atEii($559, 2, 2);
  HEAP32[(($560)>>2)]=$558;
  var $561=$X126;
  var $562=$2;
  var $563=__ZN4jpgd12DCT_Upsample8Matrix442atEii($562, 2, 3);
  HEAP32[(($563)>>2)]=$561;
  var $564=$X131;
  var $565=((($564)*(928))|0);
  var $566=$X133;
  var $567=((($566)*(-325))|0);
  var $568=((($565)+($567))|0);
  var $569=$X135;
  var $570=((($569)*(218))|0);
  var $571=((($568)+($570))|0);
  var $572=(($571)|0);
  var $573=((($572)+(512))|0);
  var $574=$573 >> 10;
  var $575=$2;
  var $576=__ZN4jpgd12DCT_Upsample8Matrix442atEii($575, 3, 0);
  HEAP32[(($576)>>2)]=$574;
  var $577=$X132;
  var $578=$2;
  var $579=__ZN4jpgd12DCT_Upsample8Matrix442atEii($578, 3, 1);
  HEAP32[(($579)>>2)]=$577;
  var $580=$X131;
  var $581=((($580)*(-75))|0);
  var $582=$X133;
  var $583=((($582)*(526))|0);
  var $584=((($581)+($583))|0);
  var $585=$X135;
  var $586=((($585)*(787))|0);
  var $587=((($584)+($586))|0);
  var $588=(($587)|0);
  var $589=((($588)+(512))|0);
  var $590=$589 >> 10;
  var $591=$2;
  var $592=__ZN4jpgd12DCT_Upsample8Matrix442atEii($591, 3, 2);
  HEAP32[(($592)>>2)]=$590;
  var $593=$X136;
  var $594=$2;
  var $595=__ZN4jpgd12DCT_Upsample8Matrix442atEii($594, 3, 3);
  HEAP32[(($595)>>2)]=$593;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  var $24=$3;
  var $25=(($24+80)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  $X005=$27;
  var $28=$3;
  var $29=(($28+96)|0);
  var $30=HEAP16[(($29)>>1)];
  var $31=(($30 << 16) >> 16);
  $X006=$31;
  $X007=0;
  var $32=$3;
  var $33=(($32+2)|0);
  var $34=HEAP16[(($33)>>1)];
  var $35=(($34 << 16) >> 16);
  var $36=((($35)*(426))|0);
  var $37=$3;
  var $38=(($37+6)|0);
  var $39=HEAP16[(($38)>>1)];
  var $40=(($39 << 16) >> 16);
  var $41=((($40)*(810))|0);
  var $42=((($36)+($41))|0);
  var $43=$3;
  var $44=(($43+10)|0);
  var $45=HEAP16[(($44)>>1)];
  var $46=(($45 << 16) >> 16);
  var $47=((($46)*(-360))|0);
  var $48=((($42)+($47))|0);
  var $49=$3;
  var $50=(($49+14)|0);
  var $51=HEAP16[(($50)>>1)];
  var $52=(($51 << 16) >> 16);
  var $53=((($52)*(284))|0);
  var $54=((($48)+($53))|0);
  var $55=((($54)+(512))|0);
  var $56=$55 >> 10;
  $X010=$56;
  var $57=$3;
  var $58=(($57+18)|0);
  var $59=HEAP16[(($58)>>1)];
  var $60=(($59 << 16) >> 16);
  var $61=((($60)*(426))|0);
  var $62=$3;
  var $63=(($62+22)|0);
  var $64=HEAP16[(($63)>>1)];
  var $65=(($64 << 16) >> 16);
  var $66=((($65)*(810))|0);
  var $67=((($61)+($66))|0);
  var $68=$3;
  var $69=(($68+26)|0);
  var $70=HEAP16[(($69)>>1)];
  var $71=(($70 << 16) >> 16);
  var $72=((($71)*(-360))|0);
  var $73=((($67)+($72))|0);
  var $74=$3;
  var $75=(($74+30)|0);
  var $76=HEAP16[(($75)>>1)];
  var $77=(($76 << 16) >> 16);
  var $78=((($77)*(284))|0);
  var $79=((($73)+($78))|0);
  var $80=((($79)+(512))|0);
  var $81=$80 >> 10;
  $X011=$81;
  var $82=$3;
  var $83=(($82+34)|0);
  var $84=HEAP16[(($83)>>1)];
  var $85=(($84 << 16) >> 16);
  var $86=((($85)*(426))|0);
  var $87=$3;
  var $88=(($87+38)|0);
  var $89=HEAP16[(($88)>>1)];
  var $90=(($89 << 16) >> 16);
  var $91=((($90)*(810))|0);
  var $92=((($86)+($91))|0);
  var $93=$3;
  var $94=(($93+42)|0);
  var $95=HEAP16[(($94)>>1)];
  var $96=(($95 << 16) >> 16);
  var $97=((($96)*(-360))|0);
  var $98=((($92)+($97))|0);
  var $99=$3;
  var $100=(($99+46)|0);
  var $101=HEAP16[(($100)>>1)];
  var $102=(($101 << 16) >> 16);
  var $103=((($102)*(284))|0);
  var $104=((($98)+($103))|0);
  var $105=((($104)+(512))|0);
  var $106=$105 >> 10;
  $X012=$106;
  var $107=$3;
  var $108=(($107+50)|0);
  var $109=HEAP16[(($108)>>1)];
  var $110=(($109 << 16) >> 16);
  var $111=((($110)*(426))|0);
  var $112=$3;
  var $113=(($112+54)|0);
  var $114=HEAP16[(($113)>>1)];
  var $115=(($114 << 16) >> 16);
  var $116=((($115)*(810))|0);
  var $117=((($111)+($116))|0);
  var $118=$3;
  var $119=(($118+58)|0);
  var $120=HEAP16[(($119)>>1)];
  var $121=(($120 << 16) >> 16);
  var $122=((($121)*(-360))|0);
  var $123=((($117)+($122))|0);
  var $124=$3;
  var $125=(($124+62)|0);
  var $126=HEAP16[(($125)>>1)];
  var $127=(($126 << 16) >> 16);
  var $128=((($127)*(284))|0);
  var $129=((($123)+($128))|0);
  var $130=((($129)+(512))|0);
  var $131=$130 >> 10;
  $X013=$131;
  var $132=$3;
  var $133=(($132+66)|0);
  var $134=HEAP16[(($133)>>1)];
  var $135=(($134 << 16) >> 16);
  var $136=((($135)*(426))|0);
  var $137=$3;
  var $138=(($137+70)|0);
  var $139=HEAP16[(($138)>>1)];
  var $140=(($139 << 16) >> 16);
  var $141=((($140)*(810))|0);
  var $142=((($136)+($141))|0);
  var $143=$3;
  var $144=(($143+74)|0);
  var $145=HEAP16[(($144)>>1)];
  var $146=(($145 << 16) >> 16);
  var $147=((($146)*(-360))|0);
  var $148=((($142)+($147))|0);
  var $149=$3;
  var $150=(($149+78)|0);
  var $151=HEAP16[(($150)>>1)];
  var $152=(($151 << 16) >> 16);
  var $153=((($152)*(284))|0);
  var $154=((($148)+($153))|0);
  var $155=((($154)+(512))|0);
  var $156=$155 >> 10;
  $X014=$156;
  var $157=$3;
  var $158=(($157+82)|0);
  var $159=HEAP16[(($158)>>1)];
  var $160=(($159 << 16) >> 16);
  var $161=((($160)*(426))|0);
  var $162=$3;
  var $163=(($162+86)|0);
  var $164=HEAP16[(($163)>>1)];
  var $165=(($164 << 16) >> 16);
  var $166=((($165)*(810))|0);
  var $167=((($161)+($166))|0);
  var $168=$3;
  var $169=(($168+90)|0);
  var $170=HEAP16[(($169)>>1)];
  var $171=(($170 << 16) >> 16);
  var $172=((($171)*(-360))|0);
  var $173=((($167)+($172))|0);
  var $174=$3;
  var $175=(($174+94)|0);
  var $176=HEAP16[(($175)>>1)];
  var $177=(($176 << 16) >> 16);
  var $178=((($177)*(284))|0);
  var $179=((($173)+($178))|0);
  var $180=((($179)+(512))|0);
  var $181=$180 >> 10;
  $X015=$181;
  var $182=$3;
  var $183=(($182+98)|0);
  var $184=HEAP16[(($183)>>1)];
  var $185=(($184 << 16) >> 16);
  var $186=((($185)*(426))|0);
  var $187=$3;
  var $188=(($187+102)|0);
  var $189=HEAP16[(($188)>>1)];
  var $190=(($189 << 16) >> 16);
  var $191=((($190)*(810))|0);
  var $192=((($186)+($191))|0);
  var $193=$3;
  var $194=(($193+106)|0);
  var $195=HEAP16[(($194)>>1)];
  var $196=(($195 << 16) >> 16);
  var $197=((($196)*(-360))|0);
  var $198=((($192)+($197))|0);
  var $199=$3;
  var $200=(($199+110)|0);
  var $201=HEAP16[(($200)>>1)];
  var $202=(($201 << 16) >> 16);
  var $203=((($202)*(284))|0);
  var $204=((($198)+($203))|0);
  var $205=((($204)+(512))|0);
  var $206=$205 >> 10;
  $X016=$206;
  $X017=0;
  var $207=$3;
  var $208=(($207+8)|0);
  var $209=HEAP16[(($208)>>1)];
  var $210=(($209 << 16) >> 16);
  $X020=$210;
  var $211=$3;
  var $212=(($211+24)|0);
  var $213=HEAP16[(($212)>>1)];
  var $214=(($213 << 16) >> 16);
  $X021=$214;
  var $215=$3;
  var $216=(($215+40)|0);
  var $217=HEAP16[(($216)>>1)];
  var $218=(($217 << 16) >> 16);
  $X022=$218;
  var $219=$3;
  var $220=(($219+56)|0);
  var $221=HEAP16[(($220)>>1)];
  var $222=(($221 << 16) >> 16);
  $X023=$222;
  var $223=$3;
  var $224=(($223+72)|0);
  var $225=HEAP16[(($224)>>1)];
  var $226=(($225 << 16) >> 16);
  $X024=$226;
  var $227=$3;
  var $228=(($227+88)|0);
  var $229=HEAP16[(($228)>>1)];
  var $230=(($229 << 16) >> 16);
  $X025=$230;
  var $231=$3;
  var $232=(($231+104)|0);
  var $233=HEAP16[(($232)>>1)];
  var $234=(($233 << 16) >> 16);
  $X026=$234;
  $X027=0;
  var $235=$3;
  var $236=(($235+2)|0);
  var $237=HEAP16[(($236)>>1)];
  var $238=(($237 << 16) >> 16);
  var $239=((($238)*(23))|0);
  var $240=$3;
  var $241=(($240+6)|0);
  var $242=HEAP16[(($241)>>1)];
  var $243=(($242 << 16) >> 16);
  var $244=((($243)*(-99))|0);
  var $245=((($239)+($244))|0);
  var $246=$3;
  var $247=(($246+10)|0);
  var $248=HEAP16[(($247)>>1)];
  var $249=(($248 << 16) >> 16);
  var $250=((($249)*(502))|0);
  var $251=((($245)+($250))|0);
  var $252=$3;
  var $253=(($252+14)|0);
  var $254=HEAP16[(($253)>>1)];
  var $255=(($254 << 16) >> 16);
  var $256=((($255)*(887))|0);
  var $257=((($251)+($256))|0);
  var $258=((($257)+(512))|0);
  var $259=$258 >> 10;
  $X030=$259;
  var $260=$3;
  var $261=(($260+18)|0);
  var $262=HEAP16[(($261)>>1)];
  var $263=(($262 << 16) >> 16);
  var $264=((($263)*(23))|0);
  var $265=$3;
  var $266=(($265+22)|0);
  var $267=HEAP16[(($266)>>1)];
  var $268=(($267 << 16) >> 16);
  var $269=((($268)*(-99))|0);
  var $270=((($264)+($269))|0);
  var $271=$3;
  var $272=(($271+26)|0);
  var $273=HEAP16[(($272)>>1)];
  var $274=(($273 << 16) >> 16);
  var $275=((($274)*(502))|0);
  var $276=((($270)+($275))|0);
  var $277=$3;
  var $278=(($277+30)|0);
  var $279=HEAP16[(($278)>>1)];
  var $280=(($279 << 16) >> 16);
  var $281=((($280)*(887))|0);
  var $282=((($276)+($281))|0);
  var $283=((($282)+(512))|0);
  var $284=$283 >> 10;
  $X031=$284;
  var $285=$3;
  var $286=(($285+34)|0);
  var $287=HEAP16[(($286)>>1)];
  var $288=(($287 << 16) >> 16);
  var $289=((($288)*(23))|0);
  var $290=$3;
  var $291=(($290+38)|0);
  var $292=HEAP16[(($291)>>1)];
  var $293=(($292 << 16) >> 16);
  var $294=((($293)*(-99))|0);
  var $295=((($289)+($294))|0);
  var $296=$3;
  var $297=(($296+42)|0);
  var $298=HEAP16[(($297)>>1)];
  var $299=(($298 << 16) >> 16);
  var $300=((($299)*(502))|0);
  var $301=((($295)+($300))|0);
  var $302=$3;
  var $303=(($302+46)|0);
  var $304=HEAP16[(($303)>>1)];
  var $305=(($304 << 16) >> 16);
  var $306=((($305)*(887))|0);
  var $307=((($301)+($306))|0);
  var $308=((($307)+(512))|0);
  var $309=$308 >> 10;
  $X032=$309;
  var $310=$3;
  var $311=(($310+50)|0);
  var $312=HEAP16[(($311)>>1)];
  var $313=(($312 << 16) >> 16);
  var $314=((($313)*(23))|0);
  var $315=$3;
  var $316=(($315+54)|0);
  var $317=HEAP16[(($316)>>1)];
  var $318=(($317 << 16) >> 16);
  var $319=((($318)*(-99))|0);
  var $320=((($314)+($319))|0);
  var $321=$3;
  var $322=(($321+58)|0);
  var $323=HEAP16[(($322)>>1)];
  var $324=(($323 << 16) >> 16);
  var $325=((($324)*(502))|0);
  var $326=((($320)+($325))|0);
  var $327=$3;
  var $328=(($327+62)|0);
  var $329=HEAP16[(($328)>>1)];
  var $330=(($329 << 16) >> 16);
  var $331=((($330)*(887))|0);
  var $332=((($326)+($331))|0);
  var $333=((($332)+(512))|0);
  var $334=$333 >> 10;
  $X033=$334;
  var $335=$3;
  var $336=(($335+66)|0);
  var $337=HEAP16[(($336)>>1)];
  var $338=(($337 << 16) >> 16);
  var $339=((($338)*(23))|0);
  var $340=$3;
  var $341=(($340+70)|0);
  var $342=HEAP16[(($341)>>1)];
  var $343=(($342 << 16) >> 16);
  var $344=((($343)*(-99))|0);
  var $345=((($339)+($344))|0);
  var $346=$3;
  var $347=(($346+74)|0);
  var $348=HEAP16[(($347)>>1)];
  var $349=(($348 << 16) >> 16);
  var $350=((($349)*(502))|0);
  var $351=((($345)+($350))|0);
  var $352=$3;
  var $353=(($352+78)|0);
  var $354=HEAP16[(($353)>>1)];
  var $355=(($354 << 16) >> 16);
  var $356=((($355)*(887))|0);
  var $357=((($351)+($356))|0);
  var $358=((($357)+(512))|0);
  var $359=$358 >> 10;
  $X034=$359;
  var $360=$3;
  var $361=(($360+82)|0);
  var $362=HEAP16[(($361)>>1)];
  var $363=(($362 << 16) >> 16);
  var $364=((($363)*(23))|0);
  var $365=$3;
  var $366=(($365+86)|0);
  var $367=HEAP16[(($366)>>1)];
  var $368=(($367 << 16) >> 16);
  var $369=((($368)*(-99))|0);
  var $370=((($364)+($369))|0);
  var $371=$3;
  var $372=(($371+90)|0);
  var $373=HEAP16[(($372)>>1)];
  var $374=(($373 << 16) >> 16);
  var $375=((($374)*(502))|0);
  var $376=((($370)+($375))|0);
  var $377=$3;
  var $378=(($377+94)|0);
  var $379=HEAP16[(($378)>>1)];
  var $380=(($379 << 16) >> 16);
  var $381=((($380)*(887))|0);
  var $382=((($376)+($381))|0);
  var $383=((($382)+(512))|0);
  var $384=$383 >> 10;
  $X035=$384;
  var $385=$3;
  var $386=(($385+98)|0);
  var $387=HEAP16[(($386)>>1)];
  var $388=(($387 << 16) >> 16);
  var $389=((($388)*(23))|0);
  var $390=$3;
  var $391=(($390+102)|0);
  var $392=HEAP16[(($391)>>1)];
  var $393=(($392 << 16) >> 16);
  var $394=((($393)*(-99))|0);
  var $395=((($389)+($394))|0);
  var $396=$3;
  var $397=(($396+106)|0);
  var $398=HEAP16[(($397)>>1)];
  var $399=(($398 << 16) >> 16);
  var $400=((($399)*(502))|0);
  var $401=((($395)+($400))|0);
  var $402=$3;
  var $403=(($402+110)|0);
  var $404=HEAP16[(($403)>>1)];
  var $405=(($404 << 16) >> 16);
  var $406=((($405)*(887))|0);
  var $407=((($401)+($406))|0);
  var $408=((($407)+(512))|0);
  var $409=$408 >> 10;
  $X036=$409;
  $X037=0;
  var $410=$X000;
  var $411=$1;
  var $412=__ZN4jpgd12DCT_Upsample8Matrix442atEii($411, 0, 0);
  HEAP32[(($412)>>2)]=$410;
  var $413=$X001;
  var $414=((($413)*(426))|0);
  var $415=$X003;
  var $416=((($415)*(810))|0);
  var $417=((($414)+($416))|0);
  var $418=$X005;
  var $419=((($418)*(-360))|0);
  var $420=((($417)+($419))|0);
  var $421=(($420)|0);
  var $422=((($421)+(512))|0);
  var $423=$422 >> 10;
  var $424=$1;
  var $425=__ZN4jpgd12DCT_Upsample8Matrix442atEii($424, 0, 1);
  HEAP32[(($425)>>2)]=$423;
  var $426=$X004;
  var $427=$1;
  var $428=__ZN4jpgd12DCT_Upsample8Matrix442atEii($427, 0, 2);
  HEAP32[(($428)>>2)]=$426;
  var $429=$X001;
  var $430=((($429)*(23))|0);
  var $431=$X003;
  var $432=((($431)*(-99))|0);
  var $433=((($430)+($432))|0);
  var $434=$X005;
  var $435=((($434)*(502))|0);
  var $436=((($433)+($435))|0);
  var $437=(($436)|0);
  var $438=((($437)+(512))|0);
  var $439=$438 >> 10;
  var $440=$1;
  var $441=__ZN4jpgd12DCT_Upsample8Matrix442atEii($440, 0, 3);
  HEAP32[(($441)>>2)]=$439;
  var $442=$X010;
  var $443=$1;
  var $444=__ZN4jpgd12DCT_Upsample8Matrix442atEii($443, 1, 0);
  HEAP32[(($444)>>2)]=$442;
  var $445=$X011;
  var $446=((($445)*(426))|0);
  var $447=$X013;
  var $448=((($447)*(810))|0);
  var $449=((($446)+($448))|0);
  var $450=$X015;
  var $451=((($450)*(-360))|0);
  var $452=((($449)+($451))|0);
  var $453=(($452)|0);
  var $454=((($453)+(512))|0);
  var $455=$454 >> 10;
  var $456=$1;
  var $457=__ZN4jpgd12DCT_Upsample8Matrix442atEii($456, 1, 1);
  HEAP32[(($457)>>2)]=$455;
  var $458=$X014;
  var $459=$1;
  var $460=__ZN4jpgd12DCT_Upsample8Matrix442atEii($459, 1, 2);
  HEAP32[(($460)>>2)]=$458;
  var $461=$X011;
  var $462=((($461)*(23))|0);
  var $463=$X013;
  var $464=((($463)*(-99))|0);
  var $465=((($462)+($464))|0);
  var $466=$X015;
  var $467=((($466)*(502))|0);
  var $468=((($465)+($467))|0);
  var $469=(($468)|0);
  var $470=((($469)+(512))|0);
  var $471=$470 >> 10;
  var $472=$1;
  var $473=__ZN4jpgd12DCT_Upsample8Matrix442atEii($472, 1, 3);
  HEAP32[(($473)>>2)]=$471;
  var $474=$X020;
  var $475=$1;
  var $476=__ZN4jpgd12DCT_Upsample8Matrix442atEii($475, 2, 0);
  HEAP32[(($476)>>2)]=$474;
  var $477=$X021;
  var $478=((($477)*(426))|0);
  var $479=$X023;
  var $480=((($479)*(810))|0);
  var $481=((($478)+($480))|0);
  var $482=$X025;
  var $483=((($482)*(-360))|0);
  var $484=((($481)+($483))|0);
  var $485=(($484)|0);
  var $486=((($485)+(512))|0);
  var $487=$486 >> 10;
  var $488=$1;
  var $489=__ZN4jpgd12DCT_Upsample8Matrix442atEii($488, 2, 1);
  HEAP32[(($489)>>2)]=$487;
  var $490=$X024;
  var $491=$1;
  var $492=__ZN4jpgd12DCT_Upsample8Matrix442atEii($491, 2, 2);
  HEAP32[(($492)>>2)]=$490;
  var $493=$X021;
  var $494=((($493)*(23))|0);
  var $495=$X023;
  var $496=((($495)*(-99))|0);
  var $497=((($494)+($496))|0);
  var $498=$X025;
  var $499=((($498)*(502))|0);
  var $500=((($497)+($499))|0);
  var $501=(($500)|0);
  var $502=((($501)+(512))|0);
  var $503=$502 >> 10;
  var $504=$1;
  var $505=__ZN4jpgd12DCT_Upsample8Matrix442atEii($504, 2, 3);
  HEAP32[(($505)>>2)]=$503;
  var $506=$X030;
  var $507=$1;
  var $508=__ZN4jpgd12DCT_Upsample8Matrix442atEii($507, 3, 0);
  HEAP32[(($508)>>2)]=$506;
  var $509=$X031;
  var $510=((($509)*(426))|0);
  var $511=$X033;
  var $512=((($511)*(810))|0);
  var $513=((($510)+($512))|0);
  var $514=$X035;
  var $515=((($514)*(-360))|0);
  var $516=((($513)+($515))|0);
  var $517=(($516)|0);
  var $518=((($517)+(512))|0);
  var $519=$518 >> 10;
  var $520=$1;
  var $521=__ZN4jpgd12DCT_Upsample8Matrix442atEii($520, 3, 1);
  HEAP32[(($521)>>2)]=$519;
  var $522=$X034;
  var $523=$1;
  var $524=__ZN4jpgd12DCT_Upsample8Matrix442atEii($523, 3, 2);
  HEAP32[(($524)>>2)]=$522;
  var $525=$X031;
  var $526=((($525)*(23))|0);
  var $527=$X033;
  var $528=((($527)*(-99))|0);
  var $529=((($526)+($528))|0);
  var $530=$X035;
  var $531=((($530)*(502))|0);
  var $532=((($529)+($531))|0);
  var $533=(($532)|0);
  var $534=((($533)+(512))|0);
  var $535=$534 >> 10;
  var $536=$1;
  var $537=__ZN4jpgd12DCT_Upsample8Matrix442atEii($536, 3, 3);
  HEAP32[(($537)>>2)]=$535;
  var $538=$X001;
  var $539=((($538)*(928))|0);
  var $540=$X003;
  var $541=((($540)*(-325))|0);
  var $542=((($539)+($541))|0);
  var $543=$X005;
  var $544=((($543)*(218))|0);
  var $545=((($542)+($544))|0);
  var $546=(($545)|0);
  var $547=((($546)+(512))|0);
  var $548=$547 >> 10;
  var $549=$2;
  var $550=__ZN4jpgd12DCT_Upsample8Matrix442atEii($549, 0, 0);
  HEAP32[(($550)>>2)]=$548;
  var $551=$X002;
  var $552=$2;
  var $553=__ZN4jpgd12DCT_Upsample8Matrix442atEii($552, 0, 1);
  HEAP32[(($553)>>2)]=$551;
  var $554=$X001;
  var $555=((($554)*(-75))|0);
  var $556=$X003;
  var $557=((($556)*(526))|0);
  var $558=((($555)+($557))|0);
  var $559=$X005;
  var $560=((($559)*(787))|0);
  var $561=((($558)+($560))|0);
  var $562=(($561)|0);
  var $563=((($562)+(512))|0);
  var $564=$563 >> 10;
  var $565=$2;
  var $566=__ZN4jpgd12DCT_Upsample8Matrix442atEii($565, 0, 2);
  HEAP32[(($566)>>2)]=$564;
  var $567=$X006;
  var $568=$2;
  var $569=__ZN4jpgd12DCT_Upsample8Matrix442atEii($568, 0, 3);
  HEAP32[(($569)>>2)]=$567;
  var $570=$X011;
  var $571=((($570)*(928))|0);
  var $572=$X013;
  var $573=((($572)*(-325))|0);
  var $574=((($571)+($573))|0);
  var $575=$X015;
  var $576=((($575)*(218))|0);
  var $577=((($574)+($576))|0);
  var $578=(($577)|0);
  var $579=((($578)+(512))|0);
  var $580=$579 >> 10;
  var $581=$2;
  var $582=__ZN4jpgd12DCT_Upsample8Matrix442atEii($581, 1, 0);
  HEAP32[(($582)>>2)]=$580;
  var $583=$X012;
  var $584=$2;
  var $585=__ZN4jpgd12DCT_Upsample8Matrix442atEii($584, 1, 1);
  HEAP32[(($585)>>2)]=$583;
  var $586=$X011;
  var $587=((($586)*(-75))|0);
  var $588=$X013;
  var $589=((($588)*(526))|0);
  var $590=((($587)+($589))|0);
  var $591=$X015;
  var $592=((($591)*(787))|0);
  var $593=((($590)+($592))|0);
  var $594=(($593)|0);
  var $595=((($594)+(512))|0);
  var $596=$595 >> 10;
  var $597=$2;
  var $598=__ZN4jpgd12DCT_Upsample8Matrix442atEii($597, 1, 2);
  HEAP32[(($598)>>2)]=$596;
  var $599=$X016;
  var $600=$2;
  var $601=__ZN4jpgd12DCT_Upsample8Matrix442atEii($600, 1, 3);
  HEAP32[(($601)>>2)]=$599;
  var $602=$X021;
  var $603=((($602)*(928))|0);
  var $604=$X023;
  var $605=((($604)*(-325))|0);
  var $606=((($603)+($605))|0);
  var $607=$X025;
  var $608=((($607)*(218))|0);
  var $609=((($606)+($608))|0);
  var $610=(($609)|0);
  var $611=((($610)+(512))|0);
  var $612=$611 >> 10;
  var $613=$2;
  var $614=__ZN4jpgd12DCT_Upsample8Matrix442atEii($613, 2, 0);
  HEAP32[(($614)>>2)]=$612;
  var $615=$X022;
  var $616=$2;
  var $617=__ZN4jpgd12DCT_Upsample8Matrix442atEii($616, 2, 1);
  HEAP32[(($617)>>2)]=$615;
  var $618=$X021;
  var $619=((($618)*(-75))|0);
  var $620=$X023;
  var $621=((($620)*(526))|0);
  var $622=((($619)+($621))|0);
  var $623=$X025;
  var $624=((($623)*(787))|0);
  var $625=((($622)+($624))|0);
  var $626=(($625)|0);
  var $627=((($626)+(512))|0);
  var $628=$627 >> 10;
  var $629=$2;
  var $630=__ZN4jpgd12DCT_Upsample8Matrix442atEii($629, 2, 2);
  HEAP32[(($630)>>2)]=$628;
  var $631=$X026;
  var $632=$2;
  var $633=__ZN4jpgd12DCT_Upsample8Matrix442atEii($632, 2, 3);
  HEAP32[(($633)>>2)]=$631;
  var $634=$X031;
  var $635=((($634)*(928))|0);
  var $636=$X033;
  var $637=((($636)*(-325))|0);
  var $638=((($635)+($637))|0);
  var $639=$X035;
  var $640=((($639)*(218))|0);
  var $641=((($638)+($640))|0);
  var $642=(($641)|0);
  var $643=((($642)+(512))|0);
  var $644=$643 >> 10;
  var $645=$2;
  var $646=__ZN4jpgd12DCT_Upsample8Matrix442atEii($645, 3, 0);
  HEAP32[(($646)>>2)]=$644;
  var $647=$X032;
  var $648=$2;
  var $649=__ZN4jpgd12DCT_Upsample8Matrix442atEii($648, 3, 1);
  HEAP32[(($649)>>2)]=$647;
  var $650=$X031;
  var $651=((($650)*(-75))|0);
  var $652=$X033;
  var $653=((($652)*(526))|0);
  var $654=((($651)+($653))|0);
  var $655=$X035;
  var $656=((($655)*(787))|0);
  var $657=((($654)+($656))|0);
  var $658=(($657)|0);
  var $659=((($658)+(512))|0);
  var $660=$659 >> 10;
  var $661=$2;
  var $662=__ZN4jpgd12DCT_Upsample8Matrix442atEii($661, 3, 2);
  HEAP32[(($662)>>2)]=$660;
  var $663=$X036;
  var $664=$2;
  var $665=__ZN4jpgd12DCT_Upsample8Matrix442atEii($664, 3, 3);
  HEAP32[(($665)>>2)]=$663;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=$3;
  var $16=(($15+10)|0);
  var $17=HEAP16[(($16)>>1)];
  var $18=(($17 << 16) >> 16);
  var $19=((($18)*(218))|0);
  var $20=((($14)+($19))|0);
  var $21=$3;
  var $22=(($21+14)|0);
  var $23=HEAP16[(($22)>>1)];
  var $24=(($23 << 16) >> 16);
  var $25=((($24)*(-184))|0);
  var $26=((($20)+($25))|0);
  var $27=((($26)+(512))|0);
  var $28=$27 >> 10;
  $X100=$28;
  var $29=$3;
  var $30=(($29+18)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(928))|0);
  var $34=$3;
  var $35=(($34+22)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(-325))|0);
  var $39=((($33)+($38))|0);
  var $40=$3;
  var $41=(($40+26)|0);
  var $42=HEAP16[(($41)>>1)];
  var $43=(($42 << 16) >> 16);
  var $44=((($43)*(218))|0);
  var $45=((($39)+($44))|0);
  var $46=$3;
  var $47=(($46+30)|0);
  var $48=HEAP16[(($47)>>1)];
  var $49=(($48 << 16) >> 16);
  var $50=((($49)*(-184))|0);
  var $51=((($45)+($50))|0);
  var $52=((($51)+(512))|0);
  var $53=$52 >> 10;
  $X101=$53;
  var $54=$3;
  var $55=(($54+34)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(928))|0);
  var $59=$3;
  var $60=(($59+38)|0);
  var $61=HEAP16[(($60)>>1)];
  var $62=(($61 << 16) >> 16);
  var $63=((($62)*(-325))|0);
  var $64=((($58)+($63))|0);
  var $65=$3;
  var $66=(($65+42)|0);
  var $67=HEAP16[(($66)>>1)];
  var $68=(($67 << 16) >> 16);
  var $69=((($68)*(218))|0);
  var $70=((($64)+($69))|0);
  var $71=$3;
  var $72=(($71+46)|0);
  var $73=HEAP16[(($72)>>1)];
  var $74=(($73 << 16) >> 16);
  var $75=((($74)*(-184))|0);
  var $76=((($70)+($75))|0);
  var $77=((($76)+(512))|0);
  var $78=$77 >> 10;
  $X102=$78;
  var $79=$3;
  var $80=(($79+50)|0);
  var $81=HEAP16[(($80)>>1)];
  var $82=(($81 << 16) >> 16);
  var $83=((($82)*(928))|0);
  var $84=$3;
  var $85=(($84+54)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(-325))|0);
  var $89=((($83)+($88))|0);
  var $90=$3;
  var $91=(($90+58)|0);
  var $92=HEAP16[(($91)>>1)];
  var $93=(($92 << 16) >> 16);
  var $94=((($93)*(218))|0);
  var $95=((($89)+($94))|0);
  var $96=$3;
  var $97=(($96+62)|0);
  var $98=HEAP16[(($97)>>1)];
  var $99=(($98 << 16) >> 16);
  var $100=((($99)*(-184))|0);
  var $101=((($95)+($100))|0);
  var $102=((($101)+(512))|0);
  var $103=$102 >> 10;
  $X103=$103;
  var $104=$3;
  var $105=(($104+66)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(928))|0);
  var $109=$3;
  var $110=(($109+70)|0);
  var $111=HEAP16[(($110)>>1)];
  var $112=(($111 << 16) >> 16);
  var $113=((($112)*(-325))|0);
  var $114=((($108)+($113))|0);
  var $115=$3;
  var $116=(($115+74)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(218))|0);
  var $120=((($114)+($119))|0);
  var $121=$3;
  var $122=(($121+78)|0);
  var $123=HEAP16[(($122)>>1)];
  var $124=(($123 << 16) >> 16);
  var $125=((($124)*(-184))|0);
  var $126=((($120)+($125))|0);
  var $127=((($126)+(512))|0);
  var $128=$127 >> 10;
  $X104=$128;
  var $129=$3;
  var $130=(($129+82)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(928))|0);
  var $134=$3;
  var $135=(($134+86)|0);
  var $136=HEAP16[(($135)>>1)];
  var $137=(($136 << 16) >> 16);
  var $138=((($137)*(-325))|0);
  var $139=((($133)+($138))|0);
  var $140=$3;
  var $141=(($140+90)|0);
  var $142=HEAP16[(($141)>>1)];
  var $143=(($142 << 16) >> 16);
  var $144=((($143)*(218))|0);
  var $145=((($139)+($144))|0);
  var $146=$3;
  var $147=(($146+94)|0);
  var $148=HEAP16[(($147)>>1)];
  var $149=(($148 << 16) >> 16);
  var $150=((($149)*(-184))|0);
  var $151=((($145)+($150))|0);
  var $152=((($151)+(512))|0);
  var $153=$152 >> 10;
  $X105=$153;
  var $154=$3;
  var $155=(($154+98)|0);
  var $156=HEAP16[(($155)>>1)];
  var $157=(($156 << 16) >> 16);
  var $158=((($157)*(928))|0);
  var $159=$3;
  var $160=(($159+102)|0);
  var $161=HEAP16[(($160)>>1)];
  var $162=(($161 << 16) >> 16);
  var $163=((($162)*(-325))|0);
  var $164=((($158)+($163))|0);
  var $165=$3;
  var $166=(($165+106)|0);
  var $167=HEAP16[(($166)>>1)];
  var $168=(($167 << 16) >> 16);
  var $169=((($168)*(218))|0);
  var $170=((($164)+($169))|0);
  var $171=$3;
  var $172=(($171+110)|0);
  var $173=HEAP16[(($172)>>1)];
  var $174=(($173 << 16) >> 16);
  var $175=((($174)*(-184))|0);
  var $176=((($170)+($175))|0);
  var $177=((($176)+(512))|0);
  var $178=$177 >> 10;
  $X106=$178;
  $X107=0;
  var $179=$3;
  var $180=(($179+4)|0);
  var $181=HEAP16[(($180)>>1)];
  var $182=(($181 << 16) >> 16);
  $X110=$182;
  var $183=$3;
  var $184=(($183+20)|0);
  var $185=HEAP16[(($184)>>1)];
  var $186=(($185 << 16) >> 16);
  $X111=$186;
  var $187=$3;
  var $188=(($187+36)|0);
  var $189=HEAP16[(($188)>>1)];
  var $190=(($189 << 16) >> 16);
  $X112=$190;
  var $191=$3;
  var $192=(($191+52)|0);
  var $193=HEAP16[(($192)>>1)];
  var $194=(($193 << 16) >> 16);
  $X113=$194;
  var $195=$3;
  var $196=(($195+68)|0);
  var $197=HEAP16[(($196)>>1)];
  var $198=(($197 << 16) >> 16);
  $X114=$198;
  var $199=$3;
  var $200=(($199+84)|0);
  var $201=HEAP16[(($200)>>1)];
  var $202=(($201 << 16) >> 16);
  $X115=$202;
  var $203=$3;
  var $204=(($203+100)|0);
  var $205=HEAP16[(($204)>>1)];
  var $206=(($205 << 16) >> 16);
  $X116=$206;
  $X117=0;
  var $207=$3;
  var $208=(($207+2)|0);
  var $209=HEAP16[(($208)>>1)];
  var $210=(($209 << 16) >> 16);
  var $211=((($210)*(-75))|0);
  var $212=$3;
  var $213=(($212+6)|0);
  var $214=HEAP16[(($213)>>1)];
  var $215=(($214 << 16) >> 16);
  var $216=((($215)*(526))|0);
  var $217=((($211)+($216))|0);
  var $218=$3;
  var $219=(($218+10)|0);
  var $220=HEAP16[(($219)>>1)];
  var $221=(($220 << 16) >> 16);
  var $222=((($221)*(787))|0);
  var $223=((($217)+($222))|0);
  var $224=$3;
  var $225=(($224+14)|0);
  var $226=HEAP16[(($225)>>1)];
  var $227=(($226 << 16) >> 16);
  var $228=((($227)*(-383))|0);
  var $229=((($223)+($228))|0);
  var $230=((($229)+(512))|0);
  var $231=$230 >> 10;
  $X120=$231;
  var $232=$3;
  var $233=(($232+18)|0);
  var $234=HEAP16[(($233)>>1)];
  var $235=(($234 << 16) >> 16);
  var $236=((($235)*(-75))|0);
  var $237=$3;
  var $238=(($237+22)|0);
  var $239=HEAP16[(($238)>>1)];
  var $240=(($239 << 16) >> 16);
  var $241=((($240)*(526))|0);
  var $242=((($236)+($241))|0);
  var $243=$3;
  var $244=(($243+26)|0);
  var $245=HEAP16[(($244)>>1)];
  var $246=(($245 << 16) >> 16);
  var $247=((($246)*(787))|0);
  var $248=((($242)+($247))|0);
  var $249=$3;
  var $250=(($249+30)|0);
  var $251=HEAP16[(($250)>>1)];
  var $252=(($251 << 16) >> 16);
  var $253=((($252)*(-383))|0);
  var $254=((($248)+($253))|0);
  var $255=((($254)+(512))|0);
  var $256=$255 >> 10;
  $X121=$256;
  var $257=$3;
  var $258=(($257+34)|0);
  var $259=HEAP16[(($258)>>1)];
  var $260=(($259 << 16) >> 16);
  var $261=((($260)*(-75))|0);
  var $262=$3;
  var $263=(($262+38)|0);
  var $264=HEAP16[(($263)>>1)];
  var $265=(($264 << 16) >> 16);
  var $266=((($265)*(526))|0);
  var $267=((($261)+($266))|0);
  var $268=$3;
  var $269=(($268+42)|0);
  var $270=HEAP16[(($269)>>1)];
  var $271=(($270 << 16) >> 16);
  var $272=((($271)*(787))|0);
  var $273=((($267)+($272))|0);
  var $274=$3;
  var $275=(($274+46)|0);
  var $276=HEAP16[(($275)>>1)];
  var $277=(($276 << 16) >> 16);
  var $278=((($277)*(-383))|0);
  var $279=((($273)+($278))|0);
  var $280=((($279)+(512))|0);
  var $281=$280 >> 10;
  $X122=$281;
  var $282=$3;
  var $283=(($282+50)|0);
  var $284=HEAP16[(($283)>>1)];
  var $285=(($284 << 16) >> 16);
  var $286=((($285)*(-75))|0);
  var $287=$3;
  var $288=(($287+54)|0);
  var $289=HEAP16[(($288)>>1)];
  var $290=(($289 << 16) >> 16);
  var $291=((($290)*(526))|0);
  var $292=((($286)+($291))|0);
  var $293=$3;
  var $294=(($293+58)|0);
  var $295=HEAP16[(($294)>>1)];
  var $296=(($295 << 16) >> 16);
  var $297=((($296)*(787))|0);
  var $298=((($292)+($297))|0);
  var $299=$3;
  var $300=(($299+62)|0);
  var $301=HEAP16[(($300)>>1)];
  var $302=(($301 << 16) >> 16);
  var $303=((($302)*(-383))|0);
  var $304=((($298)+($303))|0);
  var $305=((($304)+(512))|0);
  var $306=$305 >> 10;
  $X123=$306;
  var $307=$3;
  var $308=(($307+66)|0);
  var $309=HEAP16[(($308)>>1)];
  var $310=(($309 << 16) >> 16);
  var $311=((($310)*(-75))|0);
  var $312=$3;
  var $313=(($312+70)|0);
  var $314=HEAP16[(($313)>>1)];
  var $315=(($314 << 16) >> 16);
  var $316=((($315)*(526))|0);
  var $317=((($311)+($316))|0);
  var $318=$3;
  var $319=(($318+74)|0);
  var $320=HEAP16[(($319)>>1)];
  var $321=(($320 << 16) >> 16);
  var $322=((($321)*(787))|0);
  var $323=((($317)+($322))|0);
  var $324=$3;
  var $325=(($324+78)|0);
  var $326=HEAP16[(($325)>>1)];
  var $327=(($326 << 16) >> 16);
  var $328=((($327)*(-383))|0);
  var $329=((($323)+($328))|0);
  var $330=((($329)+(512))|0);
  var $331=$330 >> 10;
  $X124=$331;
  var $332=$3;
  var $333=(($332+82)|0);
  var $334=HEAP16[(($333)>>1)];
  var $335=(($334 << 16) >> 16);
  var $336=((($335)*(-75))|0);
  var $337=$3;
  var $338=(($337+86)|0);
  var $339=HEAP16[(($338)>>1)];
  var $340=(($339 << 16) >> 16);
  var $341=((($340)*(526))|0);
  var $342=((($336)+($341))|0);
  var $343=$3;
  var $344=(($343+90)|0);
  var $345=HEAP16[(($344)>>1)];
  var $346=(($345 << 16) >> 16);
  var $347=((($346)*(787))|0);
  var $348=((($342)+($347))|0);
  var $349=$3;
  var $350=(($349+94)|0);
  var $351=HEAP16[(($350)>>1)];
  var $352=(($351 << 16) >> 16);
  var $353=((($352)*(-383))|0);
  var $354=((($348)+($353))|0);
  var $355=((($354)+(512))|0);
  var $356=$355 >> 10;
  $X125=$356;
  var $357=$3;
  var $358=(($357+98)|0);
  var $359=HEAP16[(($358)>>1)];
  var $360=(($359 << 16) >> 16);
  var $361=((($360)*(-75))|0);
  var $362=$3;
  var $363=(($362+102)|0);
  var $364=HEAP16[(($363)>>1)];
  var $365=(($364 << 16) >> 16);
  var $366=((($365)*(526))|0);
  var $367=((($361)+($366))|0);
  var $368=$3;
  var $369=(($368+106)|0);
  var $370=HEAP16[(($369)>>1)];
  var $371=(($370 << 16) >> 16);
  var $372=((($371)*(787))|0);
  var $373=((($367)+($372))|0);
  var $374=$3;
  var $375=(($374+110)|0);
  var $376=HEAP16[(($375)>>1)];
  var $377=(($376 << 16) >> 16);
  var $378=((($377)*(-383))|0);
  var $379=((($373)+($378))|0);
  var $380=((($379)+(512))|0);
  var $381=$380 >> 10;
  $X126=$381;
  $X127=0;
  var $382=$3;
  var $383=(($382+12)|0);
  var $384=HEAP16[(($383)>>1)];
  var $385=(($384 << 16) >> 16);
  $X130=$385;
  var $386=$3;
  var $387=(($386+28)|0);
  var $388=HEAP16[(($387)>>1)];
  var $389=(($388 << 16) >> 16);
  $X131=$389;
  var $390=$3;
  var $391=(($390+44)|0);
  var $392=HEAP16[(($391)>>1)];
  var $393=(($392 << 16) >> 16);
  $X132=$393;
  var $394=$3;
  var $395=(($394+60)|0);
  var $396=HEAP16[(($395)>>1)];
  var $397=(($396 << 16) >> 16);
  $X133=$397;
  var $398=$3;
  var $399=(($398+76)|0);
  var $400=HEAP16[(($399)>>1)];
  var $401=(($400 << 16) >> 16);
  $X134=$401;
  var $402=$3;
  var $403=(($402+92)|0);
  var $404=HEAP16[(($403)>>1)];
  var $405=(($404 << 16) >> 16);
  $X135=$405;
  var $406=$3;
  var $407=(($406+108)|0);
  var $408=HEAP16[(($407)>>1)];
  var $409=(($408 << 16) >> 16);
  $X136=$409;
  $X137=0;
  var $410=$X100;
  var $411=$1;
  var $412=__ZN4jpgd12DCT_Upsample8Matrix442atEii($411, 0, 0);
  HEAP32[(($412)>>2)]=$410;
  var $413=$X101;
  var $414=((($413)*(426))|0);
  var $415=$X103;
  var $416=((($415)*(810))|0);
  var $417=((($414)+($416))|0);
  var $418=$X105;
  var $419=((($418)*(-360))|0);
  var $420=((($417)+($419))|0);
  var $421=(($420)|0);
  var $422=((($421)+(512))|0);
  var $423=$422 >> 10;
  var $424=$1;
  var $425=__ZN4jpgd12DCT_Upsample8Matrix442atEii($424, 0, 1);
  HEAP32[(($425)>>2)]=$423;
  var $426=$X104;
  var $427=$1;
  var $428=__ZN4jpgd12DCT_Upsample8Matrix442atEii($427, 0, 2);
  HEAP32[(($428)>>2)]=$426;
  var $429=$X101;
  var $430=((($429)*(23))|0);
  var $431=$X103;
  var $432=((($431)*(-99))|0);
  var $433=((($430)+($432))|0);
  var $434=$X105;
  var $435=((($434)*(502))|0);
  var $436=((($433)+($435))|0);
  var $437=(($436)|0);
  var $438=((($437)+(512))|0);
  var $439=$438 >> 10;
  var $440=$1;
  var $441=__ZN4jpgd12DCT_Upsample8Matrix442atEii($440, 0, 3);
  HEAP32[(($441)>>2)]=$439;
  var $442=$X110;
  var $443=$1;
  var $444=__ZN4jpgd12DCT_Upsample8Matrix442atEii($443, 1, 0);
  HEAP32[(($444)>>2)]=$442;
  var $445=$X111;
  var $446=((($445)*(426))|0);
  var $447=$X113;
  var $448=((($447)*(810))|0);
  var $449=((($446)+($448))|0);
  var $450=$X115;
  var $451=((($450)*(-360))|0);
  var $452=((($449)+($451))|0);
  var $453=(($452)|0);
  var $454=((($453)+(512))|0);
  var $455=$454 >> 10;
  var $456=$1;
  var $457=__ZN4jpgd12DCT_Upsample8Matrix442atEii($456, 1, 1);
  HEAP32[(($457)>>2)]=$455;
  var $458=$X114;
  var $459=$1;
  var $460=__ZN4jpgd12DCT_Upsample8Matrix442atEii($459, 1, 2);
  HEAP32[(($460)>>2)]=$458;
  var $461=$X111;
  var $462=((($461)*(23))|0);
  var $463=$X113;
  var $464=((($463)*(-99))|0);
  var $465=((($462)+($464))|0);
  var $466=$X115;
  var $467=((($466)*(502))|0);
  var $468=((($465)+($467))|0);
  var $469=(($468)|0);
  var $470=((($469)+(512))|0);
  var $471=$470 >> 10;
  var $472=$1;
  var $473=__ZN4jpgd12DCT_Upsample8Matrix442atEii($472, 1, 3);
  HEAP32[(($473)>>2)]=$471;
  var $474=$X120;
  var $475=$1;
  var $476=__ZN4jpgd12DCT_Upsample8Matrix442atEii($475, 2, 0);
  HEAP32[(($476)>>2)]=$474;
  var $477=$X121;
  var $478=((($477)*(426))|0);
  var $479=$X123;
  var $480=((($479)*(810))|0);
  var $481=((($478)+($480))|0);
  var $482=$X125;
  var $483=((($482)*(-360))|0);
  var $484=((($481)+($483))|0);
  var $485=(($484)|0);
  var $486=((($485)+(512))|0);
  var $487=$486 >> 10;
  var $488=$1;
  var $489=__ZN4jpgd12DCT_Upsample8Matrix442atEii($488, 2, 1);
  HEAP32[(($489)>>2)]=$487;
  var $490=$X124;
  var $491=$1;
  var $492=__ZN4jpgd12DCT_Upsample8Matrix442atEii($491, 2, 2);
  HEAP32[(($492)>>2)]=$490;
  var $493=$X121;
  var $494=((($493)*(23))|0);
  var $495=$X123;
  var $496=((($495)*(-99))|0);
  var $497=((($494)+($496))|0);
  var $498=$X125;
  var $499=((($498)*(502))|0);
  var $500=((($497)+($499))|0);
  var $501=(($500)|0);
  var $502=((($501)+(512))|0);
  var $503=$502 >> 10;
  var $504=$1;
  var $505=__ZN4jpgd12DCT_Upsample8Matrix442atEii($504, 2, 3);
  HEAP32[(($505)>>2)]=$503;
  var $506=$X130;
  var $507=$1;
  var $508=__ZN4jpgd12DCT_Upsample8Matrix442atEii($507, 3, 0);
  HEAP32[(($508)>>2)]=$506;
  var $509=$X131;
  var $510=((($509)*(426))|0);
  var $511=$X133;
  var $512=((($511)*(810))|0);
  var $513=((($510)+($512))|0);
  var $514=$X135;
  var $515=((($514)*(-360))|0);
  var $516=((($513)+($515))|0);
  var $517=(($516)|0);
  var $518=((($517)+(512))|0);
  var $519=$518 >> 10;
  var $520=$1;
  var $521=__ZN4jpgd12DCT_Upsample8Matrix442atEii($520, 3, 1);
  HEAP32[(($521)>>2)]=$519;
  var $522=$X134;
  var $523=$1;
  var $524=__ZN4jpgd12DCT_Upsample8Matrix442atEii($523, 3, 2);
  HEAP32[(($524)>>2)]=$522;
  var $525=$X131;
  var $526=((($525)*(23))|0);
  var $527=$X133;
  var $528=((($527)*(-99))|0);
  var $529=((($526)+($528))|0);
  var $530=$X135;
  var $531=((($530)*(502))|0);
  var $532=((($529)+($531))|0);
  var $533=(($532)|0);
  var $534=((($533)+(512))|0);
  var $535=$534 >> 10;
  var $536=$1;
  var $537=__ZN4jpgd12DCT_Upsample8Matrix442atEii($536, 3, 3);
  HEAP32[(($537)>>2)]=$535;
  var $538=$X101;
  var $539=((($538)*(928))|0);
  var $540=$X103;
  var $541=((($540)*(-325))|0);
  var $542=((($539)+($541))|0);
  var $543=$X105;
  var $544=((($543)*(218))|0);
  var $545=((($542)+($544))|0);
  var $546=(($545)|0);
  var $547=((($546)+(512))|0);
  var $548=$547 >> 10;
  var $549=$2;
  var $550=__ZN4jpgd12DCT_Upsample8Matrix442atEii($549, 0, 0);
  HEAP32[(($550)>>2)]=$548;
  var $551=$X102;
  var $552=$2;
  var $553=__ZN4jpgd12DCT_Upsample8Matrix442atEii($552, 0, 1);
  HEAP32[(($553)>>2)]=$551;
  var $554=$X101;
  var $555=((($554)*(-75))|0);
  var $556=$X103;
  var $557=((($556)*(526))|0);
  var $558=((($555)+($557))|0);
  var $559=$X105;
  var $560=((($559)*(787))|0);
  var $561=((($558)+($560))|0);
  var $562=(($561)|0);
  var $563=((($562)+(512))|0);
  var $564=$563 >> 10;
  var $565=$2;
  var $566=__ZN4jpgd12DCT_Upsample8Matrix442atEii($565, 0, 2);
  HEAP32[(($566)>>2)]=$564;
  var $567=$X106;
  var $568=$2;
  var $569=__ZN4jpgd12DCT_Upsample8Matrix442atEii($568, 0, 3);
  HEAP32[(($569)>>2)]=$567;
  var $570=$X111;
  var $571=((($570)*(928))|0);
  var $572=$X113;
  var $573=((($572)*(-325))|0);
  var $574=((($571)+($573))|0);
  var $575=$X115;
  var $576=((($575)*(218))|0);
  var $577=((($574)+($576))|0);
  var $578=(($577)|0);
  var $579=((($578)+(512))|0);
  var $580=$579 >> 10;
  var $581=$2;
  var $582=__ZN4jpgd12DCT_Upsample8Matrix442atEii($581, 1, 0);
  HEAP32[(($582)>>2)]=$580;
  var $583=$X112;
  var $584=$2;
  var $585=__ZN4jpgd12DCT_Upsample8Matrix442atEii($584, 1, 1);
  HEAP32[(($585)>>2)]=$583;
  var $586=$X111;
  var $587=((($586)*(-75))|0);
  var $588=$X113;
  var $589=((($588)*(526))|0);
  var $590=((($587)+($589))|0);
  var $591=$X115;
  var $592=((($591)*(787))|0);
  var $593=((($590)+($592))|0);
  var $594=(($593)|0);
  var $595=((($594)+(512))|0);
  var $596=$595 >> 10;
  var $597=$2;
  var $598=__ZN4jpgd12DCT_Upsample8Matrix442atEii($597, 1, 2);
  HEAP32[(($598)>>2)]=$596;
  var $599=$X116;
  var $600=$2;
  var $601=__ZN4jpgd12DCT_Upsample8Matrix442atEii($600, 1, 3);
  HEAP32[(($601)>>2)]=$599;
  var $602=$X121;
  var $603=((($602)*(928))|0);
  var $604=$X123;
  var $605=((($604)*(-325))|0);
  var $606=((($603)+($605))|0);
  var $607=$X125;
  var $608=((($607)*(218))|0);
  var $609=((($606)+($608))|0);
  var $610=(($609)|0);
  var $611=((($610)+(512))|0);
  var $612=$611 >> 10;
  var $613=$2;
  var $614=__ZN4jpgd12DCT_Upsample8Matrix442atEii($613, 2, 0);
  HEAP32[(($614)>>2)]=$612;
  var $615=$X122;
  var $616=$2;
  var $617=__ZN4jpgd12DCT_Upsample8Matrix442atEii($616, 2, 1);
  HEAP32[(($617)>>2)]=$615;
  var $618=$X121;
  var $619=((($618)*(-75))|0);
  var $620=$X123;
  var $621=((($620)*(526))|0);
  var $622=((($619)+($621))|0);
  var $623=$X125;
  var $624=((($623)*(787))|0);
  var $625=((($622)+($624))|0);
  var $626=(($625)|0);
  var $627=((($626)+(512))|0);
  var $628=$627 >> 10;
  var $629=$2;
  var $630=__ZN4jpgd12DCT_Upsample8Matrix442atEii($629, 2, 2);
  HEAP32[(($630)>>2)]=$628;
  var $631=$X126;
  var $632=$2;
  var $633=__ZN4jpgd12DCT_Upsample8Matrix442atEii($632, 2, 3);
  HEAP32[(($633)>>2)]=$631;
  var $634=$X131;
  var $635=((($634)*(928))|0);
  var $636=$X133;
  var $637=((($636)*(-325))|0);
  var $638=((($635)+($637))|0);
  var $639=$X135;
  var $640=((($639)*(218))|0);
  var $641=((($638)+($640))|0);
  var $642=(($641)|0);
  var $643=((($642)+(512))|0);
  var $644=$643 >> 10;
  var $645=$2;
  var $646=__ZN4jpgd12DCT_Upsample8Matrix442atEii($645, 3, 0);
  HEAP32[(($646)>>2)]=$644;
  var $647=$X132;
  var $648=$2;
  var $649=__ZN4jpgd12DCT_Upsample8Matrix442atEii($648, 3, 1);
  HEAP32[(($649)>>2)]=$647;
  var $650=$X131;
  var $651=((($650)*(-75))|0);
  var $652=$X133;
  var $653=((($652)*(526))|0);
  var $654=((($651)+($653))|0);
  var $655=$X135;
  var $656=((($655)*(787))|0);
  var $657=((($654)+($656))|0);
  var $658=(($657)|0);
  var $659=((($658)+(512))|0);
  var $660=$659 >> 10;
  var $661=$2;
  var $662=__ZN4jpgd12DCT_Upsample8Matrix442atEii($661, 3, 2);
  HEAP32[(($662)>>2)]=$660;
  var $663=$X136;
  var $664=$2;
  var $665=__ZN4jpgd12DCT_Upsample8Matrix442atEii($664, 3, 3);
  HEAP32[(($665)>>2)]=$663;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3P_QILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs($P, $Q, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X000;
  var $X001;
  var $X002;
  var $X003;
  var $X004;
  var $X005;
  var $X006;
  var $X007;
  var $X010;
  var $X011;
  var $X012;
  var $X013;
  var $X014;
  var $X015;
  var $X016;
  var $X017;
  var $X020;
  var $X021;
  var $X022;
  var $X023;
  var $X024;
  var $X025;
  var $X026;
  var $X027;
  var $X030;
  var $X031;
  var $X032;
  var $X033;
  var $X034;
  var $X035;
  var $X036;
  var $X037;
  $1=$P;
  $2=$Q;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  $X000=$7;
  var $8=$3;
  var $9=(($8+16)|0);
  var $10=HEAP16[(($9)>>1)];
  var $11=(($10 << 16) >> 16);
  $X001=$11;
  var $12=$3;
  var $13=(($12+32)|0);
  var $14=HEAP16[(($13)>>1)];
  var $15=(($14 << 16) >> 16);
  $X002=$15;
  var $16=$3;
  var $17=(($16+48)|0);
  var $18=HEAP16[(($17)>>1)];
  var $19=(($18 << 16) >> 16);
  $X003=$19;
  var $20=$3;
  var $21=(($20+64)|0);
  var $22=HEAP16[(($21)>>1)];
  var $23=(($22 << 16) >> 16);
  $X004=$23;
  var $24=$3;
  var $25=(($24+80)|0);
  var $26=HEAP16[(($25)>>1)];
  var $27=(($26 << 16) >> 16);
  $X005=$27;
  var $28=$3;
  var $29=(($28+96)|0);
  var $30=HEAP16[(($29)>>1)];
  var $31=(($30 << 16) >> 16);
  $X006=$31;
  var $32=$3;
  var $33=(($32+112)|0);
  var $34=HEAP16[(($33)>>1)];
  var $35=(($34 << 16) >> 16);
  $X007=$35;
  var $36=$3;
  var $37=(($36+2)|0);
  var $38=HEAP16[(($37)>>1)];
  var $39=(($38 << 16) >> 16);
  var $40=((($39)*(426))|0);
  var $41=$3;
  var $42=(($41+6)|0);
  var $43=HEAP16[(($42)>>1)];
  var $44=(($43 << 16) >> 16);
  var $45=((($44)*(810))|0);
  var $46=((($40)+($45))|0);
  var $47=$3;
  var $48=(($47+10)|0);
  var $49=HEAP16[(($48)>>1)];
  var $50=(($49 << 16) >> 16);
  var $51=((($50)*(-360))|0);
  var $52=((($46)+($51))|0);
  var $53=$3;
  var $54=(($53+14)|0);
  var $55=HEAP16[(($54)>>1)];
  var $56=(($55 << 16) >> 16);
  var $57=((($56)*(284))|0);
  var $58=((($52)+($57))|0);
  var $59=((($58)+(512))|0);
  var $60=$59 >> 10;
  $X010=$60;
  var $61=$3;
  var $62=(($61+18)|0);
  var $63=HEAP16[(($62)>>1)];
  var $64=(($63 << 16) >> 16);
  var $65=((($64)*(426))|0);
  var $66=$3;
  var $67=(($66+22)|0);
  var $68=HEAP16[(($67)>>1)];
  var $69=(($68 << 16) >> 16);
  var $70=((($69)*(810))|0);
  var $71=((($65)+($70))|0);
  var $72=$3;
  var $73=(($72+26)|0);
  var $74=HEAP16[(($73)>>1)];
  var $75=(($74 << 16) >> 16);
  var $76=((($75)*(-360))|0);
  var $77=((($71)+($76))|0);
  var $78=$3;
  var $79=(($78+30)|0);
  var $80=HEAP16[(($79)>>1)];
  var $81=(($80 << 16) >> 16);
  var $82=((($81)*(284))|0);
  var $83=((($77)+($82))|0);
  var $84=((($83)+(512))|0);
  var $85=$84 >> 10;
  $X011=$85;
  var $86=$3;
  var $87=(($86+34)|0);
  var $88=HEAP16[(($87)>>1)];
  var $89=(($88 << 16) >> 16);
  var $90=((($89)*(426))|0);
  var $91=$3;
  var $92=(($91+38)|0);
  var $93=HEAP16[(($92)>>1)];
  var $94=(($93 << 16) >> 16);
  var $95=((($94)*(810))|0);
  var $96=((($90)+($95))|0);
  var $97=$3;
  var $98=(($97+42)|0);
  var $99=HEAP16[(($98)>>1)];
  var $100=(($99 << 16) >> 16);
  var $101=((($100)*(-360))|0);
  var $102=((($96)+($101))|0);
  var $103=$3;
  var $104=(($103+46)|0);
  var $105=HEAP16[(($104)>>1)];
  var $106=(($105 << 16) >> 16);
  var $107=((($106)*(284))|0);
  var $108=((($102)+($107))|0);
  var $109=((($108)+(512))|0);
  var $110=$109 >> 10;
  $X012=$110;
  var $111=$3;
  var $112=(($111+50)|0);
  var $113=HEAP16[(($112)>>1)];
  var $114=(($113 << 16) >> 16);
  var $115=((($114)*(426))|0);
  var $116=$3;
  var $117=(($116+54)|0);
  var $118=HEAP16[(($117)>>1)];
  var $119=(($118 << 16) >> 16);
  var $120=((($119)*(810))|0);
  var $121=((($115)+($120))|0);
  var $122=$3;
  var $123=(($122+58)|0);
  var $124=HEAP16[(($123)>>1)];
  var $125=(($124 << 16) >> 16);
  var $126=((($125)*(-360))|0);
  var $127=((($121)+($126))|0);
  var $128=$3;
  var $129=(($128+62)|0);
  var $130=HEAP16[(($129)>>1)];
  var $131=(($130 << 16) >> 16);
  var $132=((($131)*(284))|0);
  var $133=((($127)+($132))|0);
  var $134=((($133)+(512))|0);
  var $135=$134 >> 10;
  $X013=$135;
  var $136=$3;
  var $137=(($136+66)|0);
  var $138=HEAP16[(($137)>>1)];
  var $139=(($138 << 16) >> 16);
  var $140=((($139)*(426))|0);
  var $141=$3;
  var $142=(($141+70)|0);
  var $143=HEAP16[(($142)>>1)];
  var $144=(($143 << 16) >> 16);
  var $145=((($144)*(810))|0);
  var $146=((($140)+($145))|0);
  var $147=$3;
  var $148=(($147+74)|0);
  var $149=HEAP16[(($148)>>1)];
  var $150=(($149 << 16) >> 16);
  var $151=((($150)*(-360))|0);
  var $152=((($146)+($151))|0);
  var $153=$3;
  var $154=(($153+78)|0);
  var $155=HEAP16[(($154)>>1)];
  var $156=(($155 << 16) >> 16);
  var $157=((($156)*(284))|0);
  var $158=((($152)+($157))|0);
  var $159=((($158)+(512))|0);
  var $160=$159 >> 10;
  $X014=$160;
  var $161=$3;
  var $162=(($161+82)|0);
  var $163=HEAP16[(($162)>>1)];
  var $164=(($163 << 16) >> 16);
  var $165=((($164)*(426))|0);
  var $166=$3;
  var $167=(($166+86)|0);
  var $168=HEAP16[(($167)>>1)];
  var $169=(($168 << 16) >> 16);
  var $170=((($169)*(810))|0);
  var $171=((($165)+($170))|0);
  var $172=$3;
  var $173=(($172+90)|0);
  var $174=HEAP16[(($173)>>1)];
  var $175=(($174 << 16) >> 16);
  var $176=((($175)*(-360))|0);
  var $177=((($171)+($176))|0);
  var $178=$3;
  var $179=(($178+94)|0);
  var $180=HEAP16[(($179)>>1)];
  var $181=(($180 << 16) >> 16);
  var $182=((($181)*(284))|0);
  var $183=((($177)+($182))|0);
  var $184=((($183)+(512))|0);
  var $185=$184 >> 10;
  $X015=$185;
  var $186=$3;
  var $187=(($186+98)|0);
  var $188=HEAP16[(($187)>>1)];
  var $189=(($188 << 16) >> 16);
  var $190=((($189)*(426))|0);
  var $191=$3;
  var $192=(($191+102)|0);
  var $193=HEAP16[(($192)>>1)];
  var $194=(($193 << 16) >> 16);
  var $195=((($194)*(810))|0);
  var $196=((($190)+($195))|0);
  var $197=$3;
  var $198=(($197+106)|0);
  var $199=HEAP16[(($198)>>1)];
  var $200=(($199 << 16) >> 16);
  var $201=((($200)*(-360))|0);
  var $202=((($196)+($201))|0);
  var $203=$3;
  var $204=(($203+110)|0);
  var $205=HEAP16[(($204)>>1)];
  var $206=(($205 << 16) >> 16);
  var $207=((($206)*(284))|0);
  var $208=((($202)+($207))|0);
  var $209=((($208)+(512))|0);
  var $210=$209 >> 10;
  $X016=$210;
  var $211=$3;
  var $212=(($211+114)|0);
  var $213=HEAP16[(($212)>>1)];
  var $214=(($213 << 16) >> 16);
  var $215=((($214)*(426))|0);
  var $216=$3;
  var $217=(($216+118)|0);
  var $218=HEAP16[(($217)>>1)];
  var $219=(($218 << 16) >> 16);
  var $220=((($219)*(810))|0);
  var $221=((($215)+($220))|0);
  var $222=$3;
  var $223=(($222+122)|0);
  var $224=HEAP16[(($223)>>1)];
  var $225=(($224 << 16) >> 16);
  var $226=((($225)*(-360))|0);
  var $227=((($221)+($226))|0);
  var $228=$3;
  var $229=(($228+126)|0);
  var $230=HEAP16[(($229)>>1)];
  var $231=(($230 << 16) >> 16);
  var $232=((($231)*(284))|0);
  var $233=((($227)+($232))|0);
  var $234=((($233)+(512))|0);
  var $235=$234 >> 10;
  $X017=$235;
  var $236=$3;
  var $237=(($236+8)|0);
  var $238=HEAP16[(($237)>>1)];
  var $239=(($238 << 16) >> 16);
  $X020=$239;
  var $240=$3;
  var $241=(($240+24)|0);
  var $242=HEAP16[(($241)>>1)];
  var $243=(($242 << 16) >> 16);
  $X021=$243;
  var $244=$3;
  var $245=(($244+40)|0);
  var $246=HEAP16[(($245)>>1)];
  var $247=(($246 << 16) >> 16);
  $X022=$247;
  var $248=$3;
  var $249=(($248+56)|0);
  var $250=HEAP16[(($249)>>1)];
  var $251=(($250 << 16) >> 16);
  $X023=$251;
  var $252=$3;
  var $253=(($252+72)|0);
  var $254=HEAP16[(($253)>>1)];
  var $255=(($254 << 16) >> 16);
  $X024=$255;
  var $256=$3;
  var $257=(($256+88)|0);
  var $258=HEAP16[(($257)>>1)];
  var $259=(($258 << 16) >> 16);
  $X025=$259;
  var $260=$3;
  var $261=(($260+104)|0);
  var $262=HEAP16[(($261)>>1)];
  var $263=(($262 << 16) >> 16);
  $X026=$263;
  var $264=$3;
  var $265=(($264+120)|0);
  var $266=HEAP16[(($265)>>1)];
  var $267=(($266 << 16) >> 16);
  $X027=$267;
  var $268=$3;
  var $269=(($268+2)|0);
  var $270=HEAP16[(($269)>>1)];
  var $271=(($270 << 16) >> 16);
  var $272=((($271)*(23))|0);
  var $273=$3;
  var $274=(($273+6)|0);
  var $275=HEAP16[(($274)>>1)];
  var $276=(($275 << 16) >> 16);
  var $277=((($276)*(-99))|0);
  var $278=((($272)+($277))|0);
  var $279=$3;
  var $280=(($279+10)|0);
  var $281=HEAP16[(($280)>>1)];
  var $282=(($281 << 16) >> 16);
  var $283=((($282)*(502))|0);
  var $284=((($278)+($283))|0);
  var $285=$3;
  var $286=(($285+14)|0);
  var $287=HEAP16[(($286)>>1)];
  var $288=(($287 << 16) >> 16);
  var $289=((($288)*(887))|0);
  var $290=((($284)+($289))|0);
  var $291=((($290)+(512))|0);
  var $292=$291 >> 10;
  $X030=$292;
  var $293=$3;
  var $294=(($293+18)|0);
  var $295=HEAP16[(($294)>>1)];
  var $296=(($295 << 16) >> 16);
  var $297=((($296)*(23))|0);
  var $298=$3;
  var $299=(($298+22)|0);
  var $300=HEAP16[(($299)>>1)];
  var $301=(($300 << 16) >> 16);
  var $302=((($301)*(-99))|0);
  var $303=((($297)+($302))|0);
  var $304=$3;
  var $305=(($304+26)|0);
  var $306=HEAP16[(($305)>>1)];
  var $307=(($306 << 16) >> 16);
  var $308=((($307)*(502))|0);
  var $309=((($303)+($308))|0);
  var $310=$3;
  var $311=(($310+30)|0);
  var $312=HEAP16[(($311)>>1)];
  var $313=(($312 << 16) >> 16);
  var $314=((($313)*(887))|0);
  var $315=((($309)+($314))|0);
  var $316=((($315)+(512))|0);
  var $317=$316 >> 10;
  $X031=$317;
  var $318=$3;
  var $319=(($318+34)|0);
  var $320=HEAP16[(($319)>>1)];
  var $321=(($320 << 16) >> 16);
  var $322=((($321)*(23))|0);
  var $323=$3;
  var $324=(($323+38)|0);
  var $325=HEAP16[(($324)>>1)];
  var $326=(($325 << 16) >> 16);
  var $327=((($326)*(-99))|0);
  var $328=((($322)+($327))|0);
  var $329=$3;
  var $330=(($329+42)|0);
  var $331=HEAP16[(($330)>>1)];
  var $332=(($331 << 16) >> 16);
  var $333=((($332)*(502))|0);
  var $334=((($328)+($333))|0);
  var $335=$3;
  var $336=(($335+46)|0);
  var $337=HEAP16[(($336)>>1)];
  var $338=(($337 << 16) >> 16);
  var $339=((($338)*(887))|0);
  var $340=((($334)+($339))|0);
  var $341=((($340)+(512))|0);
  var $342=$341 >> 10;
  $X032=$342;
  var $343=$3;
  var $344=(($343+50)|0);
  var $345=HEAP16[(($344)>>1)];
  var $346=(($345 << 16) >> 16);
  var $347=((($346)*(23))|0);
  var $348=$3;
  var $349=(($348+54)|0);
  var $350=HEAP16[(($349)>>1)];
  var $351=(($350 << 16) >> 16);
  var $352=((($351)*(-99))|0);
  var $353=((($347)+($352))|0);
  var $354=$3;
  var $355=(($354+58)|0);
  var $356=HEAP16[(($355)>>1)];
  var $357=(($356 << 16) >> 16);
  var $358=((($357)*(502))|0);
  var $359=((($353)+($358))|0);
  var $360=$3;
  var $361=(($360+62)|0);
  var $362=HEAP16[(($361)>>1)];
  var $363=(($362 << 16) >> 16);
  var $364=((($363)*(887))|0);
  var $365=((($359)+($364))|0);
  var $366=((($365)+(512))|0);
  var $367=$366 >> 10;
  $X033=$367;
  var $368=$3;
  var $369=(($368+66)|0);
  var $370=HEAP16[(($369)>>1)];
  var $371=(($370 << 16) >> 16);
  var $372=((($371)*(23))|0);
  var $373=$3;
  var $374=(($373+70)|0);
  var $375=HEAP16[(($374)>>1)];
  var $376=(($375 << 16) >> 16);
  var $377=((($376)*(-99))|0);
  var $378=((($372)+($377))|0);
  var $379=$3;
  var $380=(($379+74)|0);
  var $381=HEAP16[(($380)>>1)];
  var $382=(($381 << 16) >> 16);
  var $383=((($382)*(502))|0);
  var $384=((($378)+($383))|0);
  var $385=$3;
  var $386=(($385+78)|0);
  var $387=HEAP16[(($386)>>1)];
  var $388=(($387 << 16) >> 16);
  var $389=((($388)*(887))|0);
  var $390=((($384)+($389))|0);
  var $391=((($390)+(512))|0);
  var $392=$391 >> 10;
  $X034=$392;
  var $393=$3;
  var $394=(($393+82)|0);
  var $395=HEAP16[(($394)>>1)];
  var $396=(($395 << 16) >> 16);
  var $397=((($396)*(23))|0);
  var $398=$3;
  var $399=(($398+86)|0);
  var $400=HEAP16[(($399)>>1)];
  var $401=(($400 << 16) >> 16);
  var $402=((($401)*(-99))|0);
  var $403=((($397)+($402))|0);
  var $404=$3;
  var $405=(($404+90)|0);
  var $406=HEAP16[(($405)>>1)];
  var $407=(($406 << 16) >> 16);
  var $408=((($407)*(502))|0);
  var $409=((($403)+($408))|0);
  var $410=$3;
  var $411=(($410+94)|0);
  var $412=HEAP16[(($411)>>1)];
  var $413=(($412 << 16) >> 16);
  var $414=((($413)*(887))|0);
  var $415=((($409)+($414))|0);
  var $416=((($415)+(512))|0);
  var $417=$416 >> 10;
  $X035=$417;
  var $418=$3;
  var $419=(($418+98)|0);
  var $420=HEAP16[(($419)>>1)];
  var $421=(($420 << 16) >> 16);
  var $422=((($421)*(23))|0);
  var $423=$3;
  var $424=(($423+102)|0);
  var $425=HEAP16[(($424)>>1)];
  var $426=(($425 << 16) >> 16);
  var $427=((($426)*(-99))|0);
  var $428=((($422)+($427))|0);
  var $429=$3;
  var $430=(($429+106)|0);
  var $431=HEAP16[(($430)>>1)];
  var $432=(($431 << 16) >> 16);
  var $433=((($432)*(502))|0);
  var $434=((($428)+($433))|0);
  var $435=$3;
  var $436=(($435+110)|0);
  var $437=HEAP16[(($436)>>1)];
  var $438=(($437 << 16) >> 16);
  var $439=((($438)*(887))|0);
  var $440=((($434)+($439))|0);
  var $441=((($440)+(512))|0);
  var $442=$441 >> 10;
  $X036=$442;
  var $443=$3;
  var $444=(($443+114)|0);
  var $445=HEAP16[(($444)>>1)];
  var $446=(($445 << 16) >> 16);
  var $447=((($446)*(23))|0);
  var $448=$3;
  var $449=(($448+118)|0);
  var $450=HEAP16[(($449)>>1)];
  var $451=(($450 << 16) >> 16);
  var $452=((($451)*(-99))|0);
  var $453=((($447)+($452))|0);
  var $454=$3;
  var $455=(($454+122)|0);
  var $456=HEAP16[(($455)>>1)];
  var $457=(($456 << 16) >> 16);
  var $458=((($457)*(502))|0);
  var $459=((($453)+($458))|0);
  var $460=$3;
  var $461=(($460+126)|0);
  var $462=HEAP16[(($461)>>1)];
  var $463=(($462 << 16) >> 16);
  var $464=((($463)*(887))|0);
  var $465=((($459)+($464))|0);
  var $466=((($465)+(512))|0);
  var $467=$466 >> 10;
  $X037=$467;
  var $468=$X000;
  var $469=$1;
  var $470=__ZN4jpgd12DCT_Upsample8Matrix442atEii($469, 0, 0);
  HEAP32[(($470)>>2)]=$468;
  var $471=$X001;
  var $472=((($471)*(426))|0);
  var $473=$X003;
  var $474=((($473)*(810))|0);
  var $475=((($472)+($474))|0);
  var $476=$X005;
  var $477=((($476)*(-360))|0);
  var $478=((($475)+($477))|0);
  var $479=$X007;
  var $480=((($479)*(284))|0);
  var $481=((($478)+($480))|0);
  var $482=((($481)+(512))|0);
  var $483=$482 >> 10;
  var $484=$1;
  var $485=__ZN4jpgd12DCT_Upsample8Matrix442atEii($484, 0, 1);
  HEAP32[(($485)>>2)]=$483;
  var $486=$X004;
  var $487=$1;
  var $488=__ZN4jpgd12DCT_Upsample8Matrix442atEii($487, 0, 2);
  HEAP32[(($488)>>2)]=$486;
  var $489=$X001;
  var $490=((($489)*(23))|0);
  var $491=$X003;
  var $492=((($491)*(-99))|0);
  var $493=((($490)+($492))|0);
  var $494=$X005;
  var $495=((($494)*(502))|0);
  var $496=((($493)+($495))|0);
  var $497=$X007;
  var $498=((($497)*(887))|0);
  var $499=((($496)+($498))|0);
  var $500=((($499)+(512))|0);
  var $501=$500 >> 10;
  var $502=$1;
  var $503=__ZN4jpgd12DCT_Upsample8Matrix442atEii($502, 0, 3);
  HEAP32[(($503)>>2)]=$501;
  var $504=$X010;
  var $505=$1;
  var $506=__ZN4jpgd12DCT_Upsample8Matrix442atEii($505, 1, 0);
  HEAP32[(($506)>>2)]=$504;
  var $507=$X011;
  var $508=((($507)*(426))|0);
  var $509=$X013;
  var $510=((($509)*(810))|0);
  var $511=((($508)+($510))|0);
  var $512=$X015;
  var $513=((($512)*(-360))|0);
  var $514=((($511)+($513))|0);
  var $515=$X017;
  var $516=((($515)*(284))|0);
  var $517=((($514)+($516))|0);
  var $518=((($517)+(512))|0);
  var $519=$518 >> 10;
  var $520=$1;
  var $521=__ZN4jpgd12DCT_Upsample8Matrix442atEii($520, 1, 1);
  HEAP32[(($521)>>2)]=$519;
  var $522=$X014;
  var $523=$1;
  var $524=__ZN4jpgd12DCT_Upsample8Matrix442atEii($523, 1, 2);
  HEAP32[(($524)>>2)]=$522;
  var $525=$X011;
  var $526=((($525)*(23))|0);
  var $527=$X013;
  var $528=((($527)*(-99))|0);
  var $529=((($526)+($528))|0);
  var $530=$X015;
  var $531=((($530)*(502))|0);
  var $532=((($529)+($531))|0);
  var $533=$X017;
  var $534=((($533)*(887))|0);
  var $535=((($532)+($534))|0);
  var $536=((($535)+(512))|0);
  var $537=$536 >> 10;
  var $538=$1;
  var $539=__ZN4jpgd12DCT_Upsample8Matrix442atEii($538, 1, 3);
  HEAP32[(($539)>>2)]=$537;
  var $540=$X020;
  var $541=$1;
  var $542=__ZN4jpgd12DCT_Upsample8Matrix442atEii($541, 2, 0);
  HEAP32[(($542)>>2)]=$540;
  var $543=$X021;
  var $544=((($543)*(426))|0);
  var $545=$X023;
  var $546=((($545)*(810))|0);
  var $547=((($544)+($546))|0);
  var $548=$X025;
  var $549=((($548)*(-360))|0);
  var $550=((($547)+($549))|0);
  var $551=$X027;
  var $552=((($551)*(284))|0);
  var $553=((($550)+($552))|0);
  var $554=((($553)+(512))|0);
  var $555=$554 >> 10;
  var $556=$1;
  var $557=__ZN4jpgd12DCT_Upsample8Matrix442atEii($556, 2, 1);
  HEAP32[(($557)>>2)]=$555;
  var $558=$X024;
  var $559=$1;
  var $560=__ZN4jpgd12DCT_Upsample8Matrix442atEii($559, 2, 2);
  HEAP32[(($560)>>2)]=$558;
  var $561=$X021;
  var $562=((($561)*(23))|0);
  var $563=$X023;
  var $564=((($563)*(-99))|0);
  var $565=((($562)+($564))|0);
  var $566=$X025;
  var $567=((($566)*(502))|0);
  var $568=((($565)+($567))|0);
  var $569=$X027;
  var $570=((($569)*(887))|0);
  var $571=((($568)+($570))|0);
  var $572=((($571)+(512))|0);
  var $573=$572 >> 10;
  var $574=$1;
  var $575=__ZN4jpgd12DCT_Upsample8Matrix442atEii($574, 2, 3);
  HEAP32[(($575)>>2)]=$573;
  var $576=$X030;
  var $577=$1;
  var $578=__ZN4jpgd12DCT_Upsample8Matrix442atEii($577, 3, 0);
  HEAP32[(($578)>>2)]=$576;
  var $579=$X031;
  var $580=((($579)*(426))|0);
  var $581=$X033;
  var $582=((($581)*(810))|0);
  var $583=((($580)+($582))|0);
  var $584=$X035;
  var $585=((($584)*(-360))|0);
  var $586=((($583)+($585))|0);
  var $587=$X037;
  var $588=((($587)*(284))|0);
  var $589=((($586)+($588))|0);
  var $590=((($589)+(512))|0);
  var $591=$590 >> 10;
  var $592=$1;
  var $593=__ZN4jpgd12DCT_Upsample8Matrix442atEii($592, 3, 1);
  HEAP32[(($593)>>2)]=$591;
  var $594=$X034;
  var $595=$1;
  var $596=__ZN4jpgd12DCT_Upsample8Matrix442atEii($595, 3, 2);
  HEAP32[(($596)>>2)]=$594;
  var $597=$X031;
  var $598=((($597)*(23))|0);
  var $599=$X033;
  var $600=((($599)*(-99))|0);
  var $601=((($598)+($600))|0);
  var $602=$X035;
  var $603=((($602)*(502))|0);
  var $604=((($601)+($603))|0);
  var $605=$X037;
  var $606=((($605)*(887))|0);
  var $607=((($604)+($606))|0);
  var $608=((($607)+(512))|0);
  var $609=$608 >> 10;
  var $610=$1;
  var $611=__ZN4jpgd12DCT_Upsample8Matrix442atEii($610, 3, 3);
  HEAP32[(($611)>>2)]=$609;
  var $612=$X001;
  var $613=((($612)*(928))|0);
  var $614=$X003;
  var $615=((($614)*(-325))|0);
  var $616=((($613)+($615))|0);
  var $617=$X005;
  var $618=((($617)*(218))|0);
  var $619=((($616)+($618))|0);
  var $620=$X007;
  var $621=((($620)*(-184))|0);
  var $622=((($619)+($621))|0);
  var $623=((($622)+(512))|0);
  var $624=$623 >> 10;
  var $625=$2;
  var $626=__ZN4jpgd12DCT_Upsample8Matrix442atEii($625, 0, 0);
  HEAP32[(($626)>>2)]=$624;
  var $627=$X002;
  var $628=$2;
  var $629=__ZN4jpgd12DCT_Upsample8Matrix442atEii($628, 0, 1);
  HEAP32[(($629)>>2)]=$627;
  var $630=$X001;
  var $631=((($630)*(-75))|0);
  var $632=$X003;
  var $633=((($632)*(526))|0);
  var $634=((($631)+($633))|0);
  var $635=$X005;
  var $636=((($635)*(787))|0);
  var $637=((($634)+($636))|0);
  var $638=$X007;
  var $639=((($638)*(-383))|0);
  var $640=((($637)+($639))|0);
  var $641=((($640)+(512))|0);
  var $642=$641 >> 10;
  var $643=$2;
  var $644=__ZN4jpgd12DCT_Upsample8Matrix442atEii($643, 0, 2);
  HEAP32[(($644)>>2)]=$642;
  var $645=$X006;
  var $646=$2;
  var $647=__ZN4jpgd12DCT_Upsample8Matrix442atEii($646, 0, 3);
  HEAP32[(($647)>>2)]=$645;
  var $648=$X011;
  var $649=((($648)*(928))|0);
  var $650=$X013;
  var $651=((($650)*(-325))|0);
  var $652=((($649)+($651))|0);
  var $653=$X015;
  var $654=((($653)*(218))|0);
  var $655=((($652)+($654))|0);
  var $656=$X017;
  var $657=((($656)*(-184))|0);
  var $658=((($655)+($657))|0);
  var $659=((($658)+(512))|0);
  var $660=$659 >> 10;
  var $661=$2;
  var $662=__ZN4jpgd12DCT_Upsample8Matrix442atEii($661, 1, 0);
  HEAP32[(($662)>>2)]=$660;
  var $663=$X012;
  var $664=$2;
  var $665=__ZN4jpgd12DCT_Upsample8Matrix442atEii($664, 1, 1);
  HEAP32[(($665)>>2)]=$663;
  var $666=$X011;
  var $667=((($666)*(-75))|0);
  var $668=$X013;
  var $669=((($668)*(526))|0);
  var $670=((($667)+($669))|0);
  var $671=$X015;
  var $672=((($671)*(787))|0);
  var $673=((($670)+($672))|0);
  var $674=$X017;
  var $675=((($674)*(-383))|0);
  var $676=((($673)+($675))|0);
  var $677=((($676)+(512))|0);
  var $678=$677 >> 10;
  var $679=$2;
  var $680=__ZN4jpgd12DCT_Upsample8Matrix442atEii($679, 1, 2);
  HEAP32[(($680)>>2)]=$678;
  var $681=$X016;
  var $682=$2;
  var $683=__ZN4jpgd12DCT_Upsample8Matrix442atEii($682, 1, 3);
  HEAP32[(($683)>>2)]=$681;
  var $684=$X021;
  var $685=((($684)*(928))|0);
  var $686=$X023;
  var $687=((($686)*(-325))|0);
  var $688=((($685)+($687))|0);
  var $689=$X025;
  var $690=((($689)*(218))|0);
  var $691=((($688)+($690))|0);
  var $692=$X027;
  var $693=((($692)*(-184))|0);
  var $694=((($691)+($693))|0);
  var $695=((($694)+(512))|0);
  var $696=$695 >> 10;
  var $697=$2;
  var $698=__ZN4jpgd12DCT_Upsample8Matrix442atEii($697, 2, 0);
  HEAP32[(($698)>>2)]=$696;
  var $699=$X022;
  var $700=$2;
  var $701=__ZN4jpgd12DCT_Upsample8Matrix442atEii($700, 2, 1);
  HEAP32[(($701)>>2)]=$699;
  var $702=$X021;
  var $703=((($702)*(-75))|0);
  var $704=$X023;
  var $705=((($704)*(526))|0);
  var $706=((($703)+($705))|0);
  var $707=$X025;
  var $708=((($707)*(787))|0);
  var $709=((($706)+($708))|0);
  var $710=$X027;
  var $711=((($710)*(-383))|0);
  var $712=((($709)+($711))|0);
  var $713=((($712)+(512))|0);
  var $714=$713 >> 10;
  var $715=$2;
  var $716=__ZN4jpgd12DCT_Upsample8Matrix442atEii($715, 2, 2);
  HEAP32[(($716)>>2)]=$714;
  var $717=$X026;
  var $718=$2;
  var $719=__ZN4jpgd12DCT_Upsample8Matrix442atEii($718, 2, 3);
  HEAP32[(($719)>>2)]=$717;
  var $720=$X031;
  var $721=((($720)*(928))|0);
  var $722=$X033;
  var $723=((($722)*(-325))|0);
  var $724=((($721)+($723))|0);
  var $725=$X035;
  var $726=((($725)*(218))|0);
  var $727=((($724)+($726))|0);
  var $728=$X037;
  var $729=((($728)*(-184))|0);
  var $730=((($727)+($729))|0);
  var $731=((($730)+(512))|0);
  var $732=$731 >> 10;
  var $733=$2;
  var $734=__ZN4jpgd12DCT_Upsample8Matrix442atEii($733, 3, 0);
  HEAP32[(($734)>>2)]=$732;
  var $735=$X032;
  var $736=$2;
  var $737=__ZN4jpgd12DCT_Upsample8Matrix442atEii($736, 3, 1);
  HEAP32[(($737)>>2)]=$735;
  var $738=$X031;
  var $739=((($738)*(-75))|0);
  var $740=$X033;
  var $741=((($740)*(526))|0);
  var $742=((($739)+($741))|0);
  var $743=$X035;
  var $744=((($743)*(787))|0);
  var $745=((($742)+($744))|0);
  var $746=$X037;
  var $747=((($746)*(-383))|0);
  var $748=((($745)+($747))|0);
  var $749=((($748)+(512))|0);
  var $750=$749 >> 10;
  var $751=$2;
  var $752=__ZN4jpgd12DCT_Upsample8Matrix442atEii($751, 3, 2);
  HEAP32[(($752)>>2)]=$750;
  var $753=$X036;
  var $754=$2;
  var $755=__ZN4jpgd12DCT_Upsample8Matrix442atEii($754, 3, 3);
  HEAP32[(($755)>>2)]=$753;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3P_QILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_Upsample3R_SILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs($R, $S, $pSrc) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $X100;
  var $X101;
  var $X102;
  var $X103;
  var $X104;
  var $X105;
  var $X106;
  var $X107;
  var $X110;
  var $X111;
  var $X112;
  var $X113;
  var $X114;
  var $X115;
  var $X116;
  var $X117;
  var $X120;
  var $X121;
  var $X122;
  var $X123;
  var $X124;
  var $X125;
  var $X126;
  var $X127;
  var $X130;
  var $X131;
  var $X132;
  var $X133;
  var $X134;
  var $X135;
  var $X136;
  var $X137;
  $1=$R;
  $2=$S;
  $3=$pSrc;
  var $4=$3;
  var $5=(($4+2)|0);
  var $6=HEAP16[(($5)>>1)];
  var $7=(($6 << 16) >> 16);
  var $8=((($7)*(928))|0);
  var $9=$3;
  var $10=(($9+6)|0);
  var $11=HEAP16[(($10)>>1)];
  var $12=(($11 << 16) >> 16);
  var $13=((($12)*(-325))|0);
  var $14=((($8)+($13))|0);
  var $15=$3;
  var $16=(($15+10)|0);
  var $17=HEAP16[(($16)>>1)];
  var $18=(($17 << 16) >> 16);
  var $19=((($18)*(218))|0);
  var $20=((($14)+($19))|0);
  var $21=$3;
  var $22=(($21+14)|0);
  var $23=HEAP16[(($22)>>1)];
  var $24=(($23 << 16) >> 16);
  var $25=((($24)*(-184))|0);
  var $26=((($20)+($25))|0);
  var $27=((($26)+(512))|0);
  var $28=$27 >> 10;
  $X100=$28;
  var $29=$3;
  var $30=(($29+18)|0);
  var $31=HEAP16[(($30)>>1)];
  var $32=(($31 << 16) >> 16);
  var $33=((($32)*(928))|0);
  var $34=$3;
  var $35=(($34+22)|0);
  var $36=HEAP16[(($35)>>1)];
  var $37=(($36 << 16) >> 16);
  var $38=((($37)*(-325))|0);
  var $39=((($33)+($38))|0);
  var $40=$3;
  var $41=(($40+26)|0);
  var $42=HEAP16[(($41)>>1)];
  var $43=(($42 << 16) >> 16);
  var $44=((($43)*(218))|0);
  var $45=((($39)+($44))|0);
  var $46=$3;
  var $47=(($46+30)|0);
  var $48=HEAP16[(($47)>>1)];
  var $49=(($48 << 16) >> 16);
  var $50=((($49)*(-184))|0);
  var $51=((($45)+($50))|0);
  var $52=((($51)+(512))|0);
  var $53=$52 >> 10;
  $X101=$53;
  var $54=$3;
  var $55=(($54+34)|0);
  var $56=HEAP16[(($55)>>1)];
  var $57=(($56 << 16) >> 16);
  var $58=((($57)*(928))|0);
  var $59=$3;
  var $60=(($59+38)|0);
  var $61=HEAP16[(($60)>>1)];
  var $62=(($61 << 16) >> 16);
  var $63=((($62)*(-325))|0);
  var $64=((($58)+($63))|0);
  var $65=$3;
  var $66=(($65+42)|0);
  var $67=HEAP16[(($66)>>1)];
  var $68=(($67 << 16) >> 16);
  var $69=((($68)*(218))|0);
  var $70=((($64)+($69))|0);
  var $71=$3;
  var $72=(($71+46)|0);
  var $73=HEAP16[(($72)>>1)];
  var $74=(($73 << 16) >> 16);
  var $75=((($74)*(-184))|0);
  var $76=((($70)+($75))|0);
  var $77=((($76)+(512))|0);
  var $78=$77 >> 10;
  $X102=$78;
  var $79=$3;
  var $80=(($79+50)|0);
  var $81=HEAP16[(($80)>>1)];
  var $82=(($81 << 16) >> 16);
  var $83=((($82)*(928))|0);
  var $84=$3;
  var $85=(($84+54)|0);
  var $86=HEAP16[(($85)>>1)];
  var $87=(($86 << 16) >> 16);
  var $88=((($87)*(-325))|0);
  var $89=((($83)+($88))|0);
  var $90=$3;
  var $91=(($90+58)|0);
  var $92=HEAP16[(($91)>>1)];
  var $93=(($92 << 16) >> 16);
  var $94=((($93)*(218))|0);
  var $95=((($89)+($94))|0);
  var $96=$3;
  var $97=(($96+62)|0);
  var $98=HEAP16[(($97)>>1)];
  var $99=(($98 << 16) >> 16);
  var $100=((($99)*(-184))|0);
  var $101=((($95)+($100))|0);
  var $102=((($101)+(512))|0);
  var $103=$102 >> 10;
  $X103=$103;
  var $104=$3;
  var $105=(($104+66)|0);
  var $106=HEAP16[(($105)>>1)];
  var $107=(($106 << 16) >> 16);
  var $108=((($107)*(928))|0);
  var $109=$3;
  var $110=(($109+70)|0);
  var $111=HEAP16[(($110)>>1)];
  var $112=(($111 << 16) >> 16);
  var $113=((($112)*(-325))|0);
  var $114=((($108)+($113))|0);
  var $115=$3;
  var $116=(($115+74)|0);
  var $117=HEAP16[(($116)>>1)];
  var $118=(($117 << 16) >> 16);
  var $119=((($118)*(218))|0);
  var $120=((($114)+($119))|0);
  var $121=$3;
  var $122=(($121+78)|0);
  var $123=HEAP16[(($122)>>1)];
  var $124=(($123 << 16) >> 16);
  var $125=((($124)*(-184))|0);
  var $126=((($120)+($125))|0);
  var $127=((($126)+(512))|0);
  var $128=$127 >> 10;
  $X104=$128;
  var $129=$3;
  var $130=(($129+82)|0);
  var $131=HEAP16[(($130)>>1)];
  var $132=(($131 << 16) >> 16);
  var $133=((($132)*(928))|0);
  var $134=$3;
  var $135=(($134+86)|0);
  var $136=HEAP16[(($135)>>1)];
  var $137=(($136 << 16) >> 16);
  var $138=((($137)*(-325))|0);
  var $139=((($133)+($138))|0);
  var $140=$3;
  var $141=(($140+90)|0);
  var $142=HEAP16[(($141)>>1)];
  var $143=(($142 << 16) >> 16);
  var $144=((($143)*(218))|0);
  var $145=((($139)+($144))|0);
  var $146=$3;
  var $147=(($146+94)|0);
  var $148=HEAP16[(($147)>>1)];
  var $149=(($148 << 16) >> 16);
  var $150=((($149)*(-184))|0);
  var $151=((($145)+($150))|0);
  var $152=((($151)+(512))|0);
  var $153=$152 >> 10;
  $X105=$153;
  var $154=$3;
  var $155=(($154+98)|0);
  var $156=HEAP16[(($155)>>1)];
  var $157=(($156 << 16) >> 16);
  var $158=((($157)*(928))|0);
  var $159=$3;
  var $160=(($159+102)|0);
  var $161=HEAP16[(($160)>>1)];
  var $162=(($161 << 16) >> 16);
  var $163=((($162)*(-325))|0);
  var $164=((($158)+($163))|0);
  var $165=$3;
  var $166=(($165+106)|0);
  var $167=HEAP16[(($166)>>1)];
  var $168=(($167 << 16) >> 16);
  var $169=((($168)*(218))|0);
  var $170=((($164)+($169))|0);
  var $171=$3;
  var $172=(($171+110)|0);
  var $173=HEAP16[(($172)>>1)];
  var $174=(($173 << 16) >> 16);
  var $175=((($174)*(-184))|0);
  var $176=((($170)+($175))|0);
  var $177=((($176)+(512))|0);
  var $178=$177 >> 10;
  $X106=$178;
  var $179=$3;
  var $180=(($179+114)|0);
  var $181=HEAP16[(($180)>>1)];
  var $182=(($181 << 16) >> 16);
  var $183=((($182)*(928))|0);
  var $184=$3;
  var $185=(($184+118)|0);
  var $186=HEAP16[(($185)>>1)];
  var $187=(($186 << 16) >> 16);
  var $188=((($187)*(-325))|0);
  var $189=((($183)+($188))|0);
  var $190=$3;
  var $191=(($190+122)|0);
  var $192=HEAP16[(($191)>>1)];
  var $193=(($192 << 16) >> 16);
  var $194=((($193)*(218))|0);
  var $195=((($189)+($194))|0);
  var $196=$3;
  var $197=(($196+126)|0);
  var $198=HEAP16[(($197)>>1)];
  var $199=(($198 << 16) >> 16);
  var $200=((($199)*(-184))|0);
  var $201=((($195)+($200))|0);
  var $202=((($201)+(512))|0);
  var $203=$202 >> 10;
  $X107=$203;
  var $204=$3;
  var $205=(($204+4)|0);
  var $206=HEAP16[(($205)>>1)];
  var $207=(($206 << 16) >> 16);
  $X110=$207;
  var $208=$3;
  var $209=(($208+20)|0);
  var $210=HEAP16[(($209)>>1)];
  var $211=(($210 << 16) >> 16);
  $X111=$211;
  var $212=$3;
  var $213=(($212+36)|0);
  var $214=HEAP16[(($213)>>1)];
  var $215=(($214 << 16) >> 16);
  $X112=$215;
  var $216=$3;
  var $217=(($216+52)|0);
  var $218=HEAP16[(($217)>>1)];
  var $219=(($218 << 16) >> 16);
  $X113=$219;
  var $220=$3;
  var $221=(($220+68)|0);
  var $222=HEAP16[(($221)>>1)];
  var $223=(($222 << 16) >> 16);
  $X114=$223;
  var $224=$3;
  var $225=(($224+84)|0);
  var $226=HEAP16[(($225)>>1)];
  var $227=(($226 << 16) >> 16);
  $X115=$227;
  var $228=$3;
  var $229=(($228+100)|0);
  var $230=HEAP16[(($229)>>1)];
  var $231=(($230 << 16) >> 16);
  $X116=$231;
  var $232=$3;
  var $233=(($232+116)|0);
  var $234=HEAP16[(($233)>>1)];
  var $235=(($234 << 16) >> 16);
  $X117=$235;
  var $236=$3;
  var $237=(($236+2)|0);
  var $238=HEAP16[(($237)>>1)];
  var $239=(($238 << 16) >> 16);
  var $240=((($239)*(-75))|0);
  var $241=$3;
  var $242=(($241+6)|0);
  var $243=HEAP16[(($242)>>1)];
  var $244=(($243 << 16) >> 16);
  var $245=((($244)*(526))|0);
  var $246=((($240)+($245))|0);
  var $247=$3;
  var $248=(($247+10)|0);
  var $249=HEAP16[(($248)>>1)];
  var $250=(($249 << 16) >> 16);
  var $251=((($250)*(787))|0);
  var $252=((($246)+($251))|0);
  var $253=$3;
  var $254=(($253+14)|0);
  var $255=HEAP16[(($254)>>1)];
  var $256=(($255 << 16) >> 16);
  var $257=((($256)*(-383))|0);
  var $258=((($252)+($257))|0);
  var $259=((($258)+(512))|0);
  var $260=$259 >> 10;
  $X120=$260;
  var $261=$3;
  var $262=(($261+18)|0);
  var $263=HEAP16[(($262)>>1)];
  var $264=(($263 << 16) >> 16);
  var $265=((($264)*(-75))|0);
  var $266=$3;
  var $267=(($266+22)|0);
  var $268=HEAP16[(($267)>>1)];
  var $269=(($268 << 16) >> 16);
  var $270=((($269)*(526))|0);
  var $271=((($265)+($270))|0);
  var $272=$3;
  var $273=(($272+26)|0);
  var $274=HEAP16[(($273)>>1)];
  var $275=(($274 << 16) >> 16);
  var $276=((($275)*(787))|0);
  var $277=((($271)+($276))|0);
  var $278=$3;
  var $279=(($278+30)|0);
  var $280=HEAP16[(($279)>>1)];
  var $281=(($280 << 16) >> 16);
  var $282=((($281)*(-383))|0);
  var $283=((($277)+($282))|0);
  var $284=((($283)+(512))|0);
  var $285=$284 >> 10;
  $X121=$285;
  var $286=$3;
  var $287=(($286+34)|0);
  var $288=HEAP16[(($287)>>1)];
  var $289=(($288 << 16) >> 16);
  var $290=((($289)*(-75))|0);
  var $291=$3;
  var $292=(($291+38)|0);
  var $293=HEAP16[(($292)>>1)];
  var $294=(($293 << 16) >> 16);
  var $295=((($294)*(526))|0);
  var $296=((($290)+($295))|0);
  var $297=$3;
  var $298=(($297+42)|0);
  var $299=HEAP16[(($298)>>1)];
  var $300=(($299 << 16) >> 16);
  var $301=((($300)*(787))|0);
  var $302=((($296)+($301))|0);
  var $303=$3;
  var $304=(($303+46)|0);
  var $305=HEAP16[(($304)>>1)];
  var $306=(($305 << 16) >> 16);
  var $307=((($306)*(-383))|0);
  var $308=((($302)+($307))|0);
  var $309=((($308)+(512))|0);
  var $310=$309 >> 10;
  $X122=$310;
  var $311=$3;
  var $312=(($311+50)|0);
  var $313=HEAP16[(($312)>>1)];
  var $314=(($313 << 16) >> 16);
  var $315=((($314)*(-75))|0);
  var $316=$3;
  var $317=(($316+54)|0);
  var $318=HEAP16[(($317)>>1)];
  var $319=(($318 << 16) >> 16);
  var $320=((($319)*(526))|0);
  var $321=((($315)+($320))|0);
  var $322=$3;
  var $323=(($322+58)|0);
  var $324=HEAP16[(($323)>>1)];
  var $325=(($324 << 16) >> 16);
  var $326=((($325)*(787))|0);
  var $327=((($321)+($326))|0);
  var $328=$3;
  var $329=(($328+62)|0);
  var $330=HEAP16[(($329)>>1)];
  var $331=(($330 << 16) >> 16);
  var $332=((($331)*(-383))|0);
  var $333=((($327)+($332))|0);
  var $334=((($333)+(512))|0);
  var $335=$334 >> 10;
  $X123=$335;
  var $336=$3;
  var $337=(($336+66)|0);
  var $338=HEAP16[(($337)>>1)];
  var $339=(($338 << 16) >> 16);
  var $340=((($339)*(-75))|0);
  var $341=$3;
  var $342=(($341+70)|0);
  var $343=HEAP16[(($342)>>1)];
  var $344=(($343 << 16) >> 16);
  var $345=((($344)*(526))|0);
  var $346=((($340)+($345))|0);
  var $347=$3;
  var $348=(($347+74)|0);
  var $349=HEAP16[(($348)>>1)];
  var $350=(($349 << 16) >> 16);
  var $351=((($350)*(787))|0);
  var $352=((($346)+($351))|0);
  var $353=$3;
  var $354=(($353+78)|0);
  var $355=HEAP16[(($354)>>1)];
  var $356=(($355 << 16) >> 16);
  var $357=((($356)*(-383))|0);
  var $358=((($352)+($357))|0);
  var $359=((($358)+(512))|0);
  var $360=$359 >> 10;
  $X124=$360;
  var $361=$3;
  var $362=(($361+82)|0);
  var $363=HEAP16[(($362)>>1)];
  var $364=(($363 << 16) >> 16);
  var $365=((($364)*(-75))|0);
  var $366=$3;
  var $367=(($366+86)|0);
  var $368=HEAP16[(($367)>>1)];
  var $369=(($368 << 16) >> 16);
  var $370=((($369)*(526))|0);
  var $371=((($365)+($370))|0);
  var $372=$3;
  var $373=(($372+90)|0);
  var $374=HEAP16[(($373)>>1)];
  var $375=(($374 << 16) >> 16);
  var $376=((($375)*(787))|0);
  var $377=((($371)+($376))|0);
  var $378=$3;
  var $379=(($378+94)|0);
  var $380=HEAP16[(($379)>>1)];
  var $381=(($380 << 16) >> 16);
  var $382=((($381)*(-383))|0);
  var $383=((($377)+($382))|0);
  var $384=((($383)+(512))|0);
  var $385=$384 >> 10;
  $X125=$385;
  var $386=$3;
  var $387=(($386+98)|0);
  var $388=HEAP16[(($387)>>1)];
  var $389=(($388 << 16) >> 16);
  var $390=((($389)*(-75))|0);
  var $391=$3;
  var $392=(($391+102)|0);
  var $393=HEAP16[(($392)>>1)];
  var $394=(($393 << 16) >> 16);
  var $395=((($394)*(526))|0);
  var $396=((($390)+($395))|0);
  var $397=$3;
  var $398=(($397+106)|0);
  var $399=HEAP16[(($398)>>1)];
  var $400=(($399 << 16) >> 16);
  var $401=((($400)*(787))|0);
  var $402=((($396)+($401))|0);
  var $403=$3;
  var $404=(($403+110)|0);
  var $405=HEAP16[(($404)>>1)];
  var $406=(($405 << 16) >> 16);
  var $407=((($406)*(-383))|0);
  var $408=((($402)+($407))|0);
  var $409=((($408)+(512))|0);
  var $410=$409 >> 10;
  $X126=$410;
  var $411=$3;
  var $412=(($411+114)|0);
  var $413=HEAP16[(($412)>>1)];
  var $414=(($413 << 16) >> 16);
  var $415=((($414)*(-75))|0);
  var $416=$3;
  var $417=(($416+118)|0);
  var $418=HEAP16[(($417)>>1)];
  var $419=(($418 << 16) >> 16);
  var $420=((($419)*(526))|0);
  var $421=((($415)+($420))|0);
  var $422=$3;
  var $423=(($422+122)|0);
  var $424=HEAP16[(($423)>>1)];
  var $425=(($424 << 16) >> 16);
  var $426=((($425)*(787))|0);
  var $427=((($421)+($426))|0);
  var $428=$3;
  var $429=(($428+126)|0);
  var $430=HEAP16[(($429)>>1)];
  var $431=(($430 << 16) >> 16);
  var $432=((($431)*(-383))|0);
  var $433=((($427)+($432))|0);
  var $434=((($433)+(512))|0);
  var $435=$434 >> 10;
  $X127=$435;
  var $436=$3;
  var $437=(($436+12)|0);
  var $438=HEAP16[(($437)>>1)];
  var $439=(($438 << 16) >> 16);
  $X130=$439;
  var $440=$3;
  var $441=(($440+28)|0);
  var $442=HEAP16[(($441)>>1)];
  var $443=(($442 << 16) >> 16);
  $X131=$443;
  var $444=$3;
  var $445=(($444+44)|0);
  var $446=HEAP16[(($445)>>1)];
  var $447=(($446 << 16) >> 16);
  $X132=$447;
  var $448=$3;
  var $449=(($448+60)|0);
  var $450=HEAP16[(($449)>>1)];
  var $451=(($450 << 16) >> 16);
  $X133=$451;
  var $452=$3;
  var $453=(($452+76)|0);
  var $454=HEAP16[(($453)>>1)];
  var $455=(($454 << 16) >> 16);
  $X134=$455;
  var $456=$3;
  var $457=(($456+92)|0);
  var $458=HEAP16[(($457)>>1)];
  var $459=(($458 << 16) >> 16);
  $X135=$459;
  var $460=$3;
  var $461=(($460+108)|0);
  var $462=HEAP16[(($461)>>1)];
  var $463=(($462 << 16) >> 16);
  $X136=$463;
  var $464=$3;
  var $465=(($464+124)|0);
  var $466=HEAP16[(($465)>>1)];
  var $467=(($466 << 16) >> 16);
  $X137=$467;
  var $468=$X100;
  var $469=$1;
  var $470=__ZN4jpgd12DCT_Upsample8Matrix442atEii($469, 0, 0);
  HEAP32[(($470)>>2)]=$468;
  var $471=$X101;
  var $472=((($471)*(426))|0);
  var $473=$X103;
  var $474=((($473)*(810))|0);
  var $475=((($472)+($474))|0);
  var $476=$X105;
  var $477=((($476)*(-360))|0);
  var $478=((($475)+($477))|0);
  var $479=$X107;
  var $480=((($479)*(284))|0);
  var $481=((($478)+($480))|0);
  var $482=((($481)+(512))|0);
  var $483=$482 >> 10;
  var $484=$1;
  var $485=__ZN4jpgd12DCT_Upsample8Matrix442atEii($484, 0, 1);
  HEAP32[(($485)>>2)]=$483;
  var $486=$X104;
  var $487=$1;
  var $488=__ZN4jpgd12DCT_Upsample8Matrix442atEii($487, 0, 2);
  HEAP32[(($488)>>2)]=$486;
  var $489=$X101;
  var $490=((($489)*(23))|0);
  var $491=$X103;
  var $492=((($491)*(-99))|0);
  var $493=((($490)+($492))|0);
  var $494=$X105;
  var $495=((($494)*(502))|0);
  var $496=((($493)+($495))|0);
  var $497=$X107;
  var $498=((($497)*(887))|0);
  var $499=((($496)+($498))|0);
  var $500=((($499)+(512))|0);
  var $501=$500 >> 10;
  var $502=$1;
  var $503=__ZN4jpgd12DCT_Upsample8Matrix442atEii($502, 0, 3);
  HEAP32[(($503)>>2)]=$501;
  var $504=$X110;
  var $505=$1;
  var $506=__ZN4jpgd12DCT_Upsample8Matrix442atEii($505, 1, 0);
  HEAP32[(($506)>>2)]=$504;
  var $507=$X111;
  var $508=((($507)*(426))|0);
  var $509=$X113;
  var $510=((($509)*(810))|0);
  var $511=((($508)+($510))|0);
  var $512=$X115;
  var $513=((($512)*(-360))|0);
  var $514=((($511)+($513))|0);
  var $515=$X117;
  var $516=((($515)*(284))|0);
  var $517=((($514)+($516))|0);
  var $518=((($517)+(512))|0);
  var $519=$518 >> 10;
  var $520=$1;
  var $521=__ZN4jpgd12DCT_Upsample8Matrix442atEii($520, 1, 1);
  HEAP32[(($521)>>2)]=$519;
  var $522=$X114;
  var $523=$1;
  var $524=__ZN4jpgd12DCT_Upsample8Matrix442atEii($523, 1, 2);
  HEAP32[(($524)>>2)]=$522;
  var $525=$X111;
  var $526=((($525)*(23))|0);
  var $527=$X113;
  var $528=((($527)*(-99))|0);
  var $529=((($526)+($528))|0);
  var $530=$X115;
  var $531=((($530)*(502))|0);
  var $532=((($529)+($531))|0);
  var $533=$X117;
  var $534=((($533)*(887))|0);
  var $535=((($532)+($534))|0);
  var $536=((($535)+(512))|0);
  var $537=$536 >> 10;
  var $538=$1;
  var $539=__ZN4jpgd12DCT_Upsample8Matrix442atEii($538, 1, 3);
  HEAP32[(($539)>>2)]=$537;
  var $540=$X120;
  var $541=$1;
  var $542=__ZN4jpgd12DCT_Upsample8Matrix442atEii($541, 2, 0);
  HEAP32[(($542)>>2)]=$540;
  var $543=$X121;
  var $544=((($543)*(426))|0);
  var $545=$X123;
  var $546=((($545)*(810))|0);
  var $547=((($544)+($546))|0);
  var $548=$X125;
  var $549=((($548)*(-360))|0);
  var $550=((($547)+($549))|0);
  var $551=$X127;
  var $552=((($551)*(284))|0);
  var $553=((($550)+($552))|0);
  var $554=((($553)+(512))|0);
  var $555=$554 >> 10;
  var $556=$1;
  var $557=__ZN4jpgd12DCT_Upsample8Matrix442atEii($556, 2, 1);
  HEAP32[(($557)>>2)]=$555;
  var $558=$X124;
  var $559=$1;
  var $560=__ZN4jpgd12DCT_Upsample8Matrix442atEii($559, 2, 2);
  HEAP32[(($560)>>2)]=$558;
  var $561=$X121;
  var $562=((($561)*(23))|0);
  var $563=$X123;
  var $564=((($563)*(-99))|0);
  var $565=((($562)+($564))|0);
  var $566=$X125;
  var $567=((($566)*(502))|0);
  var $568=((($565)+($567))|0);
  var $569=$X127;
  var $570=((($569)*(887))|0);
  var $571=((($568)+($570))|0);
  var $572=((($571)+(512))|0);
  var $573=$572 >> 10;
  var $574=$1;
  var $575=__ZN4jpgd12DCT_Upsample8Matrix442atEii($574, 2, 3);
  HEAP32[(($575)>>2)]=$573;
  var $576=$X130;
  var $577=$1;
  var $578=__ZN4jpgd12DCT_Upsample8Matrix442atEii($577, 3, 0);
  HEAP32[(($578)>>2)]=$576;
  var $579=$X131;
  var $580=((($579)*(426))|0);
  var $581=$X133;
  var $582=((($581)*(810))|0);
  var $583=((($580)+($582))|0);
  var $584=$X135;
  var $585=((($584)*(-360))|0);
  var $586=((($583)+($585))|0);
  var $587=$X137;
  var $588=((($587)*(284))|0);
  var $589=((($586)+($588))|0);
  var $590=((($589)+(512))|0);
  var $591=$590 >> 10;
  var $592=$1;
  var $593=__ZN4jpgd12DCT_Upsample8Matrix442atEii($592, 3, 1);
  HEAP32[(($593)>>2)]=$591;
  var $594=$X134;
  var $595=$1;
  var $596=__ZN4jpgd12DCT_Upsample8Matrix442atEii($595, 3, 2);
  HEAP32[(($596)>>2)]=$594;
  var $597=$X131;
  var $598=((($597)*(23))|0);
  var $599=$X133;
  var $600=((($599)*(-99))|0);
  var $601=((($598)+($600))|0);
  var $602=$X135;
  var $603=((($602)*(502))|0);
  var $604=((($601)+($603))|0);
  var $605=$X137;
  var $606=((($605)*(887))|0);
  var $607=((($604)+($606))|0);
  var $608=((($607)+(512))|0);
  var $609=$608 >> 10;
  var $610=$1;
  var $611=__ZN4jpgd12DCT_Upsample8Matrix442atEii($610, 3, 3);
  HEAP32[(($611)>>2)]=$609;
  var $612=$X101;
  var $613=((($612)*(928))|0);
  var $614=$X103;
  var $615=((($614)*(-325))|0);
  var $616=((($613)+($615))|0);
  var $617=$X105;
  var $618=((($617)*(218))|0);
  var $619=((($616)+($618))|0);
  var $620=$X107;
  var $621=((($620)*(-184))|0);
  var $622=((($619)+($621))|0);
  var $623=((($622)+(512))|0);
  var $624=$623 >> 10;
  var $625=$2;
  var $626=__ZN4jpgd12DCT_Upsample8Matrix442atEii($625, 0, 0);
  HEAP32[(($626)>>2)]=$624;
  var $627=$X102;
  var $628=$2;
  var $629=__ZN4jpgd12DCT_Upsample8Matrix442atEii($628, 0, 1);
  HEAP32[(($629)>>2)]=$627;
  var $630=$X101;
  var $631=((($630)*(-75))|0);
  var $632=$X103;
  var $633=((($632)*(526))|0);
  var $634=((($631)+($633))|0);
  var $635=$X105;
  var $636=((($635)*(787))|0);
  var $637=((($634)+($636))|0);
  var $638=$X107;
  var $639=((($638)*(-383))|0);
  var $640=((($637)+($639))|0);
  var $641=((($640)+(512))|0);
  var $642=$641 >> 10;
  var $643=$2;
  var $644=__ZN4jpgd12DCT_Upsample8Matrix442atEii($643, 0, 2);
  HEAP32[(($644)>>2)]=$642;
  var $645=$X106;
  var $646=$2;
  var $647=__ZN4jpgd12DCT_Upsample8Matrix442atEii($646, 0, 3);
  HEAP32[(($647)>>2)]=$645;
  var $648=$X111;
  var $649=((($648)*(928))|0);
  var $650=$X113;
  var $651=((($650)*(-325))|0);
  var $652=((($649)+($651))|0);
  var $653=$X115;
  var $654=((($653)*(218))|0);
  var $655=((($652)+($654))|0);
  var $656=$X117;
  var $657=((($656)*(-184))|0);
  var $658=((($655)+($657))|0);
  var $659=((($658)+(512))|0);
  var $660=$659 >> 10;
  var $661=$2;
  var $662=__ZN4jpgd12DCT_Upsample8Matrix442atEii($661, 1, 0);
  HEAP32[(($662)>>2)]=$660;
  var $663=$X112;
  var $664=$2;
  var $665=__ZN4jpgd12DCT_Upsample8Matrix442atEii($664, 1, 1);
  HEAP32[(($665)>>2)]=$663;
  var $666=$X111;
  var $667=((($666)*(-75))|0);
  var $668=$X113;
  var $669=((($668)*(526))|0);
  var $670=((($667)+($669))|0);
  var $671=$X115;
  var $672=((($671)*(787))|0);
  var $673=((($670)+($672))|0);
  var $674=$X117;
  var $675=((($674)*(-383))|0);
  var $676=((($673)+($675))|0);
  var $677=((($676)+(512))|0);
  var $678=$677 >> 10;
  var $679=$2;
  var $680=__ZN4jpgd12DCT_Upsample8Matrix442atEii($679, 1, 2);
  HEAP32[(($680)>>2)]=$678;
  var $681=$X116;
  var $682=$2;
  var $683=__ZN4jpgd12DCT_Upsample8Matrix442atEii($682, 1, 3);
  HEAP32[(($683)>>2)]=$681;
  var $684=$X121;
  var $685=((($684)*(928))|0);
  var $686=$X123;
  var $687=((($686)*(-325))|0);
  var $688=((($685)+($687))|0);
  var $689=$X125;
  var $690=((($689)*(218))|0);
  var $691=((($688)+($690))|0);
  var $692=$X127;
  var $693=((($692)*(-184))|0);
  var $694=((($691)+($693))|0);
  var $695=((($694)+(512))|0);
  var $696=$695 >> 10;
  var $697=$2;
  var $698=__ZN4jpgd12DCT_Upsample8Matrix442atEii($697, 2, 0);
  HEAP32[(($698)>>2)]=$696;
  var $699=$X122;
  var $700=$2;
  var $701=__ZN4jpgd12DCT_Upsample8Matrix442atEii($700, 2, 1);
  HEAP32[(($701)>>2)]=$699;
  var $702=$X121;
  var $703=((($702)*(-75))|0);
  var $704=$X123;
  var $705=((($704)*(526))|0);
  var $706=((($703)+($705))|0);
  var $707=$X125;
  var $708=((($707)*(787))|0);
  var $709=((($706)+($708))|0);
  var $710=$X127;
  var $711=((($710)*(-383))|0);
  var $712=((($709)+($711))|0);
  var $713=((($712)+(512))|0);
  var $714=$713 >> 10;
  var $715=$2;
  var $716=__ZN4jpgd12DCT_Upsample8Matrix442atEii($715, 2, 2);
  HEAP32[(($716)>>2)]=$714;
  var $717=$X126;
  var $718=$2;
  var $719=__ZN4jpgd12DCT_Upsample8Matrix442atEii($718, 2, 3);
  HEAP32[(($719)>>2)]=$717;
  var $720=$X131;
  var $721=((($720)*(928))|0);
  var $722=$X133;
  var $723=((($722)*(-325))|0);
  var $724=((($721)+($723))|0);
  var $725=$X135;
  var $726=((($725)*(218))|0);
  var $727=((($724)+($726))|0);
  var $728=$X137;
  var $729=((($728)*(-184))|0);
  var $730=((($727)+($729))|0);
  var $731=((($730)+(512))|0);
  var $732=$731 >> 10;
  var $733=$2;
  var $734=__ZN4jpgd12DCT_Upsample8Matrix442atEii($733, 3, 0);
  HEAP32[(($734)>>2)]=$732;
  var $735=$X132;
  var $736=$2;
  var $737=__ZN4jpgd12DCT_Upsample8Matrix442atEii($736, 3, 1);
  HEAP32[(($737)>>2)]=$735;
  var $738=$X131;
  var $739=((($738)*(-75))|0);
  var $740=$X133;
  var $741=((($740)*(526))|0);
  var $742=((($739)+($741))|0);
  var $743=$X135;
  var $744=((($743)*(787))|0);
  var $745=((($742)+($744))|0);
  var $746=$X137;
  var $747=((($746)*(-383))|0);
  var $748=((($745)+($747))|0);
  var $749=((($748)+(512))|0);
  var $750=$749 >> 10;
  var $751=$2;
  var $752=__ZN4jpgd12DCT_Upsample8Matrix442atEii($751, 3, 2);
  HEAP32[(($752)>>2)]=$750;
  var $753=$X136;
  var $754=$2;
  var $755=__ZN4jpgd12DCT_Upsample8Matrix442atEii($754, 3, 3);
  HEAP32[(($755)>>2)]=$753;
  ;
  return;
}
__ZN4jpgd12DCT_Upsample3R_SILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs["X"]=1;

function __ZN4jpgd12DCT_UpsampleplERKNS0_8Matrix44ES3_($agg_result, $a, $b) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $r;
      $1=$a;
      $2=$b;
      __ZN4jpgd12DCT_Upsample8Matrix44C1Ev($agg_result);
      $r=0;
      __label__ = 3; break;
    case 3: 
      var $4=$r;
      var $5=(($4)|0) < 4;
      if ($5) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $7=$1;
      var $8=$r;
      var $9=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($7, $8, 0);
      var $10=HEAP32[(($9)>>2)];
      var $11=$2;
      var $12=$r;
      var $13=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($11, $12, 0);
      var $14=HEAP32[(($13)>>2)];
      var $15=((($10)+($14))|0);
      var $16=$r;
      var $17=__ZN4jpgd12DCT_Upsample8Matrix442atEii($agg_result, $16, 0);
      HEAP32[(($17)>>2)]=$15;
      var $18=$1;
      var $19=$r;
      var $20=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($18, $19, 1);
      var $21=HEAP32[(($20)>>2)];
      var $22=$2;
      var $23=$r;
      var $24=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($22, $23, 1);
      var $25=HEAP32[(($24)>>2)];
      var $26=((($21)+($25))|0);
      var $27=$r;
      var $28=__ZN4jpgd12DCT_Upsample8Matrix442atEii($agg_result, $27, 1);
      HEAP32[(($28)>>2)]=$26;
      var $29=$1;
      var $30=$r;
      var $31=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($29, $30, 2);
      var $32=HEAP32[(($31)>>2)];
      var $33=$2;
      var $34=$r;
      var $35=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($33, $34, 2);
      var $36=HEAP32[(($35)>>2)];
      var $37=((($32)+($36))|0);
      var $38=$r;
      var $39=__ZN4jpgd12DCT_Upsample8Matrix442atEii($agg_result, $38, 2);
      HEAP32[(($39)>>2)]=$37;
      var $40=$1;
      var $41=$r;
      var $42=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($40, $41, 3);
      var $43=HEAP32[(($42)>>2)];
      var $44=$2;
      var $45=$r;
      var $46=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($44, $45, 3);
      var $47=HEAP32[(($46)>>2)];
      var $48=((($43)+($47))|0);
      var $49=$r;
      var $50=__ZN4jpgd12DCT_Upsample8Matrix442atEii($agg_result, $49, 3);
      HEAP32[(($50)>>2)]=$48;
      __label__ = 5; break;
    case 5: 
      var $52=$r;
      var $53=((($52)+(1))|0);
      $r=$53;
      __label__ = 3; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12DCT_UpsampleplERKNS0_8Matrix44ES3_["X"]=1;

function __ZN4jpgd12DCT_Upsample8Matrix44mIERKS1_($this, $a) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $r;
      $1=$this;
      $2=$a;
      var $3=$1;
      $r=0;
      __label__ = 3; break;
    case 3: 
      var $5=$r;
      var $6=(($5)|0) < 4;
      if ($6) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $8=$2;
      var $9=$r;
      var $10=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($8, $9, 0);
      var $11=HEAP32[(($10)>>2)];
      var $12=$r;
      var $13=__ZN4jpgd12DCT_Upsample8Matrix442atEii($3, $12, 0);
      var $14=HEAP32[(($13)>>2)];
      var $15=((($14)-($11))|0);
      HEAP32[(($13)>>2)]=$15;
      var $16=$2;
      var $17=$r;
      var $18=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($16, $17, 1);
      var $19=HEAP32[(($18)>>2)];
      var $20=$r;
      var $21=__ZN4jpgd12DCT_Upsample8Matrix442atEii($3, $20, 1);
      var $22=HEAP32[(($21)>>2)];
      var $23=((($22)-($19))|0);
      HEAP32[(($21)>>2)]=$23;
      var $24=$2;
      var $25=$r;
      var $26=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($24, $25, 2);
      var $27=HEAP32[(($26)>>2)];
      var $28=$r;
      var $29=__ZN4jpgd12DCT_Upsample8Matrix442atEii($3, $28, 2);
      var $30=HEAP32[(($29)>>2)];
      var $31=((($30)-($27))|0);
      HEAP32[(($29)>>2)]=$31;
      var $32=$2;
      var $33=$r;
      var $34=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($32, $33, 3);
      var $35=HEAP32[(($34)>>2)];
      var $36=$r;
      var $37=__ZN4jpgd12DCT_Upsample8Matrix442atEii($3, $36, 3);
      var $38=HEAP32[(($37)>>2)];
      var $39=((($38)-($35))|0);
      HEAP32[(($37)>>2)]=$39;
      __label__ = 5; break;
    case 5: 
      var $41=$r;
      var $42=((($41)+(1))|0);
      $r=$42;
      __label__ = 3; break;
    case 6: 
      ;
      return $3;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12DCT_Upsample8Matrix44mIERKS1_["X"]=1;

function __ZN4jpgd12DCT_Upsample8Matrix4413add_and_storeEPsRKS1_S4_($pDst, $a, $b) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $r;
      $1=$pDst;
      $2=$a;
      $3=$b;
      $r=0;
      __label__ = 3; break;
    case 3: 
      var $5=$r;
      var $6=(($5)|0) < 4;
      if ($6) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $8=$2;
      var $9=$r;
      var $10=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($8, $9, 0);
      var $11=HEAP32[(($10)>>2)];
      var $12=$3;
      var $13=$r;
      var $14=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($12, $13, 0);
      var $15=HEAP32[(($14)>>2)];
      var $16=((($11)+($15))|0);
      var $17=(($16) & 65535);
      var $18=$r;
      var $19=(($18)|0);
      var $20=$1;
      var $21=(($20+($19<<1))|0);
      HEAP16[(($21)>>1)]=$17;
      var $22=$2;
      var $23=$r;
      var $24=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($22, $23, 1);
      var $25=HEAP32[(($24)>>2)];
      var $26=$3;
      var $27=$r;
      var $28=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($26, $27, 1);
      var $29=HEAP32[(($28)>>2)];
      var $30=((($25)+($29))|0);
      var $31=(($30) & 65535);
      var $32=$r;
      var $33=((($32)+(8))|0);
      var $34=$1;
      var $35=(($34+($33<<1))|0);
      HEAP16[(($35)>>1)]=$31;
      var $36=$2;
      var $37=$r;
      var $38=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($36, $37, 2);
      var $39=HEAP32[(($38)>>2)];
      var $40=$3;
      var $41=$r;
      var $42=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($40, $41, 2);
      var $43=HEAP32[(($42)>>2)];
      var $44=((($39)+($43))|0);
      var $45=(($44) & 65535);
      var $46=$r;
      var $47=((($46)+(16))|0);
      var $48=$1;
      var $49=(($48+($47<<1))|0);
      HEAP16[(($49)>>1)]=$45;
      var $50=$2;
      var $51=$r;
      var $52=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($50, $51, 3);
      var $53=HEAP32[(($52)>>2)];
      var $54=$3;
      var $55=$r;
      var $56=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($54, $55, 3);
      var $57=HEAP32[(($56)>>2)];
      var $58=((($53)+($57))|0);
      var $59=(($58) & 65535);
      var $60=$r;
      var $61=((($60)+(24))|0);
      var $62=$1;
      var $63=(($62+($61<<1))|0);
      HEAP16[(($63)>>1)]=$59;
      __label__ = 5; break;
    case 5: 
      var $65=$r;
      var $66=((($65)+(1))|0);
      $r=$66;
      __label__ = 3; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12DCT_Upsample8Matrix4413add_and_storeEPsRKS1_S4_["X"]=1;

function __ZN4jpgd12DCT_Upsample8Matrix4413sub_and_storeEPsRKS1_S4_($pDst, $a, $b) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $r;
      $1=$pDst;
      $2=$a;
      $3=$b;
      $r=0;
      __label__ = 3; break;
    case 3: 
      var $5=$r;
      var $6=(($5)|0) < 4;
      if ($6) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $8=$2;
      var $9=$r;
      var $10=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($8, $9, 0);
      var $11=HEAP32[(($10)>>2)];
      var $12=$3;
      var $13=$r;
      var $14=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($12, $13, 0);
      var $15=HEAP32[(($14)>>2)];
      var $16=((($11)-($15))|0);
      var $17=(($16) & 65535);
      var $18=$r;
      var $19=(($18)|0);
      var $20=$1;
      var $21=(($20+($19<<1))|0);
      HEAP16[(($21)>>1)]=$17;
      var $22=$2;
      var $23=$r;
      var $24=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($22, $23, 1);
      var $25=HEAP32[(($24)>>2)];
      var $26=$3;
      var $27=$r;
      var $28=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($26, $27, 1);
      var $29=HEAP32[(($28)>>2)];
      var $30=((($25)-($29))|0);
      var $31=(($30) & 65535);
      var $32=$r;
      var $33=((($32)+(8))|0);
      var $34=$1;
      var $35=(($34+($33<<1))|0);
      HEAP16[(($35)>>1)]=$31;
      var $36=$2;
      var $37=$r;
      var $38=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($36, $37, 2);
      var $39=HEAP32[(($38)>>2)];
      var $40=$3;
      var $41=$r;
      var $42=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($40, $41, 2);
      var $43=HEAP32[(($42)>>2)];
      var $44=((($39)-($43))|0);
      var $45=(($44) & 65535);
      var $46=$r;
      var $47=((($46)+(16))|0);
      var $48=$1;
      var $49=(($48+($47<<1))|0);
      HEAP16[(($49)>>1)]=$45;
      var $50=$2;
      var $51=$r;
      var $52=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($50, $51, 3);
      var $53=HEAP32[(($52)>>2)];
      var $54=$3;
      var $55=$r;
      var $56=__ZNK4jpgd12DCT_Upsample8Matrix442atEii($54, $55, 3);
      var $57=HEAP32[(($56)>>2)];
      var $58=((($53)-($57))|0);
      var $59=(($58) & 65535);
      var $60=$r;
      var $61=((($60)+(24))|0);
      var $62=$1;
      var $63=(($62+($61<<1))|0);
      HEAP16[(($63)>>1)]=$59;
      __label__ = 5; break;
    case 5: 
      var $65=$r;
      var $66=((($65)+(1))|0);
      $r=$66;
      __label__ = 3; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12DCT_Upsample8Matrix4413sub_and_storeEPsRKS1_S4_["X"]=1;

function __ZN4jpgd12jpeg_decoder13load_next_rowEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $p;
      var $q;
      var $mcu_row;
      var $mcu_block;
      var $row_block;
      var $component_num;
      var $component_id;
      var $block_x_mcu=__stackBase__;
      var $block_x_mcu_ofs;
      var $block_y_mcu_ofs;
      var $pAC;
      var $pDC;
      $1=$this;
      var $2=$1;
      $row_block=0;
      var $3=(($block_x_mcu)|0);
      var $4=$3;
      HEAP32[(($4)>>2)]=0; HEAP32[((($4)+(4))>>2)]=0; HEAP32[((($4)+(8))>>2)]=0; HEAP32[((($4)+(12))>>2)]=0;
      $mcu_row=0;
      __label__ = 3; break;
    case 3: 
      var $6=$mcu_row;
      var $7=(($2+336)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=(($6)|0) < (($8)|0);
      if ($9) { __label__ = 4; break; } else { __label__ = 32; break; }
    case 4: 
      $block_x_mcu_ofs=0;
      $block_y_mcu_ofs=0;
      $mcu_block=0;
      __label__ = 5; break;
    case 5: 
      var $12=$mcu_block;
      var $13=(($2+328)|0);
      var $14=HEAP32[(($13)>>2)];
      var $15=(($12)|0) < (($14)|0);
      if ($15) { __label__ = 6; break; } else { __label__ = 27; break; }
    case 6: 
      var $17=$mcu_block;
      var $18=(($2+344)|0);
      var $19=(($18+($17<<2))|0);
      var $20=HEAP32[(($19)>>2)];
      $component_id=$20;
      var $21=$component_id;
      var $22=(($2+188)|0);
      var $23=(($22+($21<<2))|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=(($2+132)|0);
      var $26=(($25+($24<<2))|0);
      var $27=HEAP32[(($26)>>2)];
      $q=$27;
      var $28=(($2+9144)|0);
      var $29=HEAP32[(($28)>>2)];
      var $30=$mcu_block;
      var $31=((($30<<6))|0);
      var $32=(($29+($31<<1))|0);
      $p=$32;
      var $33=$component_id;
      var $34=(($2+452)|0);
      var $35=(($34+($33<<2))|0);
      var $36=HEAP32[(($35)>>2)];
      var $37=$component_id;
      var $38=(($block_x_mcu+($37<<2))|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=$block_x_mcu_ofs;
      var $41=((($39)+($40))|0);
      var $42=$component_id;
      var $43=(($2+472)|0);
      var $44=(($43+($42<<2))|0);
      var $45=HEAP32[(($44)>>2)];
      var $46=$block_y_mcu_ofs;
      var $47=((($45)+($46))|0);
      var $48=__ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii($2, $36, $41, $47);
      $pAC=$48;
      var $49=$component_id;
      var $50=(($2+436)|0);
      var $51=(($50+($49<<2))|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=$component_id;
      var $54=(($block_x_mcu+($53<<2))|0);
      var $55=HEAP32[(($54)>>2)];
      var $56=$block_x_mcu_ofs;
      var $57=((($55)+($56))|0);
      var $58=$component_id;
      var $59=(($2+472)|0);
      var $60=(($59+($58<<2))|0);
      var $61=HEAP32[(($60)>>2)];
      var $62=$block_y_mcu_ofs;
      var $63=((($61)+($62))|0);
      var $64=__ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii($2, $52, $57, $63);
      $pDC=$64;
      var $65=$pDC;
      var $66=(($65)|0);
      var $67=HEAP16[(($66)>>1)];
      var $68=$p;
      var $69=(($68)|0);
      HEAP16[(($69)>>1)]=$67;
      var $70=$p;
      var $71=(($70+2)|0);
      var $72=$71;
      var $73=$pAC;
      var $74=(($73+2)|0);
      var $75=$74;
      assert(126 % 1 === 0, 'memcpy given ' + 126 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($72, $75, 126, 2);
      $i=63;
      __label__ = 7; break;
    case 7: 
      var $77=$i;
      var $78=(($77)|0) > 0;
      if ($78) { __label__ = 8; break; } else { __label__ = 12; break; }
    case 8: 
      var $80=$i;
      var $81=((__ZN4jpgdL5g_ZAGE+($80<<2))|0);
      var $82=HEAP32[(($81)>>2)];
      var $83=$p;
      var $84=(($83+($82<<1))|0);
      var $85=HEAP16[(($84)>>1)];
      var $86=(($85 << 16) >> 16)!=0;
      if ($86) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      __label__ = 12; break;
    case 10: 
      __label__ = 11; break;
    case 11: 
      var $90=$i;
      var $91=((($90)-(1))|0);
      $i=$91;
      __label__ = 7; break;
    case 12: 
      var $93=$i;
      var $94=((($93)+(1))|0);
      var $95=$mcu_block;
      var $96=(($2+9148)|0);
      var $97=(($96+($95<<2))|0);
      HEAP32[(($97)>>2)]=$94;
      __label__ = 13; break;
    case 13: 
      var $99=$i;
      var $100=(($99)|0) >= 0;
      if ($100) { __label__ = 14; break; } else { __label__ = 18; break; }
    case 14: 
      var $102=$i;
      var $103=((__ZN4jpgdL5g_ZAGE+($102<<2))|0);
      var $104=HEAP32[(($103)>>2)];
      var $105=$p;
      var $106=(($105+($104<<1))|0);
      var $107=HEAP16[(($106)>>1)];
      var $108=(($107 << 16) >> 16)!=0;
      if ($108) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $110=$i;
      var $111=((__ZN4jpgdL5g_ZAGE+($110<<2))|0);
      var $112=HEAP32[(($111)>>2)];
      var $113=$p;
      var $114=(($113+($112<<1))|0);
      var $115=HEAP16[(($114)>>1)];
      var $116=(($115 << 16) >> 16);
      var $117=$i;
      var $118=$q;
      var $119=(($118+($117<<1))|0);
      var $120=HEAP16[(($119)>>1)];
      var $121=(($120 << 16) >> 16);
      var $122=((($116)*($121))|0);
      var $123=(($122) & 65535);
      var $124=$i;
      var $125=((__ZN4jpgdL5g_ZAGE+($124<<2))|0);
      var $126=HEAP32[(($125)>>2)];
      var $127=$p;
      var $128=(($127+($126<<1))|0);
      HEAP16[(($128)>>1)]=$123;
      __label__ = 16; break;
    case 16: 
      __label__ = 17; break;
    case 17: 
      var $131=$i;
      var $132=((($131)-(1))|0);
      $i=$132;
      __label__ = 13; break;
    case 18: 
      var $134=$row_block;
      var $135=((($134)+(1))|0);
      $row_block=$135;
      var $136=(($2+252)|0);
      var $137=HEAP32[(($136)>>2)];
      var $138=(($137)|0)==1;
      if ($138) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      var $140=$component_id;
      var $141=(($block_x_mcu+($140<<2))|0);
      var $142=HEAP32[(($141)>>2)];
      var $143=((($142)+(1))|0);
      HEAP32[(($141)>>2)]=$143;
      __label__ = 25; break;
    case 20: 
      var $145=$block_x_mcu_ofs;
      var $146=((($145)+(1))|0);
      $block_x_mcu_ofs=$146;
      var $147=$component_id;
      var $148=(($2+156)|0);
      var $149=(($148+($147<<2))|0);
      var $150=HEAP32[(($149)>>2)];
      var $151=(($146)|0)==(($150)|0);
      if ($151) { __label__ = 21; break; } else { __label__ = 24; break; }
    case 21: 
      $block_x_mcu_ofs=0;
      var $153=$block_y_mcu_ofs;
      var $154=((($153)+(1))|0);
      $block_y_mcu_ofs=$154;
      var $155=$component_id;
      var $156=(($2+172)|0);
      var $157=(($156+($155<<2))|0);
      var $158=HEAP32[(($157)>>2)];
      var $159=(($154)|0)==(($158)|0);
      if ($159) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: 
      $block_y_mcu_ofs=0;
      var $161=$component_id;
      var $162=(($2+156)|0);
      var $163=(($162+($161<<2))|0);
      var $164=HEAP32[(($163)>>2)];
      var $165=$component_id;
      var $166=(($block_x_mcu+($165<<2))|0);
      var $167=HEAP32[(($166)>>2)];
      var $168=((($167)+($164))|0);
      HEAP32[(($166)>>2)]=$168;
      __label__ = 23; break;
    case 23: 
      __label__ = 24; break;
    case 24: 
      __label__ = 25; break;
    case 25: 
      __label__ = 26; break;
    case 26: 
      var $173=$mcu_block;
      var $174=((($173)+(1))|0);
      $mcu_block=$174;
      __label__ = 5; break;
    case 27: 
      var $176=(($2+9120)|0);
      var $177=HEAP8[($176)];
      var $178=(($177) & 1);
      if ($178) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: 
      var $180=$mcu_row;
      __ZN4jpgd12jpeg_decoder20transform_mcu_expandEi($2, $180);
      __label__ = 30; break;
    case 29: 
      var $182=$mcu_row;
      __ZN4jpgd12jpeg_decoder13transform_mcuEi($2, $182);
      __label__ = 30; break;
    case 30: 
      __label__ = 31; break;
    case 31: 
      var $185=$mcu_row;
      var $186=((($185)+(1))|0);
      $mcu_row=$186;
      __label__ = 3; break;
    case 32: 
      var $188=(($2+252)|0);
      var $189=HEAP32[(($188)>>2)];
      var $190=(($189)|0)==1;
      if ($190) { __label__ = 33; break; } else { __label__ = 34; break; }
    case 33: 
      var $192=(($2+256)|0);
      var $193=(($192)|0);
      var $194=HEAP32[(($193)>>2)];
      var $195=(($2+472)|0);
      var $196=(($195+($194<<2))|0);
      var $197=HEAP32[(($196)>>2)];
      var $198=((($197)+(1))|0);
      HEAP32[(($196)>>2)]=$198;
      __label__ = 39; break;
    case 34: 
      $component_num=0;
      __label__ = 35; break;
    case 35: 
      var $201=$component_num;
      var $202=(($2+252)|0);
      var $203=HEAP32[(($202)>>2)];
      var $204=(($201)|0) < (($203)|0);
      if ($204) { __label__ = 36; break; } else { __label__ = 38; break; }
    case 36: 
      var $206=$component_num;
      var $207=(($2+256)|0);
      var $208=(($207+($206<<2))|0);
      var $209=HEAP32[(($208)>>2)];
      $component_id=$209;
      var $210=$component_id;
      var $211=(($2+172)|0);
      var $212=(($211+($210<<2))|0);
      var $213=HEAP32[(($212)>>2)];
      var $214=$component_id;
      var $215=(($2+472)|0);
      var $216=(($215+($214<<2))|0);
      var $217=HEAP32[(($216)>>2)];
      var $218=((($217)+($213))|0);
      HEAP32[(($216)>>2)]=$218;
      __label__ = 37; break;
    case 37: 
      var $220=$component_num;
      var $221=((($220)+(1))|0);
      $component_num=$221;
      __label__ = 35; break;
    case 38: 
      __label__ = 39; break;
    case 39: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder13load_next_rowEv["X"]=1;

function __ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii($this, $cb, $block_x, $block_y) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$this;
      $2=$cb;
      $3=$block_x;
      $4=$block_y;
      var $5=$1;
      var $6=$3;
      var $7=$2;
      var $8=(($7+4)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($6)|0) < (($9)|0);
      if ($10) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: 
      var $12=$4;
      var $13=$2;
      var $14=(($13+8)|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=(($12)|0) < (($15)|0);
      if ($16) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      __label__ = 6; break;
    case 5: 
      ___assert_func(((STRING_TABLE.__str114)|0), 2593, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii)|0), ((STRING_TABLE.__str14128)|0));
      __label__ = 6; break;
    case 6: 
      var $20=$2;
      var $21=(($20)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=$3;
      var $24=$2;
      var $25=(($24+20)|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=((($23)*($26))|0);
      var $28=(($22+$27)|0);
      var $29=$4;
      var $30=$2;
      var $31=(($30+20)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=$2;
      var $34=(($33+4)|0);
      var $35=HEAP32[(($34)>>2)];
      var $36=((($32)*($35))|0);
      var $37=((($29)*($36))|0);
      var $38=(($28+$37)|0);
      var $39=$38;
      ;
      return $39;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder8get_charEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $t;
      var $c;
      $2=$this;
      var $3=$2;
      var $4=(($3+492)|0);
      var $5=HEAP32[(($4)>>2)];
      var $6=(($5)|0)!=0;
      if ($6) { __label__ = 8; break; } else { __label__ = 3; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder14prep_in_bufferEv($3);
      var $8=(($3+492)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($9)|0)!=0;
      if ($10) { __label__ = 7; break; } else { __label__ = 4; break; }
    case 4: 
      var $12=(($3+496)|0);
      var $13=HEAP32[(($12)>>2)];
      $t=$13;
      var $14=(($3+496)|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=$15 ^ 1;
      HEAP32[(($14)>>2)]=$16;
      var $17=$t;
      var $18=(($17)|0)!=0;
      if ($18) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      $1=217;
      __label__ = 9; break;
    case 6: 
      $1=255;
      __label__ = 9; break;
    case 7: 
      __label__ = 8; break;
    case 8: 
      var $23=(($3+488)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=(($24+1)|0);
      HEAP32[(($23)>>2)]=$25;
      var $26=HEAPU8[($24)];
      var $27=(($26)&255);
      $c=$27;
      var $28=(($3+492)|0);
      var $29=HEAP32[(($28)>>2)];
      var $30=((($29)-(1))|0);
      HEAP32[(($28)>>2)]=$30;
      var $31=$c;
      $1=$31;
      __label__ = 9; break;
    case 9: 
      var $33=$1;
      ;
      return $33;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder15process_restartEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $c;
      $1=$this;
      var $2=$1;
      $c=0;
      $i=1536;
      __label__ = 3; break;
    case 3: 
      var $4=$i;
      var $5=(($4)|0) > 0;
      if ($5) { __label__ = 4; break; } else { __label__ = 8; break; }
    case 4: 
      var $7=__ZN4jpgd12jpeg_decoder8get_charEv($2);
      var $8=(($7)|0)==255;
      if ($8) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      __label__ = 8; break;
    case 6: 
      __label__ = 7; break;
    case 7: 
      var $12=$i;
      var $13=((($12)-(1))|0);
      $i=$13;
      __label__ = 3; break;
    case 8: 
      var $15=$i;
      var $16=(($15)|0)==0;
      if ($16) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -229);
      throw "Reached an unreachable!"
    case 10: 
      __label__ = 11; break;
    case 11: 
      var $20=$i;
      var $21=(($20)|0) > 0;
      if ($21) { __label__ = 12; break; } else { __label__ = 16; break; }
    case 12: 
      var $23=__ZN4jpgd12jpeg_decoder8get_charEv($2);
      $c=$23;
      var $24=(($23)|0)!=255;
      if ($24) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      __label__ = 16; break;
    case 14: 
      __label__ = 15; break;
    case 15: 
      var $28=$i;
      var $29=((($28)-(1))|0);
      $i=$29;
      __label__ = 11; break;
    case 16: 
      var $31=$i;
      var $32=(($31)|0)==0;
      if ($32) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -229);
      throw "Reached an unreachable!"
    case 18: 
      var $35=$c;
      var $36=(($2+9096)|0);
      var $37=HEAP32[(($36)>>2)];
      var $38=((($37)+(208))|0);
      var $39=(($35)|0)!=(($38)|0);
      if ($39) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -229);
      throw "Reached an unreachable!"
    case 20: 
      var $42=(($2+9128)|0);
      var $43=$42;
      var $44=(($2+152)|0);
      var $45=HEAP32[(($44)>>2)];
      var $46=((($45<<2))|0);
      _memset($43, 0, $46, 4);
      var $47=(($2+468)|0);
      HEAP32[(($47)>>2)]=0;
      var $48=(($2+9088)|0);
      var $49=HEAP32[(($48)>>2)];
      var $50=(($2+9092)|0);
      HEAP32[(($50)>>2)]=$49;
      var $51=(($2+9096)|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=((($52)+(1))|0);
      var $54=$53 & 7;
      var $55=(($2+9096)|0);
      HEAP32[(($55)>>2)]=$54;
      var $56=(($2+9080)|0);
      HEAP32[(($56)>>2)]=16;
      var $57=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($2, 16);
      var $58=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($2, 16);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder15process_restartEv["X"]=1;

function __ZN4jpgdL13dequantize_acEii($c, $q) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$c;
  $2=$q;
  var $3=$2;
  var $4=$1;
  var $5=((($4)*($3))|0);
  $1=$5;
  var $6=$1;
  ;
  return $6;
}


function __ZN4jpgd12jpeg_decoder5clampEi($i) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$i;
      var $2=$1;
      var $3=(($2)>>>0) > 255;
      if ($3) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $5=$1;
      var $6=$5 ^ -1;
      var $7=$6 >> 31;
      var $8=$7 & 255;
      $1=$8;
      __label__ = 4; break;
    case 4: 
      var $10=$1;
      var $11=(($10) & 255);
      ;
      return $11;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesERi($this, $pH, $extra_bits) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $symbol;
      var $ofs;
      var $code_size;
      var $num_extra_bits;
      var $bits;
      $1=$this;
      $2=$pH;
      $3=$extra_bits;
      var $4=$1;
      var $5=(($4+9084)|0);
      var $6=HEAPU32[(($5)>>2)];
      var $7=$6 >>> 24;
      var $8=$2;
      var $9=(($8+1028)|0);
      var $10=(($9+($7<<2))|0);
      var $11=HEAP32[(($10)>>2)];
      $symbol=$11;
      var $12=(($11)|0) < 0;
      if ($12) { __label__ = 3; break; } else { __label__ = 7; break; }
    case 3: 
      $ofs=23;
      __label__ = 4; break;
    case 4: 
      var $15=$symbol;
      var $16=(($4+9084)|0);
      var $17=HEAPU32[(($16)>>2)];
      var $18=$ofs;
      var $19=$17 >>> (($18)>>>0);
      var $20=$19 & 1;
      var $21=((($15)+($20))|0);
      var $22=(((-$21))|0);
      var $23=$2;
      var $24=(($23+2308)|0);
      var $25=(($24+($22<<2))|0);
      var $26=HEAP32[(($25)>>2)];
      $symbol=$26;
      var $27=$ofs;
      var $28=((($27)-(1))|0);
      $ofs=$28;
      __label__ = 5; break;
    case 5: 
      var $30=$symbol;
      var $31=(($30)|0) < 0;
      if ($31) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 6: 
      var $33=$ofs;
      var $34=(((23)-($33))|0);
      var $35=((($34)+(8))|0);
      var $36=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($4, $35);
      var $37=$symbol;
      var $38=$37 & 15;
      var $39=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($4, $38);
      var $40=$3;
      HEAP32[(($40)>>2)]=$39;
      __label__ = 20; break;
    case 7: 
      var $42=$symbol;
      var $43=$42 >> 8;
      var $44=$43 & 31;
      var $45=$symbol;
      var $46=$45 & 255;
      var $47=$2;
      var $48=(($47+2052)|0);
      var $49=(($48+$46)|0);
      var $50=HEAPU8[($49)];
      var $51=(($50)&255);
      var $52=$symbol;
      var $53=$52 & 32768;
      var $54=(($53)|0)!=0;
      if ($54) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $56=$symbol;
      var $57=$56 & 15;
      var $60 = $57;__label__ = 10; break;
    case 9: 
      var $60 = 0;__label__ = 10; break;
    case 10: 
      var $60;
      var $61=((($51)+($60))|0);
      var $62=(($44)|0)==(($61)|0);
      if ($62) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: 
      __label__ = 13; break;
    case 12: 
      ___assert_func(((STRING_TABLE.__str114)|0), 537, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesERi)|0), ((STRING_TABLE.__str15129)|0));
      __label__ = 13; break;
    case 13: 
      var $66=$symbol;
      var $67=$66 & 32768;
      var $68=(($67)|0)!=0;
      if ($68) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: 
      var $70=$symbol;
      var $71=$70 >> 8;
      var $72=$71 & 31;
      var $73=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($4, $72);
      var $74=$symbol;
      var $75=$74 >> 16;
      var $76=$3;
      HEAP32[(($76)>>2)]=$75;
      __label__ = 19; break;
    case 15: 
      var $78=$symbol;
      var $79=$78 >> 8;
      var $80=$79 & 31;
      $code_size=$80;
      var $81=$symbol;
      var $82=$81 & 15;
      $num_extra_bits=$82;
      var $83=$code_size;
      var $84=$num_extra_bits;
      var $85=((($83)+($84))|0);
      $bits=$85;
      var $86=$bits;
      var $87=(($4+9080)|0);
      var $88=HEAP32[(($87)>>2)];
      var $89=((($88)+(16))|0);
      var $90=(($86)|0) <= (($89)|0);
      if ($90) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $92=$bits;
      var $93=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($4, $92);
      var $94=$num_extra_bits;
      var $95=1 << $94;
      var $96=((($95)-(1))|0);
      var $97=$93 & $96;
      var $98=$3;
      HEAP32[(($98)>>2)]=$97;
      __label__ = 18; break;
    case 17: 
      var $100=$code_size;
      var $101=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($4, $100);
      var $102=$num_extra_bits;
      var $103=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($4, $102);
      var $104=$3;
      HEAP32[(($104)>>2)]=$103;
      __label__ = 18; break;
    case 18: 
      __label__ = 19; break;
    case 19: 
      var $107=$symbol;
      var $108=$107 & 255;
      $symbol=$108;
      __label__ = 20; break;
    case 20: 
      var $110=$symbol;
      ;
      return $110;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesERi["X"]=1;

function __ZN4jpgd12jpeg_decoder11H1V1ConvertEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $row;
      var $d;
      var $s;
      var $i;
      var $j;
      var $y;
      var $cb;
      var $cr;
      $1=$this;
      var $2=$1;
      var $3=(($2+324)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($2+388)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=((($4)-($6))|0);
      $row=$7;
      var $8=(($2+13288)|0);
      var $9=HEAP32[(($8)>>2)];
      $d=$9;
      var $10=(($2+9188)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=$row;
      var $13=((($12<<3))|0);
      var $14=(($11+$13)|0);
      $s=$14;
      var $15=(($2+9100)|0);
      var $16=HEAP32[(($15)>>2)];
      $i=$16;
      __label__ = 3; break;
    case 3: 
      var $18=$i;
      var $19=(($18)|0) > 0;
      if ($19) { __label__ = 4; break; } else { __label__ = 10; break; }
    case 4: 
      $j=0;
      __label__ = 5; break;
    case 5: 
      var $22=$j;
      var $23=(($22)|0) < 8;
      if ($23) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: 
      var $25=$j;
      var $26=$s;
      var $27=(($26+$25)|0);
      var $28=HEAPU8[($27)];
      var $29=(($28)&255);
      $y=$29;
      var $30=$j;
      var $31=((($30)+(64))|0);
      var $32=$s;
      var $33=(($32+$31)|0);
      var $34=HEAPU8[($33)];
      var $35=(($34)&255);
      $cb=$35;
      var $36=$j;
      var $37=((($36)+(128))|0);
      var $38=$s;
      var $39=(($38+$37)|0);
      var $40=HEAPU8[($39)];
      var $41=(($40)&255);
      $cr=$41;
      var $42=$y;
      var $43=$cr;
      var $44=(($2+9192)|0);
      var $45=(($44+($43<<2))|0);
      var $46=HEAP32[(($45)>>2)];
      var $47=((($42)+($46))|0);
      var $48=__ZN4jpgd12jpeg_decoder5clampEi($47);
      var $49=$d;
      var $50=(($49)|0);
      HEAP8[($50)]=$48;
      var $51=$y;
      var $52=$cr;
      var $53=(($2+11240)|0);
      var $54=(($53+($52<<2))|0);
      var $55=HEAP32[(($54)>>2)];
      var $56=$cb;
      var $57=(($2+12264)|0);
      var $58=(($57+($56<<2))|0);
      var $59=HEAP32[(($58)>>2)];
      var $60=((($55)+($59))|0);
      var $61=$60 >> 16;
      var $62=((($51)+($61))|0);
      var $63=__ZN4jpgd12jpeg_decoder5clampEi($62);
      var $64=$d;
      var $65=(($64+1)|0);
      HEAP8[($65)]=$63;
      var $66=$y;
      var $67=$cb;
      var $68=(($2+10216)|0);
      var $69=(($68+($67<<2))|0);
      var $70=HEAP32[(($69)>>2)];
      var $71=((($66)+($70))|0);
      var $72=__ZN4jpgd12jpeg_decoder5clampEi($71);
      var $73=$d;
      var $74=(($73+2)|0);
      HEAP8[($74)]=$72;
      var $75=$d;
      var $76=(($75+3)|0);
      HEAP8[($76)]=-1;
      var $77=$d;
      var $78=(($77+4)|0);
      $d=$78;
      __label__ = 7; break;
    case 7: 
      var $80=$j;
      var $81=((($80)+(1))|0);
      $j=$81;
      __label__ = 5; break;
    case 8: 
      var $83=$s;
      var $84=(($83+192)|0);
      $s=$84;
      __label__ = 9; break;
    case 9: 
      var $86=$i;
      var $87=((($86)-(1))|0);
      $i=$87;
      __label__ = 3; break;
    case 10: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder11H1V1ConvertEv["X"]=1;

function __ZN4jpgd12jpeg_decoder15decode_next_rowEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 8; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $row_block;
      var $mcu_row;
      var $p;
      var $mcu_block;
      var $component_id;
      var $q;
      var $r=__stackBase__;
      var $s;
      var $prev_num_set;
      var $pH;
      var $k;
      var $extra_bits=(__stackBase__)+(4);
      var $n;
      var $kt;
      var $n1;
      var $kt2;
      var $kt3;
      $1=$this;
      var $2=$1;
      $row_block=0;
      $mcu_row=0;
      __label__ = 3; break;
    case 3: 
      var $4=$mcu_row;
      var $5=(($2+336)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=(($4)|0) < (($6)|0);
      if ($7) { __label__ = 4; break; } else { __label__ = 68; break; }
    case 4: 
      var $9=(($2+9088)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=(($10)|0)!=0;
      if ($11) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: 
      var $13=(($2+9092)|0);
      var $14=HEAP32[(($13)>>2)];
      var $15=(($14)|0)==0;
      if ($15) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      __ZN4jpgd12jpeg_decoder15process_restartEv($2);
      __label__ = 7; break;
    case 7: 
      var $18=(($2+9144)|0);
      var $19=HEAP32[(($18)>>2)];
      $p=$19;
      $mcu_block=0;
      __label__ = 8; break;
    case 8: 
      var $21=$mcu_block;
      var $22=(($2+328)|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=(($21)|0) < (($23)|0);
      if ($24) { __label__ = 9; break; } else { __label__ = 63; break; }
    case 9: 
      var $26=$mcu_block;
      var $27=(($2+344)|0);
      var $28=(($27+($26<<2))|0);
      var $29=HEAP32[(($28)>>2)];
      $component_id=$29;
      var $30=$component_id;
      var $31=(($2+188)|0);
      var $32=(($31+($30<<2))|0);
      var $33=HEAP32[(($32)>>2)];
      var $34=(($2+132)|0);
      var $35=(($34+($33<<2))|0);
      var $36=HEAP32[(($35)>>2)];
      $q=$36;
      var $37=$component_id;
      var $38=(($2+272)|0);
      var $39=(($38+($37<<2))|0);
      var $40=HEAP32[(($39)>>2)];
      var $41=(($2+404)|0);
      var $42=(($41+($40<<2))|0);
      var $43=HEAP32[(($42)>>2)];
      var $44=__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesERi($2, $43, $r);
      $s=$44;
      var $45=HEAP32[(($r)>>2)];
      var $46=$s;
      var $47=$46 & 15;
      var $48=((__ZN4jpgdL13s_extend_testE+($47<<2))|0);
      var $49=HEAP32[(($48)>>2)];
      var $50=(($45)|0) < (($49)|0);
      if ($50) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $52=HEAP32[(($r)>>2)];
      var $53=$s;
      var $54=$53 & 15;
      var $55=((__ZN4jpgdL15s_extend_offsetE+($54<<2))|0);
      var $56=HEAP32[(($55)>>2)];
      var $57=((($52)+($56))|0);
      var $61 = $57;__label__ = 12; break;
    case 11: 
      var $59=HEAP32[(($r)>>2)];
      var $61 = $59;__label__ = 12; break;
    case 12: 
      var $61;
      $s=$61;
      var $62=$component_id;
      var $63=(($2+9128)|0);
      var $64=(($63+($62<<2))|0);
      var $65=HEAP32[(($64)>>2)];
      var $66=$s;
      var $67=((($66)+($65))|0);
      $s=$67;
      var $68=$component_id;
      var $69=(($2+9128)|0);
      var $70=(($69+($68<<2))|0);
      HEAP32[(($70)>>2)]=$67;
      var $71=$s;
      var $72=$q;
      var $73=(($72)|0);
      var $74=HEAP16[(($73)>>1)];
      var $75=(($74 << 16) >> 16);
      var $76=((($71)*($75))|0);
      var $77=(($76) & 65535);
      var $78=$p;
      var $79=(($78)|0);
      HEAP16[(($79)>>1)]=$77;
      var $80=$mcu_block;
      var $81=(($2+9148)|0);
      var $82=(($81+($80<<2))|0);
      var $83=HEAP32[(($82)>>2)];
      $prev_num_set=$83;
      var $84=$component_id;
      var $85=(($2+288)|0);
      var $86=(($85+($84<<2))|0);
      var $87=HEAP32[(($86)>>2)];
      var $88=(($2+404)|0);
      var $89=(($88+($87<<2))|0);
      var $90=HEAP32[(($89)>>2)];
      $pH=$90;
      $k=1;
      __label__ = 13; break;
    case 13: 
      var $92=$k;
      var $93=(($92)|0) < 64;
      if ($93) { __label__ = 14; break; } else { __label__ = 56; break; }
    case 14: 
      var $95=$pH;
      var $96=__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesERi($2, $95, $extra_bits);
      $s=$96;
      var $97=$s;
      var $98=$97 >> 4;
      HEAP32[(($r)>>2)]=$98;
      var $99=$s;
      var $100=$99 & 15;
      $s=$100;
      var $101=$s;
      var $102=(($101)|0)!=0;
      if ($102) { __label__ = 15; break; } else { __label__ = 34; break; }
    case 15: 
      var $104=HEAP32[(($r)>>2)];
      var $105=(($104)|0)!=0;
      if ($105) { __label__ = 16; break; } else { __label__ = 27; break; }
    case 16: 
      var $107=$k;
      var $108=HEAP32[(($r)>>2)];
      var $109=((($107)+($108))|0);
      var $110=(($109)|0) > 63;
      if ($110) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -230);
      throw "Reached an unreachable!"
    case 18: 
      var $113=$k;
      var $114=$prev_num_set;
      var $115=(($113)|0) < (($114)|0);
      if ($115) { __label__ = 19; break; } else { __label__ = 26; break; }
    case 19: 
      var $117=HEAP32[(($r)>>2)];
      var $118=$prev_num_set;
      var $119=$k;
      var $120=((($118)-($119))|0);
      var $121=(($117)|0) < (($120)|0);
      if ($121) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: 
      var $123=HEAP32[(($r)>>2)];
      var $129 = $123;__label__ = 22; break;
    case 21: 
      var $125=$prev_num_set;
      var $126=$k;
      var $127=((($125)-($126))|0);
      var $129 = $127;__label__ = 22; break;
    case 22: 
      var $129;
      $n=$129;
      var $130=$k;
      $kt=$130;
      __label__ = 23; break;
    case 23: 
      var $132=$n;
      var $133=((($132)-(1))|0);
      $n=$133;
      var $134=(($132)|0)!=0;
      if ($134) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $136=$kt;
      var $137=((($136)+(1))|0);
      $kt=$137;
      var $138=((__ZN4jpgdL5g_ZAGE+($136<<2))|0);
      var $139=HEAP32[(($138)>>2)];
      var $140=$p;
      var $141=(($140+($139<<1))|0);
      HEAP16[(($141)>>1)]=0;
      __label__ = 23; break;
    case 25: 
      __label__ = 26; break;
    case 26: 
      var $144=HEAP32[(($r)>>2)];
      var $145=$k;
      var $146=((($145)+($144))|0);
      $k=$146;
      __label__ = 27; break;
    case 27: 
      var $148=HEAP32[(($extra_bits)>>2)];
      var $149=$s;
      var $150=$149 & 15;
      var $151=((__ZN4jpgdL13s_extend_testE+($150<<2))|0);
      var $152=HEAP32[(($151)>>2)];
      var $153=(($148)|0) < (($152)|0);
      if ($153) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: 
      var $155=HEAP32[(($extra_bits)>>2)];
      var $156=$s;
      var $157=$156 & 15;
      var $158=((__ZN4jpgdL15s_extend_offsetE+($157<<2))|0);
      var $159=HEAP32[(($158)>>2)];
      var $160=((($155)+($159))|0);
      var $164 = $160;__label__ = 30; break;
    case 29: 
      var $162=HEAP32[(($extra_bits)>>2)];
      var $164 = $162;__label__ = 30; break;
    case 30: 
      var $164;
      $s=$164;
      var $165=$k;
      var $166=(($165)|0) < 64;
      if ($166) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: 
      __label__ = 33; break;
    case 32: 
      ___assert_func(((STRING_TABLE.__str114)|0), 1816, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder15decode_next_rowEv)|0), ((STRING_TABLE.__str7121)|0));
      __label__ = 33; break;
    case 33: 
      var $170=$s;
      var $171=$k;
      var $172=$q;
      var $173=(($172+($171<<1))|0);
      var $174=HEAP16[(($173)>>1)];
      var $175=(($174 << 16) >> 16);
      var $176=__ZN4jpgdL13dequantize_acEii($170, $175);
      var $177=(($176) & 65535);
      var $178=$k;
      var $179=((__ZN4jpgdL5g_ZAGE+($178<<2))|0);
      var $180=HEAP32[(($179)>>2)];
      var $181=$p;
      var $182=(($181+($180<<1))|0);
      HEAP16[(($182)>>1)]=$177;
      __label__ = 54; break;
    case 34: 
      var $184=HEAP32[(($r)>>2)];
      var $185=(($184)|0)==15;
      if ($185) { __label__ = 35; break; } else { __label__ = 52; break; }
    case 35: 
      var $187=$k;
      var $188=((($187)+(16))|0);
      var $189=(($188)|0) > 64;
      if ($189) { __label__ = 36; break; } else { __label__ = 37; break; }
    case 36: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -230);
      throw "Reached an unreachable!"
    case 37: 
      var $192=$k;
      var $193=$prev_num_set;
      var $194=(($192)|0) < (($193)|0);
      if ($194) { __label__ = 38; break; } else { __label__ = 48; break; }
    case 38: 
      var $196=$prev_num_set;
      var $197=$k;
      var $198=((($196)-($197))|0);
      var $199=16 < (($198)|0);
      if ($199) { __label__ = 39; break; } else { __label__ = 40; break; }
    case 39: 
      var $206 = 16;__label__ = 41; break;
    case 40: 
      var $202=$prev_num_set;
      var $203=$k;
      var $204=((($202)-($203))|0);
      var $206 = $204;__label__ = 41; break;
    case 41: 
      var $206;
      $n1=$206;
      var $207=$k;
      $kt2=$207;
      __label__ = 42; break;
    case 42: 
      var $209=$n1;
      var $210=((($209)-(1))|0);
      $n1=$210;
      var $211=(($209)|0)!=0;
      if ($211) { __label__ = 43; break; } else { __label__ = 47; break; }
    case 43: 
      var $213=$kt2;
      var $214=(($213)|0) <= 63;
      if ($214) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: 
      __label__ = 46; break;
    case 45: 
      ___assert_func(((STRING_TABLE.__str114)|0), 1833, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder15decode_next_rowEv)|0), ((STRING_TABLE.__str8122)|0));
      __label__ = 46; break;
    case 46: 
      var $218=$kt2;
      var $219=((($218)+(1))|0);
      $kt2=$219;
      var $220=((__ZN4jpgdL5g_ZAGE+($218<<2))|0);
      var $221=HEAP32[(($220)>>2)];
      var $222=$p;
      var $223=(($222+($221<<1))|0);
      HEAP16[(($223)>>1)]=0;
      __label__ = 42; break;
    case 47: 
      __label__ = 48; break;
    case 48: 
      var $226=$k;
      var $227=((($226)+(15))|0);
      $k=$227;
      var $228=$k;
      var $229=((__ZN4jpgdL5g_ZAGE+($228<<2))|0);
      var $230=HEAP32[(($229)>>2)];
      var $231=$p;
      var $232=(($231+($230<<1))|0);
      var $233=HEAP16[(($232)>>1)];
      var $234=(($233 << 16) >> 16);
      var $235=(($234)|0)==0;
      if ($235) { __label__ = 49; break; } else { __label__ = 50; break; }
    case 49: 
      __label__ = 51; break;
    case 50: 
      ___assert_func(((STRING_TABLE.__str114)|0), 1839, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder15decode_next_rowEv)|0), ((STRING_TABLE.__str9123)|0));
      __label__ = 51; break;
    case 51: 
      __label__ = 53; break;
    case 52: 
      __label__ = 56; break;
    case 53: 
      __label__ = 54; break;
    case 54: 
      __label__ = 55; break;
    case 55: 
      var $243=$k;
      var $244=((($243)+(1))|0);
      $k=$244;
      __label__ = 13; break;
    case 56: 
      var $246=$k;
      var $247=$prev_num_set;
      var $248=(($246)|0) < (($247)|0);
      if ($248) { __label__ = 57; break; } else { __label__ = 61; break; }
    case 57: 
      var $250=$k;
      $kt3=$250;
      __label__ = 58; break;
    case 58: 
      var $252=$kt3;
      var $253=$prev_num_set;
      var $254=(($252)|0) < (($253)|0);
      if ($254) { __label__ = 59; break; } else { __label__ = 60; break; }
    case 59: 
      var $256=$kt3;
      var $257=((($256)+(1))|0);
      $kt3=$257;
      var $258=((__ZN4jpgdL5g_ZAGE+($256<<2))|0);
      var $259=HEAP32[(($258)>>2)];
      var $260=$p;
      var $261=(($260+($259<<1))|0);
      HEAP16[(($261)>>1)]=0;
      __label__ = 58; break;
    case 60: 
      __label__ = 61; break;
    case 61: 
      var $264=$k;
      var $265=$mcu_block;
      var $266=(($2+9148)|0);
      var $267=(($266+($265<<2))|0);
      HEAP32[(($267)>>2)]=$264;
      var $268=$row_block;
      var $269=((($268)+(1))|0);
      $row_block=$269;
      __label__ = 62; break;
    case 62: 
      var $271=$mcu_block;
      var $272=((($271)+(1))|0);
      $mcu_block=$272;
      var $273=$p;
      var $274=(($273+128)|0);
      $p=$274;
      __label__ = 8; break;
    case 63: 
      var $276=(($2+9120)|0);
      var $277=HEAP8[($276)];
      var $278=(($277) & 1);
      if ($278) { __label__ = 64; break; } else { __label__ = 65; break; }
    case 64: 
      var $280=$mcu_row;
      __ZN4jpgd12jpeg_decoder20transform_mcu_expandEi($2, $280);
      __label__ = 66; break;
    case 65: 
      var $282=$mcu_row;
      __ZN4jpgd12jpeg_decoder13transform_mcuEi($2, $282);
      __label__ = 66; break;
    case 66: 
      var $284=(($2+9092)|0);
      var $285=HEAP32[(($284)>>2)];
      var $286=((($285)-(1))|0);
      HEAP32[(($284)>>2)]=$286;
      __label__ = 67; break;
    case 67: 
      var $288=$mcu_row;
      var $289=((($288)+(1))|0);
      $mcu_row=$289;
      __label__ = 3; break;
    case 68: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder15decode_next_rowEv["X"]=1;

function __ZN4jpgd12jpeg_decoder12gray_convertEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $row;
      var $d;
      var $s;
      var $i;
      $1=$this;
      var $2=$1;
      var $3=(($2+324)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($2+388)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=((($4)-($6))|0);
      $row=$7;
      var $8=(($2+13288)|0);
      var $9=HEAP32[(($8)>>2)];
      $d=$9;
      var $10=(($2+9188)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=$row;
      var $13=((($12<<3))|0);
      var $14=(($11+$13)|0);
      $s=$14;
      var $15=(($2+9100)|0);
      var $16=HEAP32[(($15)>>2)];
      $i=$16;
      __label__ = 3; break;
    case 3: 
      var $18=$i;
      var $19=(($18)|0) > 0;
      if ($19) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: 
      var $21=$s;
      var $22=$21;
      var $23=HEAP32[(($22)>>2)];
      var $24=$d;
      var $25=$24;
      HEAP32[(($25)>>2)]=$23;
      var $26=$s;
      var $27=(($26+4)|0);
      var $28=$27;
      var $29=HEAP32[(($28)>>2)];
      var $30=$d;
      var $31=(($30+4)|0);
      var $32=$31;
      HEAP32[(($32)>>2)]=$29;
      var $33=$s;
      var $34=(($33+64)|0);
      $s=$34;
      var $35=$d;
      var $36=(($35+8)|0);
      $d=$36;
      __label__ = 5; break;
    case 5: 
      var $38=$i;
      var $39=((($38)-(1))|0);
      $i=$39;
      __label__ = 3; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder12gray_convertEv["X"]=1;

function __ZN4jpgd12jpeg_decoder11H2V1ConvertEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $row;
      var $d0;
      var $y;
      var $c;
      var $i;
      var $l;
      var $j;
      var $cb;
      var $cr;
      var $rc;
      var $gc;
      var $bc;
      var $yy;
      $1=$this;
      var $2=$1;
      var $3=(($2+324)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($2+388)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=((($4)-($6))|0);
      $row=$7;
      var $8=(($2+13288)|0);
      var $9=HEAP32[(($8)>>2)];
      $d0=$9;
      var $10=(($2+9188)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=$row;
      var $13=((($12<<3))|0);
      var $14=(($11+$13)|0);
      $y=$14;
      var $15=(($2+9188)|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=(($16+128)|0);
      var $18=$row;
      var $19=((($18<<3))|0);
      var $20=(($17+$19)|0);
      $c=$20;
      var $21=(($2+9100)|0);
      var $22=HEAP32[(($21)>>2)];
      $i=$22;
      __label__ = 3; break;
    case 3: 
      var $24=$i;
      var $25=(($24)|0) > 0;
      if ($25) { __label__ = 4; break; } else { __label__ = 14; break; }
    case 4: 
      $l=0;
      __label__ = 5; break;
    case 5: 
      var $28=$l;
      var $29=(($28)|0) < 2;
      if ($29) { __label__ = 6; break; } else { __label__ = 12; break; }
    case 6: 
      $j=0;
      __label__ = 7; break;
    case 7: 
      var $32=$j;
      var $33=(($32)|0) < 4;
      if ($33) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      var $35=$c;
      var $36=(($35)|0);
      var $37=HEAPU8[($36)];
      var $38=(($37)&255);
      $cb=$38;
      var $39=$c;
      var $40=(($39+64)|0);
      var $41=HEAPU8[($40)];
      var $42=(($41)&255);
      $cr=$42;
      var $43=$cr;
      var $44=(($2+9192)|0);
      var $45=(($44+($43<<2))|0);
      var $46=HEAP32[(($45)>>2)];
      $rc=$46;
      var $47=$cr;
      var $48=(($2+11240)|0);
      var $49=(($48+($47<<2))|0);
      var $50=HEAP32[(($49)>>2)];
      var $51=$cb;
      var $52=(($2+12264)|0);
      var $53=(($52+($51<<2))|0);
      var $54=HEAP32[(($53)>>2)];
      var $55=((($50)+($54))|0);
      var $56=$55 >> 16;
      $gc=$56;
      var $57=$cb;
      var $58=(($2+10216)|0);
      var $59=(($58+($57<<2))|0);
      var $60=HEAP32[(($59)>>2)];
      $bc=$60;
      var $61=$j;
      var $62=$61 << 1;
      var $63=$y;
      var $64=(($63+$62)|0);
      var $65=HEAPU8[($64)];
      var $66=(($65)&255);
      $yy=$66;
      var $67=$yy;
      var $68=$rc;
      var $69=((($67)+($68))|0);
      var $70=__ZN4jpgd12jpeg_decoder5clampEi($69);
      var $71=$d0;
      var $72=(($71)|0);
      HEAP8[($72)]=$70;
      var $73=$yy;
      var $74=$gc;
      var $75=((($73)+($74))|0);
      var $76=__ZN4jpgd12jpeg_decoder5clampEi($75);
      var $77=$d0;
      var $78=(($77+1)|0);
      HEAP8[($78)]=$76;
      var $79=$yy;
      var $80=$bc;
      var $81=((($79)+($80))|0);
      var $82=__ZN4jpgd12jpeg_decoder5clampEi($81);
      var $83=$d0;
      var $84=(($83+2)|0);
      HEAP8[($84)]=$82;
      var $85=$d0;
      var $86=(($85+3)|0);
      HEAP8[($86)]=-1;
      var $87=$j;
      var $88=$87 << 1;
      var $89=((($88)+(1))|0);
      var $90=$y;
      var $91=(($90+$89)|0);
      var $92=HEAPU8[($91)];
      var $93=(($92)&255);
      $yy=$93;
      var $94=$yy;
      var $95=$rc;
      var $96=((($94)+($95))|0);
      var $97=__ZN4jpgd12jpeg_decoder5clampEi($96);
      var $98=$d0;
      var $99=(($98+4)|0);
      HEAP8[($99)]=$97;
      var $100=$yy;
      var $101=$gc;
      var $102=((($100)+($101))|0);
      var $103=__ZN4jpgd12jpeg_decoder5clampEi($102);
      var $104=$d0;
      var $105=(($104+5)|0);
      HEAP8[($105)]=$103;
      var $106=$yy;
      var $107=$bc;
      var $108=((($106)+($107))|0);
      var $109=__ZN4jpgd12jpeg_decoder5clampEi($108);
      var $110=$d0;
      var $111=(($110+6)|0);
      HEAP8[($111)]=$109;
      var $112=$d0;
      var $113=(($112+7)|0);
      HEAP8[($113)]=-1;
      var $114=$d0;
      var $115=(($114+8)|0);
      $d0=$115;
      var $116=$c;
      var $117=(($116+1)|0);
      $c=$117;
      __label__ = 9; break;
    case 9: 
      var $119=$j;
      var $120=((($119)+(1))|0);
      $j=$120;
      __label__ = 7; break;
    case 10: 
      var $122=$y;
      var $123=(($122+64)|0);
      $y=$123;
      __label__ = 11; break;
    case 11: 
      var $125=$l;
      var $126=((($125)+(1))|0);
      $l=$126;
      __label__ = 5; break;
    case 12: 
      var $128=$y;
      var $129=(($128+128)|0);
      $y=$129;
      var $130=$c;
      var $131=(($130+248)|0);
      $c=$131;
      __label__ = 13; break;
    case 13: 
      var $133=$i;
      var $134=((($133)-(1))|0);
      $i=$134;
      __label__ = 3; break;
    case 14: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder11H2V1ConvertEv["X"]=1;

function __ZN4jpgd12jpeg_decoder11H1V2ConvertEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $row;
      var $d0;
      var $d1;
      var $y;
      var $c;
      var $i;
      var $j;
      var $cb;
      var $cr;
      var $rc;
      var $gc;
      var $bc;
      var $yy;
      $1=$this;
      var $2=$1;
      var $3=(($2+324)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($2+388)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=((($4)-($6))|0);
      $row=$7;
      var $8=(($2+13288)|0);
      var $9=HEAP32[(($8)>>2)];
      $d0=$9;
      var $10=(($2+13292)|0);
      var $11=HEAP32[(($10)>>2)];
      $d1=$11;
      var $12=$row;
      var $13=(($12)|0) < 8;
      if ($13) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $15=(($2+9188)|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=$row;
      var $18=((($17<<3))|0);
      var $19=(($16+$18)|0);
      $y=$19;
      __label__ = 5; break;
    case 4: 
      var $21=(($2+9188)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=(($22+64)|0);
      var $24=$row;
      var $25=$24 & 7;
      var $26=((($25<<3))|0);
      var $27=(($23+$26)|0);
      $y=$27;
      __label__ = 5; break;
    case 5: 
      var $29=(($2+9188)|0);
      var $30=HEAP32[(($29)>>2)];
      var $31=(($30+128)|0);
      var $32=$row;
      var $33=$32 >> 1;
      var $34=((($33<<3))|0);
      var $35=(($31+$34)|0);
      $c=$35;
      var $36=(($2+9100)|0);
      var $37=HEAP32[(($36)>>2)];
      $i=$37;
      __label__ = 6; break;
    case 6: 
      var $39=$i;
      var $40=(($39)|0) > 0;
      if ($40) { __label__ = 7; break; } else { __label__ = 13; break; }
    case 7: 
      $j=0;
      __label__ = 8; break;
    case 8: 
      var $43=$j;
      var $44=(($43)|0) < 8;
      if ($44) { __label__ = 9; break; } else { __label__ = 11; break; }
    case 9: 
      var $46=$j;
      var $47=(($46)|0);
      var $48=$c;
      var $49=(($48+$47)|0);
      var $50=HEAPU8[($49)];
      var $51=(($50)&255);
      $cb=$51;
      var $52=$j;
      var $53=((($52)+(64))|0);
      var $54=$c;
      var $55=(($54+$53)|0);
      var $56=HEAPU8[($55)];
      var $57=(($56)&255);
      $cr=$57;
      var $58=$cr;
      var $59=(($2+9192)|0);
      var $60=(($59+($58<<2))|0);
      var $61=HEAP32[(($60)>>2)];
      $rc=$61;
      var $62=$cr;
      var $63=(($2+11240)|0);
      var $64=(($63+($62<<2))|0);
      var $65=HEAP32[(($64)>>2)];
      var $66=$cb;
      var $67=(($2+12264)|0);
      var $68=(($67+($66<<2))|0);
      var $69=HEAP32[(($68)>>2)];
      var $70=((($65)+($69))|0);
      var $71=$70 >> 16;
      $gc=$71;
      var $72=$cb;
      var $73=(($2+10216)|0);
      var $74=(($73+($72<<2))|0);
      var $75=HEAP32[(($74)>>2)];
      $bc=$75;
      var $76=$j;
      var $77=$y;
      var $78=(($77+$76)|0);
      var $79=HEAPU8[($78)];
      var $80=(($79)&255);
      $yy=$80;
      var $81=$yy;
      var $82=$rc;
      var $83=((($81)+($82))|0);
      var $84=__ZN4jpgd12jpeg_decoder5clampEi($83);
      var $85=$d0;
      var $86=(($85)|0);
      HEAP8[($86)]=$84;
      var $87=$yy;
      var $88=$gc;
      var $89=((($87)+($88))|0);
      var $90=__ZN4jpgd12jpeg_decoder5clampEi($89);
      var $91=$d0;
      var $92=(($91+1)|0);
      HEAP8[($92)]=$90;
      var $93=$yy;
      var $94=$bc;
      var $95=((($93)+($94))|0);
      var $96=__ZN4jpgd12jpeg_decoder5clampEi($95);
      var $97=$d0;
      var $98=(($97+2)|0);
      HEAP8[($98)]=$96;
      var $99=$d0;
      var $100=(($99+3)|0);
      HEAP8[($100)]=-1;
      var $101=$j;
      var $102=((($101)+(8))|0);
      var $103=$y;
      var $104=(($103+$102)|0);
      var $105=HEAPU8[($104)];
      var $106=(($105)&255);
      $yy=$106;
      var $107=$yy;
      var $108=$rc;
      var $109=((($107)+($108))|0);
      var $110=__ZN4jpgd12jpeg_decoder5clampEi($109);
      var $111=$d1;
      var $112=(($111)|0);
      HEAP8[($112)]=$110;
      var $113=$yy;
      var $114=$gc;
      var $115=((($113)+($114))|0);
      var $116=__ZN4jpgd12jpeg_decoder5clampEi($115);
      var $117=$d1;
      var $118=(($117+1)|0);
      HEAP8[($118)]=$116;
      var $119=$yy;
      var $120=$bc;
      var $121=((($119)+($120))|0);
      var $122=__ZN4jpgd12jpeg_decoder5clampEi($121);
      var $123=$d1;
      var $124=(($123+2)|0);
      HEAP8[($124)]=$122;
      var $125=$d1;
      var $126=(($125+3)|0);
      HEAP8[($126)]=-1;
      var $127=$d0;
      var $128=(($127+4)|0);
      $d0=$128;
      var $129=$d1;
      var $130=(($129+4)|0);
      $d1=$130;
      __label__ = 10; break;
    case 10: 
      var $132=$j;
      var $133=((($132)+(1))|0);
      $j=$133;
      __label__ = 8; break;
    case 11: 
      var $135=$y;
      var $136=(($135+256)|0);
      $y=$136;
      var $137=$c;
      var $138=(($137+256)|0);
      $c=$138;
      __label__ = 12; break;
    case 12: 
      var $140=$i;
      var $141=((($140)-(1))|0);
      $i=$141;
      __label__ = 6; break;
    case 13: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder11H1V2ConvertEv["X"]=1;

function __ZN4jpgd12jpeg_decoder11H2V2ConvertEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $row;
      var $d0;
      var $d1;
      var $y;
      var $c;
      var $i;
      var $l;
      var $j;
      var $cb;
      var $cr;
      var $rc;
      var $gc;
      var $bc;
      var $yy;
      $1=$this;
      var $2=$1;
      var $3=(($2+324)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($2+388)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=((($4)-($6))|0);
      $row=$7;
      var $8=(($2+13288)|0);
      var $9=HEAP32[(($8)>>2)];
      $d0=$9;
      var $10=(($2+13292)|0);
      var $11=HEAP32[(($10)>>2)];
      $d1=$11;
      var $12=$row;
      var $13=(($12)|0) < 8;
      if ($13) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $15=(($2+9188)|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=$row;
      var $18=((($17<<3))|0);
      var $19=(($16+$18)|0);
      $y=$19;
      __label__ = 5; break;
    case 4: 
      var $21=(($2+9188)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=(($22+128)|0);
      var $24=$row;
      var $25=$24 & 7;
      var $26=((($25<<3))|0);
      var $27=(($23+$26)|0);
      $y=$27;
      __label__ = 5; break;
    case 5: 
      var $29=(($2+9188)|0);
      var $30=HEAP32[(($29)>>2)];
      var $31=(($30+256)|0);
      var $32=$row;
      var $33=$32 >> 1;
      var $34=((($33<<3))|0);
      var $35=(($31+$34)|0);
      $c=$35;
      var $36=(($2+9100)|0);
      var $37=HEAP32[(($36)>>2)];
      $i=$37;
      __label__ = 6; break;
    case 6: 
      var $39=$i;
      var $40=(($39)|0) > 0;
      if ($40) { __label__ = 7; break; } else { __label__ = 17; break; }
    case 7: 
      $l=0;
      __label__ = 8; break;
    case 8: 
      var $43=$l;
      var $44=(($43)|0) < 2;
      if ($44) { __label__ = 9; break; } else { __label__ = 15; break; }
    case 9: 
      $j=0;
      __label__ = 10; break;
    case 10: 
      var $47=$j;
      var $48=(($47)|0) < 8;
      if ($48) { __label__ = 11; break; } else { __label__ = 13; break; }
    case 11: 
      var $50=$c;
      var $51=(($50)|0);
      var $52=HEAPU8[($51)];
      var $53=(($52)&255);
      $cb=$53;
      var $54=$c;
      var $55=(($54+64)|0);
      var $56=HEAPU8[($55)];
      var $57=(($56)&255);
      $cr=$57;
      var $58=$cr;
      var $59=(($2+9192)|0);
      var $60=(($59+($58<<2))|0);
      var $61=HEAP32[(($60)>>2)];
      $rc=$61;
      var $62=$cr;
      var $63=(($2+11240)|0);
      var $64=(($63+($62<<2))|0);
      var $65=HEAP32[(($64)>>2)];
      var $66=$cb;
      var $67=(($2+12264)|0);
      var $68=(($67+($66<<2))|0);
      var $69=HEAP32[(($68)>>2)];
      var $70=((($65)+($69))|0);
      var $71=$70 >> 16;
      $gc=$71;
      var $72=$cb;
      var $73=(($2+10216)|0);
      var $74=(($73+($72<<2))|0);
      var $75=HEAP32[(($74)>>2)];
      $bc=$75;
      var $76=$j;
      var $77=$y;
      var $78=(($77+$76)|0);
      var $79=HEAPU8[($78)];
      var $80=(($79)&255);
      $yy=$80;
      var $81=$yy;
      var $82=$rc;
      var $83=((($81)+($82))|0);
      var $84=__ZN4jpgd12jpeg_decoder5clampEi($83);
      var $85=$d0;
      var $86=(($85)|0);
      HEAP8[($86)]=$84;
      var $87=$yy;
      var $88=$gc;
      var $89=((($87)+($88))|0);
      var $90=__ZN4jpgd12jpeg_decoder5clampEi($89);
      var $91=$d0;
      var $92=(($91+1)|0);
      HEAP8[($92)]=$90;
      var $93=$yy;
      var $94=$bc;
      var $95=((($93)+($94))|0);
      var $96=__ZN4jpgd12jpeg_decoder5clampEi($95);
      var $97=$d0;
      var $98=(($97+2)|0);
      HEAP8[($98)]=$96;
      var $99=$d0;
      var $100=(($99+3)|0);
      HEAP8[($100)]=-1;
      var $101=$j;
      var $102=((($101)+(1))|0);
      var $103=$y;
      var $104=(($103+$102)|0);
      var $105=HEAPU8[($104)];
      var $106=(($105)&255);
      $yy=$106;
      var $107=$yy;
      var $108=$rc;
      var $109=((($107)+($108))|0);
      var $110=__ZN4jpgd12jpeg_decoder5clampEi($109);
      var $111=$d0;
      var $112=(($111+4)|0);
      HEAP8[($112)]=$110;
      var $113=$yy;
      var $114=$gc;
      var $115=((($113)+($114))|0);
      var $116=__ZN4jpgd12jpeg_decoder5clampEi($115);
      var $117=$d0;
      var $118=(($117+5)|0);
      HEAP8[($118)]=$116;
      var $119=$yy;
      var $120=$bc;
      var $121=((($119)+($120))|0);
      var $122=__ZN4jpgd12jpeg_decoder5clampEi($121);
      var $123=$d0;
      var $124=(($123+6)|0);
      HEAP8[($124)]=$122;
      var $125=$d0;
      var $126=(($125+7)|0);
      HEAP8[($126)]=-1;
      var $127=$j;
      var $128=((($127)+(8))|0);
      var $129=$y;
      var $130=(($129+$128)|0);
      var $131=HEAPU8[($130)];
      var $132=(($131)&255);
      $yy=$132;
      var $133=$yy;
      var $134=$rc;
      var $135=((($133)+($134))|0);
      var $136=__ZN4jpgd12jpeg_decoder5clampEi($135);
      var $137=$d1;
      var $138=(($137)|0);
      HEAP8[($138)]=$136;
      var $139=$yy;
      var $140=$gc;
      var $141=((($139)+($140))|0);
      var $142=__ZN4jpgd12jpeg_decoder5clampEi($141);
      var $143=$d1;
      var $144=(($143+1)|0);
      HEAP8[($144)]=$142;
      var $145=$yy;
      var $146=$bc;
      var $147=((($145)+($146))|0);
      var $148=__ZN4jpgd12jpeg_decoder5clampEi($147);
      var $149=$d1;
      var $150=(($149+2)|0);
      HEAP8[($150)]=$148;
      var $151=$d1;
      var $152=(($151+3)|0);
      HEAP8[($152)]=-1;
      var $153=$j;
      var $154=((($153)+(8))|0);
      var $155=((($154)+(1))|0);
      var $156=$y;
      var $157=(($156+$155)|0);
      var $158=HEAPU8[($157)];
      var $159=(($158)&255);
      $yy=$159;
      var $160=$yy;
      var $161=$rc;
      var $162=((($160)+($161))|0);
      var $163=__ZN4jpgd12jpeg_decoder5clampEi($162);
      var $164=$d1;
      var $165=(($164+4)|0);
      HEAP8[($165)]=$163;
      var $166=$yy;
      var $167=$gc;
      var $168=((($166)+($167))|0);
      var $169=__ZN4jpgd12jpeg_decoder5clampEi($168);
      var $170=$d1;
      var $171=(($170+5)|0);
      HEAP8[($171)]=$169;
      var $172=$yy;
      var $173=$bc;
      var $174=((($172)+($173))|0);
      var $175=__ZN4jpgd12jpeg_decoder5clampEi($174);
      var $176=$d1;
      var $177=(($176+6)|0);
      HEAP8[($177)]=$175;
      var $178=$d1;
      var $179=(($178+7)|0);
      HEAP8[($179)]=-1;
      var $180=$d0;
      var $181=(($180+8)|0);
      $d0=$181;
      var $182=$d1;
      var $183=(($182+8)|0);
      $d1=$183;
      var $184=$c;
      var $185=(($184+1)|0);
      $c=$185;
      __label__ = 12; break;
    case 12: 
      var $187=$j;
      var $188=((($187)+(2))|0);
      $j=$188;
      __label__ = 10; break;
    case 13: 
      var $190=$y;
      var $191=(($190+64)|0);
      $y=$191;
      __label__ = 14; break;
    case 14: 
      var $193=$l;
      var $194=((($193)+(1))|0);
      $l=$194;
      __label__ = 8; break;
    case 15: 
      var $196=$y;
      var $197=(($196+256)|0);
      $y=$197;
      var $198=$c;
      var $199=(($198+376)|0);
      $c=$199;
      __label__ = 16; break;
    case 16: 
      var $201=$i;
      var $202=((($201)-(1))|0);
      $i=$202;
      __label__ = 6; break;
    case 17: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder11H2V2ConvertEv["X"]=1;

function __ZN4jpgd12jpeg_decoder16expanded_convertEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $row;
      var $Py;
      var $d;
      var $i;
      var $k;
      var $Y_ofs;
      var $Cb_ofs;
      var $Cr_ofs;
      var $j;
      var $y;
      var $cb;
      var $cr;
      $1=$this;
      var $2=$1;
      var $3=(($2+324)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($2+388)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=((($4)-($6))|0);
      $row=$7;
      var $8=(($2+9188)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=$row;
      var $11=((((($10)|0))/(8))&-1);
      var $12=((($11<<6))|0);
      var $13=(($2+156)|0);
      var $14=(($13)|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=((($12)*($15))|0);
      var $17=(($9+$16)|0);
      var $18=$row;
      var $19=$18 & 7;
      var $20=((($19<<3))|0);
      var $21=(($17+$20)|0);
      $Py=$21;
      var $22=(($2+13288)|0);
      var $23=HEAP32[(($22)>>2)];
      $d=$23;
      var $24=(($2+9100)|0);
      var $25=HEAP32[(($24)>>2)];
      $i=$25;
      __label__ = 3; break;
    case 3: 
      var $27=$i;
      var $28=(($27)|0) > 0;
      if ($28) { __label__ = 4; break; } else { __label__ = 14; break; }
    case 4: 
      $k=0;
      __label__ = 5; break;
    case 5: 
      var $31=$k;
      var $32=(($2+320)|0);
      var $33=HEAP32[(($32)>>2)];
      var $34=(($31)|0) < (($33)|0);
      if ($34) { __label__ = 6; break; } else { __label__ = 12; break; }
    case 6: 
      var $36=$k;
      var $37=((($36<<3))|0);
      $Y_ofs=$37;
      var $38=$Y_ofs;
      var $39=(($2+9116)|0);
      var $40=HEAP32[(($39)>>2)];
      var $41=((($40<<6))|0);
      var $42=((($38)+($41))|0);
      $Cb_ofs=$42;
      var $43=$Y_ofs;
      var $44=(($2+9116)|0);
      var $45=HEAP32[(($44)>>2)];
      var $46=((($45<<6))|0);
      var $47=((($46<<1))|0);
      var $48=((($43)+($47))|0);
      $Cr_ofs=$48;
      $j=0;
      __label__ = 7; break;
    case 7: 
      var $50=$j;
      var $51=(($50)|0) < 8;
      if ($51) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      var $53=$Y_ofs;
      var $54=$j;
      var $55=((($53)+($54))|0);
      var $56=$Py;
      var $57=(($56+$55)|0);
      var $58=HEAPU8[($57)];
      var $59=(($58)&255);
      $y=$59;
      var $60=$Cb_ofs;
      var $61=$j;
      var $62=((($60)+($61))|0);
      var $63=$Py;
      var $64=(($63+$62)|0);
      var $65=HEAPU8[($64)];
      var $66=(($65)&255);
      $cb=$66;
      var $67=$Cr_ofs;
      var $68=$j;
      var $69=((($67)+($68))|0);
      var $70=$Py;
      var $71=(($70+$69)|0);
      var $72=HEAPU8[($71)];
      var $73=(($72)&255);
      $cr=$73;
      var $74=$y;
      var $75=$cr;
      var $76=(($2+9192)|0);
      var $77=(($76+($75<<2))|0);
      var $78=HEAP32[(($77)>>2)];
      var $79=((($74)+($78))|0);
      var $80=__ZN4jpgd12jpeg_decoder5clampEi($79);
      var $81=$d;
      var $82=(($81)|0);
      HEAP8[($82)]=$80;
      var $83=$y;
      var $84=$cr;
      var $85=(($2+11240)|0);
      var $86=(($85+($84<<2))|0);
      var $87=HEAP32[(($86)>>2)];
      var $88=$cb;
      var $89=(($2+12264)|0);
      var $90=(($89+($88<<2))|0);
      var $91=HEAP32[(($90)>>2)];
      var $92=((($87)+($91))|0);
      var $93=$92 >> 16;
      var $94=((($83)+($93))|0);
      var $95=__ZN4jpgd12jpeg_decoder5clampEi($94);
      var $96=$d;
      var $97=(($96+1)|0);
      HEAP8[($97)]=$95;
      var $98=$y;
      var $99=$cb;
      var $100=(($2+10216)|0);
      var $101=(($100+($99<<2))|0);
      var $102=HEAP32[(($101)>>2)];
      var $103=((($98)+($102))|0);
      var $104=__ZN4jpgd12jpeg_decoder5clampEi($103);
      var $105=$d;
      var $106=(($105+2)|0);
      HEAP8[($106)]=$104;
      var $107=$d;
      var $108=(($107+3)|0);
      HEAP8[($108)]=-1;
      var $109=$d;
      var $110=(($109+4)|0);
      $d=$110;
      __label__ = 9; break;
    case 9: 
      var $112=$j;
      var $113=((($112)+(1))|0);
      $j=$113;
      __label__ = 7; break;
    case 10: 
      __label__ = 11; break;
    case 11: 
      var $116=$k;
      var $117=((($116)+(8))|0);
      $k=$117;
      __label__ = 5; break;
    case 12: 
      var $119=(($2+9108)|0);
      var $120=HEAP32[(($119)>>2)];
      var $121=((($120<<6))|0);
      var $122=$Py;
      var $123=(($122+$121)|0);
      $Py=$123;
      __label__ = 13; break;
    case 13: 
      var $125=$i;
      var $126=((($125)-(1))|0);
      $i=$126;
      __label__ = 3; break;
    case 14: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder16expanded_convertEv["X"]=1;

function __ZN4jpgd12jpeg_decoder8find_eoiEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$this;
      var $2=$1;
      var $3=(($2+56)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($4)|0)!=0;
      if ($5) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      var $7=(($2+9080)|0);
      HEAP32[(($7)>>2)]=16;
      var $8=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      var $9=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      var $10=__ZN4jpgd12jpeg_decoder15process_markersEv($2);
      __label__ = 4; break;
    case 4: 
      var $12=(($2+492)|0);
      var $13=HEAP32[(($12)>>2)];
      var $14=(($2+13304)|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=((($15)-($13))|0);
      HEAP32[(($14)>>2)]=$16;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder6decodeEPPKvPj($this, $pScan_line, $pScan_line_len) {
  ;
  var __label__;
  __label__ = 2; 
  var setjmpTable = {"8": function(value) { __label__ = 33; $26 = value },dummy: 0};
  while(1) try { switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $2=$this;
      $3=$pScan_line;
      $4=$pScan_line_len;
      var $5=$2;
      var $6=(($5+13296)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=(($7)|0)!=0;
      if ($8) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      var $10=(($5+13300)|0);
      var $11=HEAP8[($10)];
      var $12=(($11) & 1);
      if ($12) { __label__ = 5; break; } else { __label__ = 4; break; }
    case 4: 
      $1=-1;
      __label__ = 32; break;
    case 5: 
      var $15=(($5+384)|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=(($16)|0)==0;
      if ($17) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      $1=1;
      __label__ = 32; break;
    case 7: 
      var $20=(($5+388)|0);
      var $21=HEAP32[(($20)>>2)];
      var $22=(($21)|0)==0;
      if ($22) { __label__ = 8; break; } else { __label__ = 16; break; }
    case 8: 
      var $24=(($5)|0);
      var $25=(($24)|0);
      var $26=(HEAP32[(($25)>>2)]=__label__, 0);
      __label__ = 33; break;
    case 33: 
      var $27=(($26)|0)!=0;
      if ($27) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      $1=-1;
      __label__ = 32; break;
    case 10: 
      var $30=(($5+56)|0);
      var $31=HEAP32[(($30)>>2)];
      var $32=(($31)|0)!=0;
      if ($32) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: 
      __ZN4jpgd12jpeg_decoder13load_next_rowEv($5);
      __label__ = 13; break;
    case 12: 
      __ZN4jpgd12jpeg_decoder15decode_next_rowEv($5);
      __label__ = 13; break;
    case 13: 
      var $36=(($5+384)|0);
      var $37=HEAP32[(($36)>>2)];
      var $38=(($5+324)|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=(($37)|0) <= (($39)|0);
      if ($40) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: 
      __ZN4jpgd12jpeg_decoder8find_eoiEv($5);
      __label__ = 15; break;
    case 15: 
      var $43=(($5+324)|0);
      var $44=HEAP32[(($43)>>2)];
      var $45=(($5+388)|0);
      HEAP32[(($45)>>2)]=$44;
      __label__ = 16; break;
    case 16: 
      var $47=(($5+9120)|0);
      var $48=HEAP8[($47)];
      var $49=(($48) & 1);
      if ($49) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      __ZN4jpgd12jpeg_decoder16expanded_convertEv($5);
      var $51=(($5+13288)|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=$3;
      HEAP32[(($53)>>2)]=$52;
      __label__ = 31; break;
    case 18: 
      var $55=(($5+148)|0);
      var $56=HEAP32[(($55)>>2)];
      if ((($56)|0) == 4) {
        __label__ = 19; break;
      }
      else if ((($56)|0) == 2) {
        __label__ = 23; break;
      }
      else if ((($56)|0) == 3) {
        __label__ = 24; break;
      }
      else if ((($56)|0) == 1) {
        __label__ = 28; break;
      }
      else if ((($56)|0) == 0) {
        __label__ = 29; break;
      }
      else {
      __label__ = 30; break;
      }
      
    case 19: 
      var $58=(($5+388)|0);
      var $59=HEAP32[(($58)>>2)];
      var $60=$59 & 1;
      var $61=(($60)|0)==0;
      if ($61) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: 
      __ZN4jpgd12jpeg_decoder11H2V2ConvertEv($5);
      var $63=(($5+13288)|0);
      var $64=HEAP32[(($63)>>2)];
      var $65=$3;
      HEAP32[(($65)>>2)]=$64;
      __label__ = 22; break;
    case 21: 
      var $67=(($5+13292)|0);
      var $68=HEAP32[(($67)>>2)];
      var $69=$3;
      HEAP32[(($69)>>2)]=$68;
      __label__ = 22; break;
    case 22: 
      __label__ = 30; break;
    case 23: 
      __ZN4jpgd12jpeg_decoder11H2V1ConvertEv($5);
      var $72=(($5+13288)|0);
      var $73=HEAP32[(($72)>>2)];
      var $74=$3;
      HEAP32[(($74)>>2)]=$73;
      __label__ = 30; break;
    case 24: 
      var $76=(($5+388)|0);
      var $77=HEAP32[(($76)>>2)];
      var $78=$77 & 1;
      var $79=(($78)|0)==0;
      if ($79) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: 
      __ZN4jpgd12jpeg_decoder11H1V2ConvertEv($5);
      var $81=(($5+13288)|0);
      var $82=HEAP32[(($81)>>2)];
      var $83=$3;
      HEAP32[(($83)>>2)]=$82;
      __label__ = 27; break;
    case 26: 
      var $85=(($5+13292)|0);
      var $86=HEAP32[(($85)>>2)];
      var $87=$3;
      HEAP32[(($87)>>2)]=$86;
      __label__ = 27; break;
    case 27: 
      __label__ = 30; break;
    case 28: 
      __ZN4jpgd12jpeg_decoder11H1V1ConvertEv($5);
      var $90=(($5+13288)|0);
      var $91=HEAP32[(($90)>>2)];
      var $92=$3;
      HEAP32[(($92)>>2)]=$91;
      __label__ = 30; break;
    case 29: 
      __ZN4jpgd12jpeg_decoder12gray_convertEv($5);
      var $94=(($5+13288)|0);
      var $95=HEAP32[(($94)>>2)];
      var $96=$3;
      HEAP32[(($96)>>2)]=$95;
      __label__ = 30; break;
    case 30: 
      __label__ = 31; break;
    case 31: 
      var $99=(($5+392)|0);
      var $100=HEAP32[(($99)>>2)];
      var $101=$4;
      HEAP32[(($101)>>2)]=$100;
      var $102=(($5+388)|0);
      var $103=HEAP32[(($102)>>2)];
      var $104=((($103)-(1))|0);
      HEAP32[(($102)>>2)]=$104;
      var $105=(($5+384)|0);
      var $106=HEAP32[(($105)>>2)];
      var $107=((($106)-(1))|0);
      HEAP32[(($105)>>2)]=$107;
      $1=0;
      __label__ = 32; break;
    case 32: 
      var $109=$1;
      ;
      return $109;
    default: assert(0, "bad label: " + __label__);
  } } catch(e) { if (!e.longjmp) throw(e); setjmpTable[e.label](e.value) }
}
__ZN4jpgd12jpeg_decoder6decodeEPPKvPj["X"]=1;

function __ZN4jpgd12jpeg_decoder15make_huff_tableEiPNS0_11huff_tablesE($this, $index, $pH) {
  var __stackBase__  = STACKTOP; STACKTOP += 1288; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $p;
      var $i;
      var $l;
      var $si;
      var $huffsize=__stackBase__;
      var $huffcode=(__stackBase__)+(260);
      var $code;
      var $subtree;
      var $code_size;
      var $lastp;
      var $nextfreeentry;
      var $currententry;
      var $has_extrabits;
      var $extra_bits;
      var $num_extra_bits;
      var $bits_to_fetch;
      var $total_codesize;
      $1=$this;
      $2=$index;
      $3=$pH;
      var $4=$1;
      var $5=$2;
      var $6=(($4+60)|0);
      var $7=(($6+$5)|0);
      var $8=HEAPU8[($7)];
      var $9=(($8)&255);
      var $10=(($9)|0)!=0;
      var $11=$3;
      var $12=(($11)|0);
      var $13=(($10)&1);
      HEAP8[($12)]=$13;
      $p=0;
      $l=1;
      __label__ = 3; break;
    case 3: 
      var $15=$l;
      var $16=(($15)|0) <= 16;
      if ($16) { __label__ = 4; break; } else { __label__ = 10; break; }
    case 4: 
      $i=1;
      __label__ = 5; break;
    case 5: 
      var $19=$i;
      var $20=$l;
      var $21=$2;
      var $22=(($4+68)|0);
      var $23=(($22+($21<<2))|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=(($24+$20)|0);
      var $26=HEAPU8[($25)];
      var $27=(($26)&255);
      var $28=(($19)|0) <= (($27)|0);
      if ($28) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: 
      var $30=$l;
      var $31=(($30) & 255);
      var $32=$p;
      var $33=((($32)+(1))|0);
      $p=$33;
      var $34=(($huffsize+$32)|0);
      HEAP8[($34)]=$31;
      __label__ = 7; break;
    case 7: 
      var $36=$i;
      var $37=((($36)+(1))|0);
      $i=$37;
      __label__ = 5; break;
    case 8: 
      __label__ = 9; break;
    case 9: 
      var $40=$l;
      var $41=((($40)+(1))|0);
      $l=$41;
      __label__ = 3; break;
    case 10: 
      var $43=$p;
      var $44=(($huffsize+$43)|0);
      HEAP8[($44)]=0;
      var $45=$p;
      $lastp=$45;
      $code=0;
      var $46=(($huffsize)|0);
      var $47=HEAPU8[($46)];
      var $48=(($47)&255);
      $si=$48;
      $p=0;
      __label__ = 11; break;
    case 11: 
      var $50=$p;
      var $51=(($huffsize+$50)|0);
      var $52=HEAP8[($51)];
      var $53=(($52 << 24) >> 24)!=0;
      if ($53) { __label__ = 12; break; } else { __label__ = 16; break; }
    case 12: 
      __label__ = 13; break;
    case 13: 
      var $56=$p;
      var $57=(($huffsize+$56)|0);
      var $58=HEAPU8[($57)];
      var $59=(($58)&255);
      var $60=$si;
      var $61=(($59)|0)==(($60)|0);
      if ($61) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: 
      var $63=$code;
      var $64=$p;
      var $65=((($64)+(1))|0);
      $p=$65;
      var $66=(($huffcode+($64<<2))|0);
      HEAP32[(($66)>>2)]=$63;
      var $67=$code;
      var $68=((($67)+(1))|0);
      $code=$68;
      __label__ = 13; break;
    case 15: 
      var $70=$code;
      var $71=$70 << 1;
      $code=$71;
      var $72=$si;
      var $73=((($72)+(1))|0);
      $si=$73;
      __label__ = 11; break;
    case 16: 
      var $75=$3;
      var $76=(($75+4)|0);
      var $77=(($76)|0);
      var $78=$77;
      for (var $$dest = $78>>2, $$stop = $$dest + 256; $$dest < $$stop; $$dest++) {
        HEAP32[$$dest] = 0
      };
      var $79=$3;
      var $80=(($79+1028)|0);
      var $81=(($80)|0);
      var $82=$81;
      for (var $$dest = $82>>2, $$stop = $$dest + 256; $$dest < $$stop; $$dest++) {
        HEAP32[$$dest] = 0
      };
      var $83=$3;
      var $84=(($83+2308)|0);
      var $85=(($84)|0);
      var $86=$85;
      for (var $$dest = $86>>2, $$stop = $$dest + 512; $$dest < $$stop; $$dest++) {
        HEAP32[$$dest] = 0
      };
      var $87=$3;
      var $88=(($87+2052)|0);
      var $89=(($88)|0);
      _memset($89, 0, 256, 1);
      $nextfreeentry=-1;
      $p=0;
      __label__ = 17; break;
    case 17: 
      var $91=$p;
      var $92=$lastp;
      var $93=(($91)|0) < (($92)|0);
      if ($93) { __label__ = 18; break; } else { __label__ = 52; break; }
    case 18: 
      var $95=$p;
      var $96=$2;
      var $97=(($4+100)|0);
      var $98=(($97+($96<<2))|0);
      var $99=HEAP32[(($98)>>2)];
      var $100=(($99+$95)|0);
      var $101=HEAPU8[($100)];
      var $102=(($101)&255);
      $i=$102;
      var $103=$p;
      var $104=(($huffcode+($103<<2))|0);
      var $105=HEAP32[(($104)>>2)];
      $code=$105;
      var $106=$p;
      var $107=(($huffsize+$106)|0);
      var $108=HEAPU8[($107)];
      var $109=(($108)&255);
      $code_size=$109;
      var $110=$code_size;
      var $111=(($110) & 255);
      var $112=$i;
      var $113=$3;
      var $114=(($113+2052)|0);
      var $115=(($114+$112)|0);
      HEAP8[($115)]=$111;
      var $116=$code_size;
      var $117=(($116)|0) <= 8;
      if ($117) { __label__ = 19; break; } else { __label__ = 37; break; }
    case 19: 
      var $119=$code_size;
      var $120=(((8)-($119))|0);
      var $121=$code;
      var $122=$121 << $120;
      $code=$122;
      var $123=$code_size;
      var $124=(((8)-($123))|0);
      var $125=1 << $124;
      $l=$125;
      __label__ = 20; break;
    case 20: 
      var $127=$l;
      var $128=(($127)|0) > 0;
      if ($128) { __label__ = 21; break; } else { __label__ = 36; break; }
    case 21: 
      var $130=$i;
      var $131=(($130)|0) < 256;
      if ($131) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: 
      __label__ = 24; break;
    case 23: 
      ___assert_func(((STRING_TABLE.__str114)|0), 2278, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder15make_huff_tableEiPNS0_11huff_tablesE)|0), ((STRING_TABLE.__str10124)|0));
      __label__ = 24; break;
    case 24: 
      var $135=$i;
      var $136=$code;
      var $137=$3;
      var $138=(($137+4)|0);
      var $139=(($138+($136<<2))|0);
      HEAP32[(($139)>>2)]=$135;
      $has_extrabits=0;
      $extra_bits=0;
      var $140=$i;
      var $141=$140 & 15;
      $num_extra_bits=$141;
      var $142=$code_size;
      $bits_to_fetch=$142;
      var $143=$num_extra_bits;
      var $144=(($143)|0)!=0;
      if ($144) { __label__ = 25; break; } else { __label__ = 31; break; }
    case 25: 
      var $146=$code_size;
      var $147=$num_extra_bits;
      var $148=((($146)+($147))|0);
      $total_codesize=$148;
      var $149=$total_codesize;
      var $150=(($149)|0) <= 8;
      if ($150) { __label__ = 26; break; } else { __label__ = 30; break; }
    case 26: 
      $has_extrabits=1;
      var $152=$num_extra_bits;
      var $153=1 << $152;
      var $154=((($153)-(1))|0);
      var $155=$code;
      var $156=$total_codesize;
      var $157=(((8)-($156))|0);
      var $158=$155 >>> (($157)>>>0);
      var $159=$154 & $158;
      $extra_bits=$159;
      var $160=$extra_bits;
      var $161=(($160)|0) <= 32767;
      if ($161) { __label__ = 27; break; } else { __label__ = 28; break; }
    case 27: 
      __label__ = 29; break;
    case 28: 
      ___assert_func(((STRING_TABLE.__str114)|0), 2294, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder15make_huff_tableEiPNS0_11huff_tablesE)|0), ((STRING_TABLE.__str11125)|0));
      __label__ = 29; break;
    case 29: 
      var $165=$num_extra_bits;
      var $166=$bits_to_fetch;
      var $167=((($166)+($165))|0);
      $bits_to_fetch=$167;
      __label__ = 30; break;
    case 30: 
      __label__ = 31; break;
    case 31: 
      var $170=$has_extrabits;
      var $171=(($170) & 1);
      if ($171) { __label__ = 33; break; } else { __label__ = 32; break; }
    case 32: 
      var $173=$i;
      var $174=$bits_to_fetch;
      var $175=$174 << 8;
      var $176=$173 | $175;
      var $177=$code;
      var $178=$3;
      var $179=(($178+1028)|0);
      var $180=(($179+($177<<2))|0);
      HEAP32[(($180)>>2)]=$176;
      __label__ = 34; break;
    case 33: 
      var $182=$i;
      var $183=$182 | 32768;
      var $184=$extra_bits;
      var $185=$184 << 16;
      var $186=$183 | $185;
      var $187=$bits_to_fetch;
      var $188=$187 << 8;
      var $189=$186 | $188;
      var $190=$code;
      var $191=$3;
      var $192=(($191+1028)|0);
      var $193=(($192+($190<<2))|0);
      HEAP32[(($193)>>2)]=$189;
      __label__ = 34; break;
    case 34: 
      var $195=$code;
      var $196=((($195)+(1))|0);
      $code=$196;
      __label__ = 35; break;
    case 35: 
      var $198=$l;
      var $199=((($198)-(1))|0);
      $l=$199;
      __label__ = 20; break;
    case 36: 
      __label__ = 51; break;
    case 37: 
      var $202=$code;
      var $203=$code_size;
      var $204=((($203)-(8))|0);
      var $205=$202 >>> (($204)>>>0);
      var $206=$205 & 255;
      $subtree=$206;
      var $207=$subtree;
      var $208=$3;
      var $209=(($208+4)|0);
      var $210=(($209+($207<<2))|0);
      var $211=HEAP32[(($210)>>2)];
      $currententry=$211;
      var $212=$currententry;
      var $213=(($212)|0)==0;
      if ($213) { __label__ = 38; break; } else { __label__ = 39; break; }
    case 38: 
      var $215=$nextfreeentry;
      $currententry=$215;
      var $216=$subtree;
      var $217=$3;
      var $218=(($217+4)|0);
      var $219=(($218+($216<<2))|0);
      HEAP32[(($219)>>2)]=$215;
      var $220=$nextfreeentry;
      $currententry=$220;
      var $221=$subtree;
      var $222=$3;
      var $223=(($222+1028)|0);
      var $224=(($223+($221<<2))|0);
      HEAP32[(($224)>>2)]=$220;
      var $225=$nextfreeentry;
      var $226=((($225)-(2))|0);
      $nextfreeentry=$226;
      __label__ = 39; break;
    case 39: 
      var $228=$code_size;
      var $229=((($228)-(8))|0);
      var $230=(((16)-($229))|0);
      var $231=$code;
      var $232=$231 << $230;
      $code=$232;
      var $233=$code_size;
      $l=$233;
      __label__ = 40; break;
    case 40: 
      var $235=$l;
      var $236=(($235)|0) > 9;
      if ($236) { __label__ = 41; break; } else { __label__ = 48; break; }
    case 41: 
      var $238=$code;
      var $239=$238 & 32768;
      var $240=(($239)|0)==0;
      if ($240) { __label__ = 42; break; } else { __label__ = 43; break; }
    case 42: 
      var $242=$currententry;
      var $243=((($242)-(1))|0);
      $currententry=$243;
      __label__ = 43; break;
    case 43: 
      var $245=$currententry;
      var $246=(((-$245))|0);
      var $247=((($246)-(1))|0);
      var $248=$3;
      var $249=(($248+2308)|0);
      var $250=(($249+($247<<2))|0);
      var $251=HEAP32[(($250)>>2)];
      var $252=(($251)|0)==0;
      if ($252) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: 
      var $254=$nextfreeentry;
      var $255=$currententry;
      var $256=(((-$255))|0);
      var $257=((($256)-(1))|0);
      var $258=$3;
      var $259=(($258+2308)|0);
      var $260=(($259+($257<<2))|0);
      HEAP32[(($260)>>2)]=$254;
      var $261=$nextfreeentry;
      $currententry=$261;
      var $262=$nextfreeentry;
      var $263=((($262)-(2))|0);
      $nextfreeentry=$263;
      __label__ = 46; break;
    case 45: 
      var $265=$currententry;
      var $266=(((-$265))|0);
      var $267=((($266)-(1))|0);
      var $268=$3;
      var $269=(($268+2308)|0);
      var $270=(($269+($267<<2))|0);
      var $271=HEAP32[(($270)>>2)];
      $currententry=$271;
      __label__ = 46; break;
    case 46: 
      var $273=$code;
      var $274=$273 << 1;
      $code=$274;
      __label__ = 47; break;
    case 47: 
      var $276=$l;
      var $277=((($276)-(1))|0);
      $l=$277;
      __label__ = 40; break;
    case 48: 
      var $279=$code;
      var $280=$279 & 32768;
      var $281=(($280)|0)==0;
      if ($281) { __label__ = 49; break; } else { __label__ = 50; break; }
    case 49: 
      var $283=$currententry;
      var $284=((($283)-(1))|0);
      $currententry=$284;
      __label__ = 50; break;
    case 50: 
      var $286=$i;
      var $287=$currententry;
      var $288=(((-$287))|0);
      var $289=((($288)-(1))|0);
      var $290=$3;
      var $291=(($290+2308)|0);
      var $292=(($291+($289<<2))|0);
      HEAP32[(($292)>>2)]=$286;
      __label__ = 51; break;
    case 51: 
      var $294=$p;
      var $295=((($294)+(1))|0);
      $p=$295;
      __label__ = 17; break;
    case 52: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder15make_huff_tableEiPNS0_11huff_tablesE["X"]=1;

function __ZN4jpgd12jpeg_decoder18check_quant_tablesEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      $1=$this;
      var $2=$1;
      $i=0;
      __label__ = 3; break;
    case 3: 
      var $4=$i;
      var $5=(($2+252)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=(($4)|0) < (($6)|0);
      if ($7) { __label__ = 4; break; } else { __label__ = 8; break; }
    case 4: 
      var $9=$i;
      var $10=(($2+256)|0);
      var $11=(($10+($9<<2))|0);
      var $12=HEAP32[(($11)>>2)];
      var $13=(($2+188)|0);
      var $14=(($13+($12<<2))|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=(($2+132)|0);
      var $17=(($16+($15<<2))|0);
      var $18=HEAP32[(($17)>>2)];
      var $19=(($18)|0)==0;
      if ($19) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -235);
      throw "Reached an unreachable!"
    case 6: 
      __label__ = 7; break;
    case 7: 
      var $23=$i;
      var $24=((($23)+(1))|0);
      $i=$24;
      __label__ = 3; break;
    case 8: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder17check_huff_tablesEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $i1;
      $1=$this;
      var $2=$1;
      $i=0;
      __label__ = 3; break;
    case 3: 
      var $4=$i;
      var $5=(($2+252)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=(($4)|0) < (($6)|0);
      if ($7) { __label__ = 4; break; } else { __label__ = 12; break; }
    case 4: 
      var $9=(($2+304)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=(($10)|0)==0;
      if ($11) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: 
      var $13=$i;
      var $14=(($2+256)|0);
      var $15=(($14+($13<<2))|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=(($2+272)|0);
      var $18=(($17+($16<<2))|0);
      var $19=HEAP32[(($18)>>2)];
      var $20=(($2+68)|0);
      var $21=(($20+($19<<2))|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=(($22)|0)==0;
      if ($23) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -234);
      throw "Reached an unreachable!"
    case 7: 
      var $26=(($2+308)|0);
      var $27=HEAP32[(($26)>>2)];
      var $28=(($27)|0) > 0;
      if ($28) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: 
      var $30=$i;
      var $31=(($2+256)|0);
      var $32=(($31+($30<<2))|0);
      var $33=HEAP32[(($32)>>2)];
      var $34=(($2+288)|0);
      var $35=(($34+($33<<2))|0);
      var $36=HEAP32[(($35)>>2)];
      var $37=(($2+68)|0);
      var $38=(($37+($36<<2))|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=(($39)|0)==0;
      if ($40) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -234);
      throw "Reached an unreachable!"
    case 10: 
      __label__ = 11; break;
    case 11: 
      var $44=$i;
      var $45=((($44)+(1))|0);
      $i=$45;
      __label__ = 3; break;
    case 12: 
      $i1=0;
      __label__ = 13; break;
    case 13: 
      var $48=$i1;
      var $49=(($48)|0) < 8;
      if ($49) { __label__ = 14; break; } else { __label__ = 20; break; }
    case 14: 
      var $51=$i1;
      var $52=(($2+68)|0);
      var $53=(($52+($51<<2))|0);
      var $54=HEAP32[(($53)>>2)];
      var $55=(($54)|0)!=0;
      if ($55) { __label__ = 15; break; } else { __label__ = 18; break; }
    case 15: 
      var $57=$i1;
      var $58=(($2+404)|0);
      var $59=(($58+($57<<2))|0);
      var $60=HEAP32[(($59)>>2)];
      var $61=(($60)|0)!=0;
      if ($61) { __label__ = 17; break; } else { __label__ = 16; break; }
    case 16: 
      var $63=__ZN4jpgd12jpeg_decoder5allocEjb($2, 4356, 0);
      var $64=$63;
      var $65=$i1;
      var $66=(($2+404)|0);
      var $67=(($66+($65<<2))|0);
      HEAP32[(($67)>>2)]=$64;
      __label__ = 17; break;
    case 17: 
      var $69=$i1;
      var $70=$i1;
      var $71=(($2+404)|0);
      var $72=(($71+($70<<2))|0);
      var $73=HEAP32[(($72)>>2)];
      __ZN4jpgd12jpeg_decoder15make_huff_tableEiPNS0_11huff_tablesE($2, $69, $73);
      __label__ = 18; break;
    case 18: 
      __label__ = 19; break;
    case 19: 
      var $76=$i1;
      var $77=((($76)+(1))|0);
      $i1=$77;
      __label__ = 13; break;
    case 20: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder17check_huff_tablesEv["X"]=1;

function __ZN4jpgd12jpeg_decoder20calc_mcu_block_orderEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $component_num;
      var $component_id;
      var $max_h_samp;
      var $max_v_samp;
      var $num_blocks;
      $1=$this;
      var $2=$1;
      $max_h_samp=0;
      $max_v_samp=0;
      $component_id=0;
      __label__ = 3; break;
    case 3: 
      var $4=$component_id;
      var $5=(($2+152)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=(($4)|0) < (($6)|0);
      if ($7) { __label__ = 4; break; } else { __label__ = 10; break; }
    case 4: 
      var $9=$component_id;
      var $10=(($2+156)|0);
      var $11=(($10+($9<<2))|0);
      var $12=HEAP32[(($11)>>2)];
      var $13=$max_h_samp;
      var $14=(($12)|0) > (($13)|0);
      if ($14) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      var $16=$component_id;
      var $17=(($2+156)|0);
      var $18=(($17+($16<<2))|0);
      var $19=HEAP32[(($18)>>2)];
      $max_h_samp=$19;
      __label__ = 6; break;
    case 6: 
      var $21=$component_id;
      var $22=(($2+172)|0);
      var $23=(($22+($21<<2))|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=$max_v_samp;
      var $26=(($24)|0) > (($25)|0);
      if ($26) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      var $28=$component_id;
      var $29=(($2+172)|0);
      var $30=(($29+($28<<2))|0);
      var $31=HEAP32[(($30)>>2)];
      $max_v_samp=$31;
      __label__ = 8; break;
    case 8: 
      __label__ = 9; break;
    case 9: 
      var $34=$component_id;
      var $35=((($34)+(1))|0);
      $component_id=$35;
      __label__ = 3; break;
    case 10: 
      $component_id=0;
      __label__ = 11; break;
    case 11: 
      var $38=$component_id;
      var $39=(($2+152)|0);
      var $40=HEAP32[(($39)>>2)];
      var $41=(($38)|0) < (($40)|0);
      if ($41) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: 
      var $43=(($2+44)|0);
      var $44=HEAP32[(($43)>>2)];
      var $45=$component_id;
      var $46=(($2+156)|0);
      var $47=(($46+($45<<2))|0);
      var $48=HEAP32[(($47)>>2)];
      var $49=((($44)*($48))|0);
      var $50=$max_h_samp;
      var $51=((($50)-(1))|0);
      var $52=((($49)+($51))|0);
      var $53=$max_h_samp;
      var $54=((((($52)|0))/((($53)|0)))&-1);
      var $55=((($54)+(7))|0);
      var $56=((((($55)|0))/(8))&-1);
      var $57=$component_id;
      var $58=(($2+220)|0);
      var $59=(($58+($57<<2))|0);
      HEAP32[(($59)>>2)]=$56;
      var $60=(($2+48)|0);
      var $61=HEAP32[(($60)>>2)];
      var $62=$component_id;
      var $63=(($2+172)|0);
      var $64=(($63+($62<<2))|0);
      var $65=HEAP32[(($64)>>2)];
      var $66=((($61)*($65))|0);
      var $67=$max_v_samp;
      var $68=((($67)-(1))|0);
      var $69=((($66)+($68))|0);
      var $70=$max_v_samp;
      var $71=((((($69)|0))/((($70)|0)))&-1);
      var $72=((($71)+(7))|0);
      var $73=((((($72)|0))/(8))&-1);
      var $74=$component_id;
      var $75=(($2+236)|0);
      var $76=(($75+($74<<2))|0);
      HEAP32[(($76)>>2)]=$73;
      __label__ = 13; break;
    case 13: 
      var $78=$component_id;
      var $79=((($78)+(1))|0);
      $component_id=$79;
      __label__ = 11; break;
    case 14: 
      var $81=(($2+252)|0);
      var $82=HEAP32[(($81)>>2)];
      var $83=(($82)|0)==1;
      if ($83) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $85=(($2+256)|0);
      var $86=(($85)|0);
      var $87=HEAP32[(($86)>>2)];
      var $88=(($2+220)|0);
      var $89=(($88+($87<<2))|0);
      var $90=HEAP32[(($89)>>2)];
      var $91=(($2+336)|0);
      HEAP32[(($91)>>2)]=$90;
      var $92=(($2+256)|0);
      var $93=(($92)|0);
      var $94=HEAP32[(($93)>>2)];
      var $95=(($2+236)|0);
      var $96=(($95+($94<<2))|0);
      var $97=HEAP32[(($96)>>2)];
      var $98=(($2+340)|0);
      HEAP32[(($98)>>2)]=$97;
      __label__ = 17; break;
    case 16: 
      var $100=(($2+44)|0);
      var $101=HEAP32[(($100)>>2)];
      var $102=((($101)+(7))|0);
      var $103=((((($102)|0))/(8))&-1);
      var $104=$max_h_samp;
      var $105=((($104)-(1))|0);
      var $106=((($103)+($105))|0);
      var $107=$max_h_samp;
      var $108=((((($106)|0))/((($107)|0)))&-1);
      var $109=(($2+336)|0);
      HEAP32[(($109)>>2)]=$108;
      var $110=(($2+48)|0);
      var $111=HEAP32[(($110)>>2)];
      var $112=((($111)+(7))|0);
      var $113=((((($112)|0))/(8))&-1);
      var $114=$max_v_samp;
      var $115=((($114)-(1))|0);
      var $116=((($113)+($115))|0);
      var $117=$max_v_samp;
      var $118=((((($116)|0))/((($117)|0)))&-1);
      var $119=(($2+340)|0);
      HEAP32[(($119)>>2)]=$118;
      __label__ = 17; break;
    case 17: 
      var $121=(($2+252)|0);
      var $122=HEAP32[(($121)>>2)];
      var $123=(($122)|0)==1;
      if ($123) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $125=(($2+256)|0);
      var $126=(($125)|0);
      var $127=HEAP32[(($126)>>2)];
      var $128=(($2+344)|0);
      var $129=(($128)|0);
      HEAP32[(($129)>>2)]=$127;
      var $130=(($2+328)|0);
      HEAP32[(($130)>>2)]=1;
      __label__ = 27; break;
    case 19: 
      var $132=(($2+328)|0);
      HEAP32[(($132)>>2)]=0;
      $component_num=0;
      __label__ = 20; break;
    case 20: 
      var $134=$component_num;
      var $135=(($2+252)|0);
      var $136=HEAP32[(($135)>>2)];
      var $137=(($134)|0) < (($136)|0);
      if ($137) { __label__ = 21; break; } else { __label__ = 26; break; }
    case 21: 
      var $139=$component_num;
      var $140=(($2+256)|0);
      var $141=(($140+($139<<2))|0);
      var $142=HEAP32[(($141)>>2)];
      $component_id=$142;
      var $143=$component_id;
      var $144=(($2+156)|0);
      var $145=(($144+($143<<2))|0);
      var $146=HEAP32[(($145)>>2)];
      var $147=$component_id;
      var $148=(($2+172)|0);
      var $149=(($148+($147<<2))|0);
      var $150=HEAP32[(($149)>>2)];
      var $151=((($146)*($150))|0);
      $num_blocks=$151;
      __label__ = 22; break;
    case 22: 
      var $153=$num_blocks;
      var $154=((($153)-(1))|0);
      $num_blocks=$154;
      var $155=(($153)|0)!=0;
      if ($155) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: 
      var $157=$component_id;
      var $158=(($2+328)|0);
      var $159=HEAP32[(($158)>>2)];
      var $160=((($159)+(1))|0);
      HEAP32[(($158)>>2)]=$160;
      var $161=(($2+344)|0);
      var $162=(($161+($159<<2))|0);
      HEAP32[(($162)>>2)]=$157;
      __label__ = 22; break;
    case 24: 
      __label__ = 25; break;
    case 25: 
      var $165=$component_num;
      var $166=((($165)+(1))|0);
      $component_num=$166;
      __label__ = 20; break;
    case 26: 
      __label__ = 27; break;
    case 27: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder20calc_mcu_block_orderEv["X"]=1;

function __ZN4jpgd12jpeg_decoder9init_scanEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $2=$this;
      var $3=$2;
      var $4=__ZN4jpgd12jpeg_decoder17locate_sos_markerEv($3);
      var $5=(($4)|0)!=0;
      if ($5) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      $1=0;
      __label__ = 7; break;
    case 4: 
      __ZN4jpgd12jpeg_decoder20calc_mcu_block_orderEv($3);
      __ZN4jpgd12jpeg_decoder17check_huff_tablesEv($3);
      __ZN4jpgd12jpeg_decoder18check_quant_tablesEv($3);
      var $8=(($3+9128)|0);
      var $9=(($8)|0);
      var $10=$9;
      var $11=(($3+152)|0);
      var $12=HEAP32[(($11)>>2)];
      var $13=((($12<<2))|0);
      _memset($10, 0, $13, 4);
      var $14=(($3+468)|0);
      HEAP32[(($14)>>2)]=0;
      var $15=(($3+9088)|0);
      var $16=HEAP32[(($15)>>2)];
      var $17=(($16)|0)!=0;
      if ($17) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      var $19=(($3+9088)|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=(($3+9092)|0);
      HEAP32[(($21)>>2)]=$20;
      var $22=(($3+9096)|0);
      HEAP32[(($22)>>2)]=0;
      __label__ = 6; break;
    case 6: 
      __ZN4jpgd12jpeg_decoder13fix_in_bufferEv($3);
      $1=1;
      __label__ = 7; break;
    case 7: 
      var $25=$1;
      ;
      return $25;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder14coeff_buf_openEiiii($this, $block_num_x, $block_num_y, $block_len_x, $block_len_y) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  var $4;
  var $5;
  var $cb;
  $1=$this;
  $2=$block_num_x;
  $3=$block_num_y;
  $4=$block_len_x;
  $5=$block_len_y;
  var $6=$1;
  var $7=__ZN4jpgd12jpeg_decoder5allocEjb($6, 24, 0);
  var $8=$7;
  $cb=$8;
  var $9=$2;
  var $10=$cb;
  var $11=(($10+4)|0);
  HEAP32[(($11)>>2)]=$9;
  var $12=$3;
  var $13=$cb;
  var $14=(($13+8)|0);
  HEAP32[(($14)>>2)]=$12;
  var $15=$4;
  var $16=$cb;
  var $17=(($16+12)|0);
  HEAP32[(($17)>>2)]=$15;
  var $18=$5;
  var $19=$cb;
  var $20=(($19+16)|0);
  HEAP32[(($20)>>2)]=$18;
  var $21=$4;
  var $22=$5;
  var $23=((($21)*($22))|0);
  var $24=((($23<<1))|0);
  var $25=$cb;
  var $26=(($25+20)|0);
  HEAP32[(($26)>>2)]=$24;
  var $27=$cb;
  var $28=(($27+20)|0);
  var $29=HEAP32[(($28)>>2)];
  var $30=$2;
  var $31=((($29)*($30))|0);
  var $32=$3;
  var $33=((($31)*($32))|0);
  var $34=__ZN4jpgd12jpeg_decoder5allocEjb($6, $33, 1);
  var $35=$cb;
  var $36=(($35)|0);
  HEAP32[(($36)>>2)]=$34;
  var $37=$cb;
  ;
  return $37;
}
__ZN4jpgd12jpeg_decoder14coeff_buf_openEiiii["X"]=1;

function __ZN4jpgd12jpeg_decoder21decode_block_dc_firstEPS0_iii($pD, $component_id, $block_x, $block_y) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $s;
      var $r;
      var $p;
      $1=$pD;
      $2=$component_id;
      $3=$block_x;
      $4=$block_y;
      var $5=$1;
      var $6=$2;
      var $7=$1;
      var $8=(($7+436)|0);
      var $9=(($8+($6<<2))|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=$3;
      var $12=$4;
      var $13=__ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii($5, $10, $11, $12);
      $p=$13;
      var $14=$1;
      var $15=$2;
      var $16=$1;
      var $17=(($16+272)|0);
      var $18=(($17+($15<<2))|0);
      var $19=HEAP32[(($18)>>2)];
      var $20=$1;
      var $21=(($20+404)|0);
      var $22=(($21+($19<<2))|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesE($14, $23);
      $s=$24;
      var $25=(($24)|0)!=0;
      if ($25) { __label__ = 3; break; } else { __label__ = 7; break; }
    case 3: 
      var $27=$1;
      var $28=$s;
      var $29=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($27, $28);
      $r=$29;
      var $30=$r;
      var $31=$s;
      var $32=$31 & 15;
      var $33=((__ZN4jpgdL13s_extend_testE+($32<<2))|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=(($30)|0) < (($34)|0);
      if ($35) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      var $37=$r;
      var $38=$s;
      var $39=$38 & 15;
      var $40=((__ZN4jpgdL15s_extend_offsetE+($39<<2))|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=((($37)+($41))|0);
      var $46 = $42;__label__ = 6; break;
    case 5: 
      var $44=$r;
      var $46 = $44;__label__ = 6; break;
    case 6: 
      var $46;
      $s=$46;
      __label__ = 7; break;
    case 7: 
      var $48=$2;
      var $49=$1;
      var $50=(($49+9128)|0);
      var $51=(($50+($48<<2))|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=$s;
      var $54=((($53)+($52))|0);
      $s=$54;
      var $55=$2;
      var $56=$1;
      var $57=(($56+9128)|0);
      var $58=(($57+($55<<2))|0);
      HEAP32[(($58)>>2)]=$54;
      var $59=$s;
      var $60=$1;
      var $61=(($60+312)|0);
      var $62=HEAP32[(($61)>>2)];
      var $63=$59 << $62;
      var $64=(($63) & 65535);
      var $65=$p;
      var $66=(($65)|0);
      HEAP16[(($66)>>1)]=$64;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder21decode_block_dc_firstEPS0_iii["X"]=1;

function __ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesE($this, $pH) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $symbol;
      var $ofs;
      $1=$this;
      $2=$pH;
      var $3=$1;
      var $4=(($3+9084)|0);
      var $5=HEAPU32[(($4)>>2)];
      var $6=$5 >>> 24;
      var $7=$2;
      var $8=(($7+4)|0);
      var $9=(($8+($6<<2))|0);
      var $10=HEAP32[(($9)>>2)];
      $symbol=$10;
      var $11=(($10)|0) < 0;
      if ($11) { __label__ = 3; break; } else { __label__ = 7; break; }
    case 3: 
      $ofs=23;
      __label__ = 4; break;
    case 4: 
      var $14=$symbol;
      var $15=(($3+9084)|0);
      var $16=HEAPU32[(($15)>>2)];
      var $17=$ofs;
      var $18=$16 >>> (($17)>>>0);
      var $19=$18 & 1;
      var $20=((($14)+($19))|0);
      var $21=(((-$20))|0);
      var $22=$2;
      var $23=(($22+2308)|0);
      var $24=(($23+($21<<2))|0);
      var $25=HEAP32[(($24)>>2)];
      $symbol=$25;
      var $26=$ofs;
      var $27=((($26)-(1))|0);
      $ofs=$27;
      __label__ = 5; break;
    case 5: 
      var $29=$symbol;
      var $30=(($29)|0) < 0;
      if ($30) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 6: 
      var $32=$ofs;
      var $33=(((23)-($32))|0);
      var $34=((($33)+(8))|0);
      var $35=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($3, $34);
      __label__ = 8; break;
    case 7: 
      var $37=$symbol;
      var $38=$2;
      var $39=(($38+2052)|0);
      var $40=(($39+$37)|0);
      var $41=HEAPU8[($40)];
      var $42=(($41)&255);
      var $43=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($3, $42);
      __label__ = 8; break;
    case 8: 
      var $45=$symbol;
      ;
      return $45;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesE["X"]=1;

function __ZN4jpgd12jpeg_decoder22decode_block_dc_refineEPS0_iii($pD, $component_id, $block_x, $block_y) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $p;
      $1=$pD;
      $2=$component_id;
      $3=$block_x;
      $4=$block_y;
      var $5=$1;
      var $6=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($5, 1);
      var $7=(($6)|0)!=0;
      if ($7) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $9=$1;
      var $10=$2;
      var $11=$1;
      var $12=(($11+436)|0);
      var $13=(($12+($10<<2))|0);
      var $14=HEAP32[(($13)>>2)];
      var $15=$3;
      var $16=$4;
      var $17=__ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii($9, $14, $15, $16);
      $p=$17;
      var $18=$1;
      var $19=(($18+312)|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=1 << $20;
      var $22=$p;
      var $23=(($22)|0);
      var $24=HEAP16[(($23)>>1)];
      var $25=(($24 << 16) >> 16);
      var $26=$25 | $21;
      var $27=(($26) & 65535);
      HEAP16[(($23)>>1)]=$27;
      __label__ = 4; break;
    case 4: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder10init_frameEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      $1=$this;
      var $2=$1;
      var $3=(($2+152)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($4)|0)==1;
      if ($5) { __label__ = 3; break; } else { __label__ = 7; break; }
    case 3: 
      var $7=(($2+156)|0);
      var $8=(($7)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($9)|0)!=1;
      if ($10) { __label__ = 5; break; } else { __label__ = 4; break; }
    case 4: 
      var $12=(($2+172)|0);
      var $13=(($12)|0);
      var $14=HEAP32[(($13)>>2)];
      var $15=(($14)|0)!=1;
      if ($15) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -231);
      throw "Reached an unreachable!"
    case 6: 
      var $18=(($2+148)|0);
      HEAP32[(($18)>>2)]=0;
      var $19=(($2+9104)|0);
      HEAP32[(($19)>>2)]=1;
      var $20=(($2+320)|0);
      HEAP32[(($20)>>2)]=8;
      var $21=(($2+324)|0);
      HEAP32[(($21)>>2)]=8;
      __label__ = 32; break;
    case 7: 
      var $23=(($2+152)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=(($24)|0)==3;
      if ($25) { __label__ = 8; break; } else { __label__ = 30; break; }
    case 8: 
      var $27=(($2+156)|0);
      var $28=(($27+4)|0);
      var $29=HEAP32[(($28)>>2)];
      var $30=(($29)|0)!=1;
      if ($30) { __label__ = 12; break; } else { __label__ = 9; break; }
    case 9: 
      var $32=(($2+172)|0);
      var $33=(($32+4)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=(($34)|0)!=1;
      if ($35) { __label__ = 12; break; } else { __label__ = 10; break; }
    case 10: 
      var $37=(($2+156)|0);
      var $38=(($37+8)|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=(($39)|0)!=1;
      if ($40) { __label__ = 12; break; } else { __label__ = 11; break; }
    case 11: 
      var $42=(($2+172)|0);
      var $43=(($42+8)|0);
      var $44=HEAP32[(($43)>>2)];
      var $45=(($44)|0)!=1;
      if ($45) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -231);
      throw "Reached an unreachable!"
    case 13: 
      var $48=(($2+156)|0);
      var $49=(($48)|0);
      var $50=HEAP32[(($49)>>2)];
      var $51=(($50)|0)==1;
      if ($51) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: 
      var $53=(($2+172)|0);
      var $54=(($53)|0);
      var $55=HEAP32[(($54)>>2)];
      var $56=(($55)|0)==1;
      if ($56) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $58=(($2+148)|0);
      HEAP32[(($58)>>2)]=1;
      var $59=(($2+9104)|0);
      HEAP32[(($59)>>2)]=3;
      var $60=(($2+320)|0);
      HEAP32[(($60)>>2)]=8;
      var $61=(($2+324)|0);
      HEAP32[(($61)>>2)]=8;
      __label__ = 29; break;
    case 16: 
      var $63=(($2+156)|0);
      var $64=(($63)|0);
      var $65=HEAP32[(($64)>>2)];
      var $66=(($65)|0)==2;
      if ($66) { __label__ = 17; break; } else { __label__ = 19; break; }
    case 17: 
      var $68=(($2+172)|0);
      var $69=(($68)|0);
      var $70=HEAP32[(($69)>>2)];
      var $71=(($70)|0)==1;
      if ($71) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $73=(($2+148)|0);
      HEAP32[(($73)>>2)]=2;
      var $74=(($2+9104)|0);
      HEAP32[(($74)>>2)]=4;
      var $75=(($2+320)|0);
      HEAP32[(($75)>>2)]=16;
      var $76=(($2+324)|0);
      HEAP32[(($76)>>2)]=8;
      __label__ = 28; break;
    case 19: 
      var $78=(($2+156)|0);
      var $79=(($78)|0);
      var $80=HEAP32[(($79)>>2)];
      var $81=(($80)|0)==1;
      if ($81) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 20: 
      var $83=(($2+172)|0);
      var $84=(($83)|0);
      var $85=HEAP32[(($84)>>2)];
      var $86=(($85)|0)==2;
      if ($86) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $88=(($2+148)|0);
      HEAP32[(($88)>>2)]=3;
      var $89=(($2+9104)|0);
      HEAP32[(($89)>>2)]=4;
      var $90=(($2+320)|0);
      HEAP32[(($90)>>2)]=8;
      var $91=(($2+324)|0);
      HEAP32[(($91)>>2)]=16;
      __label__ = 27; break;
    case 22: 
      var $93=(($2+156)|0);
      var $94=(($93)|0);
      var $95=HEAP32[(($94)>>2)];
      var $96=(($95)|0)==2;
      if ($96) { __label__ = 23; break; } else { __label__ = 25; break; }
    case 23: 
      var $98=(($2+172)|0);
      var $99=(($98)|0);
      var $100=HEAP32[(($99)>>2)];
      var $101=(($100)|0)==2;
      if ($101) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: 
      var $103=(($2+148)|0);
      HEAP32[(($103)>>2)]=4;
      var $104=(($2+9104)|0);
      HEAP32[(($104)>>2)]=6;
      var $105=(($2+320)|0);
      HEAP32[(($105)>>2)]=16;
      var $106=(($2+324)|0);
      HEAP32[(($106)>>2)]=16;
      __label__ = 26; break;
    case 25: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -231);
      throw "Reached an unreachable!"
    case 26: 
      __label__ = 27; break;
    case 27: 
      __label__ = 28; break;
    case 28: 
      __label__ = 29; break;
    case 29: 
      __label__ = 31; break;
    case 30: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -232);
      throw "Reached an unreachable!"
    case 31: 
      __label__ = 32; break;
    case 32: 
      var $115=(($2+44)|0);
      var $116=HEAP32[(($115)>>2)];
      var $117=(($2+320)|0);
      var $118=HEAP32[(($117)>>2)];
      var $119=((($118)-(1))|0);
      var $120=((($116)+($119))|0);
      var $121=(($2+320)|0);
      var $122=HEAP32[(($121)>>2)];
      var $123=((((($120)|0))/((($122)|0)))&-1);
      var $124=(($2+9100)|0);
      HEAP32[(($124)>>2)]=$123;
      var $125=(($2+48)|0);
      var $126=HEAP32[(($125)>>2)];
      var $127=(($2+324)|0);
      var $128=HEAP32[(($127)>>2)];
      var $129=((($128)-(1))|0);
      var $130=((($126)+($129))|0);
      var $131=(($2+324)|0);
      var $132=HEAP32[(($131)>>2)];
      var $133=((((($130)|0))/((($132)|0)))&-1);
      var $134=(($2+9124)|0);
      HEAP32[(($134)>>2)]=$133;
      var $135=(($2+148)|0);
      var $136=HEAP32[(($135)>>2)];
      var $137=(($136)|0)==0;
      if ($137) { __label__ = 33; break; } else { __label__ = 34; break; }
    case 33: 
      var $139=(($2+400)|0);
      HEAP32[(($139)>>2)]=1;
      __label__ = 35; break;
    case 34: 
      var $141=(($2+400)|0);
      HEAP32[(($141)>>2)]=4;
      __label__ = 35; break;
    case 35: 
      var $143=(($2+44)|0);
      var $144=HEAP32[(($143)>>2)];
      var $145=((($144)+(15))|0);
      var $146=$145 & 65520;
      var $147=(($2+400)|0);
      var $148=HEAP32[(($147)>>2)];
      var $149=((($146)*($148))|0);
      var $150=(($2+396)|0);
      HEAP32[(($150)>>2)]=$149;
      var $151=(($2+44)|0);
      var $152=HEAP32[(($151)>>2)];
      var $153=(($2+400)|0);
      var $154=HEAP32[(($153)>>2)];
      var $155=((($152)*($154))|0);
      var $156=(($2+392)|0);
      HEAP32[(($156)>>2)]=$155;
      var $157=(($2+396)|0);
      var $158=HEAP32[(($157)>>2)];
      var $159=__ZN4jpgd12jpeg_decoder5allocEjb($2, $158, 1);
      var $160=(($2+13288)|0);
      HEAP32[(($160)>>2)]=$159;
      var $161=(($2+148)|0);
      var $162=HEAP32[(($161)>>2)];
      var $163=(($162)|0)==3;
      if ($163) { __label__ = 37; break; } else { __label__ = 36; break; }
    case 36: 
      var $165=(($2+148)|0);
      var $166=HEAP32[(($165)>>2)];
      var $167=(($166)|0)==4;
      if ($167) { __label__ = 37; break; } else { __label__ = 38; break; }
    case 37: 
      var $169=(($2+396)|0);
      var $170=HEAP32[(($169)>>2)];
      var $171=__ZN4jpgd12jpeg_decoder5allocEjb($2, $170, 1);
      var $172=(($2+13292)|0);
      HEAP32[(($172)>>2)]=$171;
      __label__ = 38; break;
    case 38: 
      var $174=(($2+9100)|0);
      var $175=HEAP32[(($174)>>2)];
      var $176=(($2+9104)|0);
      var $177=HEAP32[(($176)>>2)];
      var $178=((($175)*($177))|0);
      var $179=(($2+332)|0);
      HEAP32[(($179)>>2)]=$178;
      var $180=(($2+332)|0);
      var $181=HEAP32[(($180)>>2)];
      var $182=(($181)|0) > 8192;
      if ($182) { __label__ = 39; break; } else { __label__ = 40; break; }
    case 39: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -228);
      throw "Reached an unreachable!"
    case 40: 
      var $185=(($2+9104)|0);
      var $186=HEAP32[(($185)>>2)];
      var $187=((($186<<6))|0);
      var $188=((($187<<1))|0);
      var $189=__ZN4jpgd12jpeg_decoder5allocEjb($2, $188, 0);
      var $190=$189;
      var $191=(($2+9144)|0);
      HEAP32[(($191)>>2)]=$190;
      $i=0;
      __label__ = 41; break;
    case 41: 
      var $193=$i;
      var $194=(($2+9104)|0);
      var $195=HEAP32[(($194)>>2)];
      var $196=(($193)|0) < (($195)|0);
      if ($196) { __label__ = 42; break; } else { __label__ = 44; break; }
    case 42: 
      var $198=$i;
      var $199=(($2+9148)|0);
      var $200=(($199+($198<<2))|0);
      HEAP32[(($200)>>2)]=64;
      __label__ = 43; break;
    case 43: 
      var $202=$i;
      var $203=((($202)+(1))|0);
      $i=$203;
      __label__ = 41; break;
    case 44: 
      var $205=(($2+156)|0);
      var $206=(($205)|0);
      var $207=HEAP32[(($206)>>2)];
      var $208=(($2+172)|0);
      var $209=(($208)|0);
      var $210=HEAP32[(($209)>>2)];
      var $211=((($207)*($210))|0);
      var $212=(($2+9116)|0);
      HEAP32[(($212)>>2)]=$211;
      var $213=(($2+9116)|0);
      var $214=HEAP32[(($213)>>2)];
      var $215=(($2+152)|0);
      var $216=HEAP32[(($215)>>2)];
      var $217=((($214)*($216))|0);
      var $218=(($2+9108)|0);
      HEAP32[(($218)>>2)]=$217;
      var $219=(($2+9100)|0);
      var $220=HEAP32[(($219)>>2)];
      var $221=(($2+9108)|0);
      var $222=HEAP32[(($221)>>2)];
      var $223=((($220)*($222))|0);
      var $224=(($2+9112)|0);
      HEAP32[(($224)>>2)]=$223;
      var $225=(($2+9120)|0);
      HEAP8[($225)]=0;
      var $226=(($2+9108)|0);
      var $227=HEAP32[(($226)>>2)];
      var $228=(($227)|0)==12;
      var $229=(($2+9120)|0);
      var $230=(($228)&1);
      HEAP8[($229)]=$230;
      var $231=(($2+9120)|0);
      var $232=HEAP8[($231)];
      var $233=(($232) & 1);
      if ($233) { __label__ = 45; break; } else { __label__ = 46; break; }
    case 45: 
      var $235=(($2+9112)|0);
      var $236=HEAP32[(($235)>>2)];
      var $237=((($236<<6))|0);
      var $238=__ZN4jpgd12jpeg_decoder5allocEjb($2, $237, 0);
      var $239=(($2+9188)|0);
      HEAP32[(($239)>>2)]=$238;
      __label__ = 47; break;
    case 46: 
      var $241=(($2+332)|0);
      var $242=HEAP32[(($241)>>2)];
      var $243=((($242<<6))|0);
      var $244=__ZN4jpgd12jpeg_decoder5allocEjb($2, $243, 0);
      var $245=(($2+9188)|0);
      HEAP32[(($245)>>2)]=$244;
      __label__ = 47; break;
    case 47: 
      var $247=(($2+48)|0);
      var $248=HEAP32[(($247)>>2)];
      var $249=(($2+384)|0);
      HEAP32[(($249)>>2)]=$248;
      var $250=(($2+388)|0);
      HEAP32[(($250)>>2)]=0;
      __ZN4jpgd12jpeg_decoder15create_look_upsEv($2);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder10init_frameEv["X"]=1;

function __ZN4jpgd12jpeg_decoder11decode_scanEPFvPS0_iiiE($this, $decode_block_func) {
  var __stackBase__  = STACKTOP; STACKTOP += 32; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $mcu_row;
      var $mcu_col;
      var $mcu_block;
      var $block_x_mcu=__stackBase__;
      var $m_block_y_mcu=(__stackBase__)+(16);
      var $component_num;
      var $component_id;
      var $block_x_mcu_ofs;
      var $block_y_mcu_ofs;
      $1=$this;
      $2=$decode_block_func;
      var $3=$1;
      var $4=(($m_block_y_mcu)|0);
      var $5=$4;
      HEAP32[(($5)>>2)]=0; HEAP32[((($5)+(4))>>2)]=0; HEAP32[((($5)+(8))>>2)]=0; HEAP32[((($5)+(12))>>2)]=0;
      $mcu_col=0;
      __label__ = 3; break;
    case 3: 
      var $7=$mcu_col;
      var $8=(($3+340)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($7)|0) < (($9)|0);
      if ($10) { __label__ = 4; break; } else { __label__ = 31; break; }
    case 4: 
      var $12=(($block_x_mcu)|0);
      var $13=$12;
      HEAP32[(($13)>>2)]=0; HEAP32[((($13)+(4))>>2)]=0; HEAP32[((($13)+(8))>>2)]=0; HEAP32[((($13)+(12))>>2)]=0;
      $mcu_row=0;
      __label__ = 5; break;
    case 5: 
      var $15=$mcu_row;
      var $16=(($3+336)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=(($15)|0) < (($17)|0);
      if ($18) { __label__ = 6; break; } else { __label__ = 22; break; }
    case 6: 
      $block_x_mcu_ofs=0;
      $block_y_mcu_ofs=0;
      var $20=(($3+9088)|0);
      var $21=HEAP32[(($20)>>2)];
      var $22=(($21)|0)!=0;
      if ($22) { __label__ = 7; break; } else { __label__ = 9; break; }
    case 7: 
      var $24=(($3+9092)|0);
      var $25=HEAP32[(($24)>>2)];
      var $26=(($25)|0)==0;
      if ($26) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      __ZN4jpgd12jpeg_decoder15process_restartEv($3);
      __label__ = 9; break;
    case 9: 
      $mcu_block=0;
      __label__ = 10; break;
    case 10: 
      var $30=$mcu_block;
      var $31=(($3+328)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($30)|0) < (($32)|0);
      if ($33) { __label__ = 11; break; } else { __label__ = 20; break; }
    case 11: 
      var $35=$mcu_block;
      var $36=(($3+344)|0);
      var $37=(($36+($35<<2))|0);
      var $38=HEAP32[(($37)>>2)];
      $component_id=$38;
      var $39=$2;
      var $40=$component_id;
      var $41=$component_id;
      var $42=(($block_x_mcu+($41<<2))|0);
      var $43=HEAP32[(($42)>>2)];
      var $44=$block_x_mcu_ofs;
      var $45=((($43)+($44))|0);
      var $46=$component_id;
      var $47=(($m_block_y_mcu+($46<<2))|0);
      var $48=HEAP32[(($47)>>2)];
      var $49=$block_y_mcu_ofs;
      var $50=((($48)+($49))|0);
      FUNCTION_TABLE[$39]($3, $40, $45, $50);
      var $51=(($3+252)|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=(($52)|0)==1;
      if ($53) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $55=$component_id;
      var $56=(($block_x_mcu+($55<<2))|0);
      var $57=HEAP32[(($56)>>2)];
      var $58=((($57)+(1))|0);
      HEAP32[(($56)>>2)]=$58;
      __label__ = 18; break;
    case 13: 
      var $60=$block_x_mcu_ofs;
      var $61=((($60)+(1))|0);
      $block_x_mcu_ofs=$61;
      var $62=$component_id;
      var $63=(($3+156)|0);
      var $64=(($63+($62<<2))|0);
      var $65=HEAP32[(($64)>>2)];
      var $66=(($61)|0)==(($65)|0);
      if ($66) { __label__ = 14; break; } else { __label__ = 17; break; }
    case 14: 
      $block_x_mcu_ofs=0;
      var $68=$block_y_mcu_ofs;
      var $69=((($68)+(1))|0);
      $block_y_mcu_ofs=$69;
      var $70=$component_id;
      var $71=(($3+172)|0);
      var $72=(($71+($70<<2))|0);
      var $73=HEAP32[(($72)>>2)];
      var $74=(($69)|0)==(($73)|0);
      if ($74) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      $block_y_mcu_ofs=0;
      var $76=$component_id;
      var $77=(($3+156)|0);
      var $78=(($77+($76<<2))|0);
      var $79=HEAP32[(($78)>>2)];
      var $80=$component_id;
      var $81=(($block_x_mcu+($80<<2))|0);
      var $82=HEAP32[(($81)>>2)];
      var $83=((($82)+($79))|0);
      HEAP32[(($81)>>2)]=$83;
      __label__ = 16; break;
    case 16: 
      __label__ = 17; break;
    case 17: 
      __label__ = 18; break;
    case 18: 
      __label__ = 19; break;
    case 19: 
      var $88=$mcu_block;
      var $89=((($88)+(1))|0);
      $mcu_block=$89;
      __label__ = 10; break;
    case 20: 
      var $91=(($3+9092)|0);
      var $92=HEAP32[(($91)>>2)];
      var $93=((($92)-(1))|0);
      HEAP32[(($91)>>2)]=$93;
      __label__ = 21; break;
    case 21: 
      var $95=$mcu_row;
      var $96=((($95)+(1))|0);
      $mcu_row=$96;
      __label__ = 5; break;
    case 22: 
      var $98=(($3+252)|0);
      var $99=HEAP32[(($98)>>2)];
      var $100=(($99)|0)==1;
      if ($100) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: 
      var $102=(($3+256)|0);
      var $103=(($102)|0);
      var $104=HEAP32[(($103)>>2)];
      var $105=(($m_block_y_mcu+($104<<2))|0);
      var $106=HEAP32[(($105)>>2)];
      var $107=((($106)+(1))|0);
      HEAP32[(($105)>>2)]=$107;
      __label__ = 29; break;
    case 24: 
      $component_num=0;
      __label__ = 25; break;
    case 25: 
      var $110=$component_num;
      var $111=(($3+252)|0);
      var $112=HEAP32[(($111)>>2)];
      var $113=(($110)|0) < (($112)|0);
      if ($113) { __label__ = 26; break; } else { __label__ = 28; break; }
    case 26: 
      var $115=$component_num;
      var $116=(($3+256)|0);
      var $117=(($116+($115<<2))|0);
      var $118=HEAP32[(($117)>>2)];
      $component_id=$118;
      var $119=$component_id;
      var $120=(($3+172)|0);
      var $121=(($120+($119<<2))|0);
      var $122=HEAP32[(($121)>>2)];
      var $123=$component_id;
      var $124=(($m_block_y_mcu+($123<<2))|0);
      var $125=HEAP32[(($124)>>2)];
      var $126=((($125)+($122))|0);
      HEAP32[(($124)>>2)]=$126;
      __label__ = 27; break;
    case 27: 
      var $128=$component_num;
      var $129=((($128)+(1))|0);
      $component_num=$129;
      __label__ = 25; break;
    case 28: 
      __label__ = 29; break;
    case 29: 
      __label__ = 30; break;
    case 30: 
      var $133=$mcu_col;
      var $134=((($133)+(1))|0);
      $mcu_col=$134;
      __label__ = 3; break;
    case 31: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder11decode_scanEPFvPS0_iiiE["X"]=1;

function __ZN4jpgd12jpeg_decoder21decode_block_ac_firstEPS0_iii($pD, $component_id, $block_x, $block_y) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $k;
      var $s;
      var $r;
      var $p;
      $1=$pD;
      $2=$component_id;
      $3=$block_x;
      $4=$block_y;
      var $5=$1;
      var $6=(($5+468)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=(($7)|0)!=0;
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $10=$1;
      var $11=(($10+468)|0);
      var $12=HEAP32[(($11)>>2)];
      var $13=((($12)-(1))|0);
      HEAP32[(($11)>>2)]=$13;
      __label__ = 23; break;
    case 4: 
      var $15=$1;
      var $16=$2;
      var $17=$1;
      var $18=(($17+452)|0);
      var $19=(($18+($16<<2))|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=$3;
      var $22=$4;
      var $23=__ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii($15, $20, $21, $22);
      $p=$23;
      var $24=$1;
      var $25=(($24+304)|0);
      var $26=HEAP32[(($25)>>2)];
      $k=$26;
      __label__ = 5; break;
    case 5: 
      var $28=$k;
      var $29=$1;
      var $30=(($29+308)|0);
      var $31=HEAP32[(($30)>>2)];
      var $32=(($28)|0) <= (($31)|0);
      if ($32) { __label__ = 6; break; } else { __label__ = 23; break; }
    case 6: 
      var $34=$1;
      var $35=$2;
      var $36=$1;
      var $37=(($36+288)|0);
      var $38=(($37+($35<<2))|0);
      var $39=HEAP32[(($38)>>2)];
      var $40=$1;
      var $41=(($40+404)|0);
      var $42=(($41+($39<<2))|0);
      var $43=HEAP32[(($42)>>2)];
      var $44=__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesE($34, $43);
      $s=$44;
      var $45=$s;
      var $46=$45 >> 4;
      $r=$46;
      var $47=$s;
      var $48=$47 & 15;
      $s=$48;
      var $49=$s;
      var $50=(($49)|0)!=0;
      if ($50) { __label__ = 7; break; } else { __label__ = 13; break; }
    case 7: 
      var $52=$r;
      var $53=$k;
      var $54=((($53)+($52))|0);
      $k=$54;
      var $55=(($54)|0) > 63;
      if ($55) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $57=$1;
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($57, -230);
      throw "Reached an unreachable!"
    case 9: 
      var $59=$1;
      var $60=$s;
      var $61=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($59, $60);
      $r=$61;
      var $62=$r;
      var $63=$s;
      var $64=$63 & 15;
      var $65=((__ZN4jpgdL13s_extend_testE+($64<<2))|0);
      var $66=HEAP32[(($65)>>2)];
      var $67=(($62)|0) < (($66)|0);
      if ($67) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $69=$r;
      var $70=$s;
      var $71=$70 & 15;
      var $72=((__ZN4jpgdL15s_extend_offsetE+($71<<2))|0);
      var $73=HEAP32[(($72)>>2)];
      var $74=((($69)+($73))|0);
      var $78 = $74;__label__ = 12; break;
    case 11: 
      var $76=$r;
      var $78 = $76;__label__ = 12; break;
    case 12: 
      var $78;
      $s=$78;
      var $79=$s;
      var $80=$1;
      var $81=(($80+312)|0);
      var $82=HEAP32[(($81)>>2)];
      var $83=$79 << $82;
      var $84=(($83) & 65535);
      var $85=$k;
      var $86=((__ZN4jpgdL5g_ZAGE+($85<<2))|0);
      var $87=HEAP32[(($86)>>2)];
      var $88=$p;
      var $89=(($88+($87<<1))|0);
      HEAP16[(($89)>>1)]=$84;
      __label__ = 21; break;
    case 13: 
      var $91=$r;
      var $92=(($91)|0)==15;
      if ($92) { __label__ = 14; break; } else { __label__ = 17; break; }
    case 14: 
      var $94=$k;
      var $95=((($94)+(15))|0);
      $k=$95;
      var $96=(($95)|0) > 63;
      if ($96) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: 
      var $98=$1;
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($98, -230);
      throw "Reached an unreachable!"
    case 16: 
      __label__ = 20; break;
    case 17: 
      var $101=$r;
      var $102=1 << $101;
      var $103=$1;
      var $104=(($103+468)|0);
      HEAP32[(($104)>>2)]=$102;
      var $105=$r;
      var $106=(($105)|0)!=0;
      if ($106) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $108=$1;
      var $109=$r;
      var $110=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($108, $109);
      var $111=$1;
      var $112=(($111+468)|0);
      var $113=HEAP32[(($112)>>2)];
      var $114=((($113)+($110))|0);
      HEAP32[(($112)>>2)]=$114;
      __label__ = 19; break;
    case 19: 
      var $116=$1;
      var $117=(($116+468)|0);
      var $118=HEAP32[(($117)>>2)];
      var $119=((($118)-(1))|0);
      HEAP32[(($117)>>2)]=$119;
      __label__ = 23; break;
    case 20: 
      __label__ = 21; break;
    case 21: 
      __label__ = 22; break;
    case 22: 
      var $123=$k;
      var $124=((($123)+(1))|0);
      $k=$124;
      __label__ = 5; break;
    case 23: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder21decode_block_ac_firstEPS0_iii["X"]=1;

function __ZN4jpgd12jpeg_decoder22decode_block_ac_refineEPS0_iii($pD, $component_id, $block_x, $block_y) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $s;
      var $k;
      var $r;
      var $p1;
      var $m1;
      var $p;
      var $this_coef;
      var $this_coef1;
      $1=$pD;
      $2=$component_id;
      $3=$block_x;
      $4=$block_y;
      var $5=$1;
      var $6=(($5+312)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=1 << $7;
      $p1=$8;
      var $9=$1;
      var $10=(($9+312)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=-1 << $11;
      $m1=$12;
      var $13=$1;
      var $14=$2;
      var $15=$1;
      var $16=(($15+452)|0);
      var $17=(($16+($14<<2))|0);
      var $18=HEAP32[(($17)>>2)];
      var $19=$3;
      var $20=$4;
      var $21=__ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii($13, $18, $19, $20);
      $p=$21;
      var $22=$1;
      var $23=(($22+308)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=(($24)|0) <= 63;
      if ($25) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __label__ = 5; break;
    case 4: 
      ___assert_func(((STRING_TABLE.__str114)|0), 2683, ((STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder22decode_block_ac_refineEPS0_iii)|0), ((STRING_TABLE.__str12126)|0));
      __label__ = 5; break;
    case 5: 
      var $29=$1;
      var $30=(($29+304)|0);
      var $31=HEAP32[(($30)>>2)];
      $k=$31;
      var $32=$1;
      var $33=(($32+468)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=(($34)|0)==0;
      if ($35) { __label__ = 6; break; } else { __label__ = 41; break; }
    case 6: 
      __label__ = 7; break;
    case 7: 
      var $38=$k;
      var $39=$1;
      var $40=(($39+308)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($38)|0) <= (($41)|0);
      if ($42) { __label__ = 8; break; } else { __label__ = 40; break; }
    case 8: 
      var $44=$1;
      var $45=$2;
      var $46=$1;
      var $47=(($46+288)|0);
      var $48=(($47+($45<<2))|0);
      var $49=HEAP32[(($48)>>2)];
      var $50=$1;
      var $51=(($50+404)|0);
      var $52=(($51+($49<<2))|0);
      var $53=HEAP32[(($52)>>2)];
      var $54=__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesE($44, $53);
      $s=$54;
      var $55=$s;
      var $56=$55 >> 4;
      $r=$56;
      var $57=$s;
      var $58=$57 & 15;
      $s=$58;
      var $59=$s;
      var $60=(($59)|0)!=0;
      if ($60) { __label__ = 9; break; } else { __label__ = 15; break; }
    case 9: 
      var $62=$s;
      var $63=(($62)|0)!=1;
      if ($63) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $65=$1;
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($65, -230);
      throw "Reached an unreachable!"
    case 11: 
      var $67=$1;
      var $68=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($67, 1);
      var $69=(($68)|0)!=0;
      if ($69) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $71=$p1;
      $s=$71;
      __label__ = 14; break;
    case 13: 
      var $73=$m1;
      $s=$73;
      __label__ = 14; break;
    case 14: 
      __label__ = 20; break;
    case 15: 
      var $76=$r;
      var $77=(($76)|0)!=15;
      if ($77) { __label__ = 16; break; } else { __label__ = 19; break; }
    case 16: 
      var $79=$r;
      var $80=1 << $79;
      var $81=$1;
      var $82=(($81+468)|0);
      HEAP32[(($82)>>2)]=$80;
      var $83=$r;
      var $84=(($83)|0)!=0;
      if ($84) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: 
      var $86=$1;
      var $87=$r;
      var $88=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($86, $87);
      var $89=$1;
      var $90=(($89+468)|0);
      var $91=HEAP32[(($90)>>2)];
      var $92=((($91)+($88))|0);
      HEAP32[(($90)>>2)]=$92;
      __label__ = 18; break;
    case 18: 
      __label__ = 40; break;
    case 19: 
      __label__ = 20; break;
    case 20: 
      __label__ = 21; break;
    case 21: 
      var $97=$p;
      var $98=$k;
      var $99=$98 & 63;
      var $100=((__ZN4jpgdL5g_ZAGE+($99<<2))|0);
      var $101=HEAP32[(($100)>>2)];
      var $102=(($97+($101<<1))|0);
      $this_coef=$102;
      var $103=$this_coef;
      var $104=HEAP16[(($103)>>1)];
      var $105=(($104 << 16) >> 16);
      var $106=(($105)|0)!=0;
      if ($106) { __label__ = 22; break; } else { __label__ = 30; break; }
    case 22: 
      var $108=$1;
      var $109=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($108, 1);
      var $110=(($109)|0)!=0;
      if ($110) { __label__ = 23; break; } else { __label__ = 29; break; }
    case 23: 
      var $112=$this_coef;
      var $113=HEAP16[(($112)>>1)];
      var $114=(($113 << 16) >> 16);
      var $115=$p1;
      var $116=$114 & $115;
      var $117=(($116)|0)==0;
      if ($117) { __label__ = 24; break; } else { __label__ = 28; break; }
    case 24: 
      var $119=$this_coef;
      var $120=HEAP16[(($119)>>1)];
      var $121=(($120 << 16) >> 16);
      var $122=(($121)|0) >= 0;
      if ($122) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: 
      var $124=$this_coef;
      var $125=HEAP16[(($124)>>1)];
      var $126=(($125 << 16) >> 16);
      var $127=$p1;
      var $128=((($126)+($127))|0);
      var $129=(($128) & 65535);
      var $130=$this_coef;
      HEAP16[(($130)>>1)]=$129;
      __label__ = 27; break;
    case 26: 
      var $132=$this_coef;
      var $133=HEAP16[(($132)>>1)];
      var $134=(($133 << 16) >> 16);
      var $135=$m1;
      var $136=((($134)+($135))|0);
      var $137=(($136) & 65535);
      var $138=$this_coef;
      HEAP16[(($138)>>1)]=$137;
      __label__ = 27; break;
    case 27: 
      __label__ = 28; break;
    case 28: 
      __label__ = 29; break;
    case 29: 
      __label__ = 33; break;
    case 30: 
      var $143=$r;
      var $144=((($143)-(1))|0);
      $r=$144;
      var $145=(($144)|0) < 0;
      if ($145) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: 
      __label__ = 35; break;
    case 32: 
      __label__ = 33; break;
    case 33: 
      var $149=$k;
      var $150=((($149)+(1))|0);
      $k=$150;
      __label__ = 34; break;
    case 34: 
      var $152=$k;
      var $153=$1;
      var $154=(($153+308)|0);
      var $155=HEAP32[(($154)>>2)];
      var $156=(($152)|0) <= (($155)|0);
      if ($156) { __label__ = 21; break; } else { __label__ = 35; break; }
    case 35: 
      var $158=$s;
      var $159=(($158)|0)!=0;
      if ($159) { __label__ = 36; break; } else { __label__ = 38; break; }
    case 36: 
      var $161=$k;
      var $162=(($161)|0) < 64;
      if ($162) { __label__ = 37; break; } else { __label__ = 38; break; }
    case 37: 
      var $164=$s;
      var $165=(($164) & 65535);
      var $166=$k;
      var $167=((__ZN4jpgdL5g_ZAGE+($166<<2))|0);
      var $168=HEAP32[(($167)>>2)];
      var $169=$p;
      var $170=(($169+($168<<1))|0);
      HEAP16[(($170)>>1)]=$165;
      __label__ = 38; break;
    case 38: 
      __label__ = 39; break;
    case 39: 
      var $173=$k;
      var $174=((($173)+(1))|0);
      $k=$174;
      __label__ = 7; break;
    case 40: 
      __label__ = 41; break;
    case 41: 
      var $177=$1;
      var $178=(($177+468)|0);
      var $179=HEAP32[(($178)>>2)];
      var $180=(($179)|0) > 0;
      if ($180) { __label__ = 42; break; } else { __label__ = 56; break; }
    case 42: 
      __label__ = 43; break;
    case 43: 
      var $183=$k;
      var $184=$1;
      var $185=(($184+308)|0);
      var $186=HEAP32[(($185)>>2)];
      var $187=(($183)|0) <= (($186)|0);
      if ($187) { __label__ = 44; break; } else { __label__ = 55; break; }
    case 44: 
      var $189=$p;
      var $190=$k;
      var $191=$190 & 63;
      var $192=((__ZN4jpgdL5g_ZAGE+($191<<2))|0);
      var $193=HEAP32[(($192)>>2)];
      var $194=(($189+($193<<1))|0);
      $this_coef1=$194;
      var $195=$this_coef1;
      var $196=HEAP16[(($195)>>1)];
      var $197=(($196 << 16) >> 16);
      var $198=(($197)|0)!=0;
      if ($198) { __label__ = 45; break; } else { __label__ = 53; break; }
    case 45: 
      var $200=$1;
      var $201=__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi($200, 1);
      var $202=(($201)|0)!=0;
      if ($202) { __label__ = 46; break; } else { __label__ = 52; break; }
    case 46: 
      var $204=$this_coef1;
      var $205=HEAP16[(($204)>>1)];
      var $206=(($205 << 16) >> 16);
      var $207=$p1;
      var $208=$206 & $207;
      var $209=(($208)|0)==0;
      if ($209) { __label__ = 47; break; } else { __label__ = 51; break; }
    case 47: 
      var $211=$this_coef1;
      var $212=HEAP16[(($211)>>1)];
      var $213=(($212 << 16) >> 16);
      var $214=(($213)|0) >= 0;
      if ($214) { __label__ = 48; break; } else { __label__ = 49; break; }
    case 48: 
      var $216=$this_coef1;
      var $217=HEAP16[(($216)>>1)];
      var $218=(($217 << 16) >> 16);
      var $219=$p1;
      var $220=((($218)+($219))|0);
      var $221=(($220) & 65535);
      var $222=$this_coef1;
      HEAP16[(($222)>>1)]=$221;
      __label__ = 50; break;
    case 49: 
      var $224=$this_coef1;
      var $225=HEAP16[(($224)>>1)];
      var $226=(($225 << 16) >> 16);
      var $227=$m1;
      var $228=((($226)+($227))|0);
      var $229=(($228) & 65535);
      var $230=$this_coef1;
      HEAP16[(($230)>>1)]=$229;
      __label__ = 50; break;
    case 50: 
      __label__ = 51; break;
    case 51: 
      __label__ = 52; break;
    case 52: 
      __label__ = 53; break;
    case 53: 
      __label__ = 54; break;
    case 54: 
      var $236=$k;
      var $237=((($236)+(1))|0);
      $k=$237;
      __label__ = 43; break;
    case 55: 
      var $239=$1;
      var $240=(($239+468)|0);
      var $241=HEAP32[(($240)>>2)];
      var $242=((($241)-(1))|0);
      HEAP32[(($240)>>2)]=$242;
      __label__ = 56; break;
    case 56: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder22decode_block_ac_refineEPS0_iii["X"]=1;

function __ZN4jpgd19jpeg_decoder_streamD2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  ;
  return;
}


function __ZN4jpgd19jpeg_decoder_streamC2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=$2;
  HEAP32[(($3)>>2)]=((__ZTVN4jpgd19jpeg_decoder_streamE+8)|0);
  ;
  return;
}


function __ZN4jpgd12jpeg_decoder12decode_startEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$this;
      var $2=$1;
      __ZN4jpgd12jpeg_decoder10init_frameEv($2);
      var $3=(($2+56)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($4)|0)!=0;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder16init_progressiveEv($2);
      __label__ = 5; break;
    case 4: 
      __ZN4jpgd12jpeg_decoder15init_sequentialEv($2);
      __label__ = 5; break;
    case 5: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder11decode_initEPNS_19jpeg_decoder_streamE($this, $pStream) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$this;
  $2=$pStream;
  var $3=$1;
  var $4=$2;
  __ZN4jpgd12jpeg_decoder4initEPNS_19jpeg_decoder_streamE($3, $4);
  __ZN4jpgd12jpeg_decoder17locate_sof_markerEv($3);
  ;
  return;
}


function __ZN4jpgd12jpeg_decoderC2EPNS_19jpeg_decoder_streamE($this, $pStream) {
  ;
  var __label__;
  __label__ = 2; 
  var setjmpTable = {"2": function(value) { __label__ = 6; $6 = value },dummy: 0};
  while(1) try { switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $1=$this;
      $2=$pStream;
      var $3=$1;
      var $4=(($3)|0);
      var $5=(($4)|0);
      var $6=(HEAP32[(($5)>>2)]=__label__, 0);
      __label__ = 6; break;
    case 6: 
      var $7=(($6)|0)!=0;
      if ($7) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __label__ = 5; break;
    case 4: 
      var $10=$2;
      __ZN4jpgd12jpeg_decoder11decode_initEPNS_19jpeg_decoder_streamE($3, $10);
      __label__ = 5; break;
    case 5: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  } } catch(e) { if (!e.longjmp) throw(e); setjmpTable[e.label](e.value) }
}


function __ZN4jpgd12jpeg_decoder14begin_decodingEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  var setjmpTable = {"6": function(value) { __label__ = 10; $16 = value },dummy: 0};
  while(1) try { switch(__label__) {
    case 2: 
      var $1;
      var $2;
      $2=$this;
      var $3=$2;
      var $4=(($3+13300)|0);
      var $5=HEAP8[($4)];
      var $6=(($5) & 1);
      if ($6) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      $1=0;
      __label__ = 9; break;
    case 4: 
      var $9=(($3+13296)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=(($10)|0)!=0;
      if ($11) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      $1=-1;
      __label__ = 9; break;
    case 6: 
      var $14=(($3)|0);
      var $15=(($14)|0);
      var $16=(HEAP32[(($15)>>2)]=__label__, 0);
      __label__ = 10; break;
    case 10: 
      var $17=(($16)|0)!=0;
      if ($17) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      $1=-1;
      __label__ = 9; break;
    case 8: 
      __ZN4jpgd12jpeg_decoder12decode_startEv($3);
      var $20=(($3+13300)|0);
      HEAP8[($20)]=1;
      $1=0;
      __label__ = 9; break;
    case 9: 
      var $22=$1;
      ;
      return $22;
    default: assert(0, "bad label: " + __label__);
  } } catch(e) { if (!e.longjmp) throw(e); setjmpTable[e.label](e.value) }
}


function __ZN4jpgd12jpeg_decoderD2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZN4jpgd12jpeg_decoder15free_all_blocksEv($2);
  ;
  return;
}


function __ZN4jpgd24jpeg_decoder_file_streamC2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=$2;
  __ZN4jpgd19jpeg_decoder_streamC2Ev($3);
  var $4=$2;
  HEAP32[(($4)>>2)]=((__ZTVN4jpgd24jpeg_decoder_file_streamE+8)|0);
  var $5=(($2+4)|0);
  HEAP32[(($5)>>2)]=0;
  var $6=(($2+8)|0);
  HEAP8[($6)]=0;
  var $7=(($2+9)|0);
  HEAP8[($7)]=0;
  ;
  return;
}


function __ZN4jpgd24jpeg_decoder_file_stream5closeEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$this;
      var $2=$1;
      var $3=(($2+4)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($4)|0)!=0;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $7=(($2+4)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=_fclose($8);
      var $10=(($2+4)|0);
      HEAP32[(($10)>>2)]=0;
      __label__ = 4; break;
    case 4: 
      var $12=(($2+8)|0);
      HEAP8[($12)]=0;
      var $13=(($2+9)|0);
      HEAP8[($13)]=0;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd24jpeg_decoder_file_streamD0Ev($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$this;
      var $4=$1;
      (function() { try { __THREW__ = false; return FUNCTION_TABLE[__ZN4jpgd24jpeg_decoder_file_streamD1Ev]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $6=$4;
      __ZdlPv($6);
      ;
      return;
    case 4: 
      var $8=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $9=$8.f0;
      $2=$9;
      var $10=$8.f1;
      $3=$10;
      var $11=$4;
      __ZdlPv($11);
      __label__ = 5; break;
    case 5: 
      var $13=$2;
      var $14=$3;
      var $15=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $13, tempValue);
      var $16=($15.f1 = $14, $15);
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)];
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd24jpeg_decoder_file_stream4openEPKc($this, $Pfilename) {
  ;
  var __label__;

  var $1;
  var $2;
  $1=$this;
  $2=$Pfilename;
  var $3=$1;
  __ZN4jpgd24jpeg_decoder_file_stream5closeEv($3);
  var $4=(($3+8)|0);
  HEAP8[($4)]=0;
  var $5=(($3+9)|0);
  HEAP8[($5)]=0;
  var $6=$2;
  var $7=_fopen($6, ((STRING_TABLE.__str13127)|0));
  var $8=(($3+4)|0);
  HEAP32[(($8)>>2)]=$7;
  var $9=(($3+4)|0);
  var $10=HEAP32[(($9)>>2)];
  var $11=(($10)|0)!=0;
  ;
  return $11;
}


function __ZN4jpgd24jpeg_decoder_file_stream4readEPhiPb($this, $pBuf, $max_bytes_to_read, $pEOF_flag) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $bytes_read;
      $2=$this;
      $3=$pBuf;
      $4=$max_bytes_to_read;
      $5=$pEOF_flag;
      var $6=$2;
      var $7=(($6+4)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=(($8)|0)!=0;
      if ($9) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      $1=-1;
      __label__ = 13; break;
    case 4: 
      var $12=(($6+8)|0);
      var $13=HEAP8[($12)];
      var $14=(($13) & 1);
      if ($14) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      var $16=$5;
      HEAP8[($16)]=1;
      $1=0;
      __label__ = 13; break;
    case 6: 
      var $18=(($6+9)|0);
      var $19=HEAP8[($18)];
      var $20=(($19) & 1);
      if ($20) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      $1=-1;
      __label__ = 13; break;
    case 8: 
      var $23=$3;
      var $24=$4;
      var $25=(($6+4)|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=_fread($23, 1, $24, $26);
      $bytes_read=$27;
      var $28=$bytes_read;
      var $29=$4;
      var $30=(($28)|0) < (($29)|0);
      if ($30) { __label__ = 9; break; } else { __label__ = 12; break; }
    case 9: 
      var $32=(($6+4)|0);
      var $33=HEAP32[(($32)>>2)];
      var $34=_ferror($33);
      var $35=(($34)|0)!=0;
      if ($35) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $37=(($6+9)|0);
      HEAP8[($37)]=1;
      $1=-1;
      __label__ = 13; break;
    case 11: 
      var $39=(($6+8)|0);
      HEAP8[($39)]=1;
      var $40=$5;
      HEAP8[($40)]=1;
      __label__ = 12; break;
    case 12: 
      var $42=$bytes_read;
      $1=$42;
      __label__ = 13; break;
    case 13: 
      var $44=$1;
      ;
      return $44;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd24jpeg_decoder_file_stream4readEPhiPb["X"]=1;

function __ZN4jpgd12jpeg_decoder16init_progressiveEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $dc_only_scan;
      var $refinement_scan;
      var $decode_block_func;
      $1=$this;
      var $2=$1;
      var $3=(($2+152)|0);
      var $4=HEAP32[(($3)>>2)];
      var $5=(($4)|0)==4;
      if ($5) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -232);
      throw "Reached an unreachable!"
    case 4: 
      $i=0;
      __label__ = 5; break;
    case 5: 
      var $9=$i;
      var $10=(($2+152)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=(($9)|0) < (($11)|0);
      if ($12) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: 
      var $14=(($2+9100)|0);
      var $15=HEAP32[(($14)>>2)];
      var $16=$i;
      var $17=(($2+156)|0);
      var $18=(($17+($16<<2))|0);
      var $19=HEAP32[(($18)>>2)];
      var $20=((($15)*($19))|0);
      var $21=(($2+9124)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=$i;
      var $24=(($2+172)|0);
      var $25=(($24+($23<<2))|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=((($22)*($26))|0);
      var $28=__ZN4jpgd12jpeg_decoder14coeff_buf_openEiiii($2, $20, $27, 1, 1);
      var $29=$i;
      var $30=(($2+436)|0);
      var $31=(($30+($29<<2))|0);
      HEAP32[(($31)>>2)]=$28;
      var $32=(($2+9100)|0);
      var $33=HEAP32[(($32)>>2)];
      var $34=$i;
      var $35=(($2+156)|0);
      var $36=(($35+($34<<2))|0);
      var $37=HEAP32[(($36)>>2)];
      var $38=((($33)*($37))|0);
      var $39=(($2+9124)|0);
      var $40=HEAP32[(($39)>>2)];
      var $41=$i;
      var $42=(($2+172)|0);
      var $43=(($42+($41<<2))|0);
      var $44=HEAP32[(($43)>>2)];
      var $45=((($40)*($44))|0);
      var $46=__ZN4jpgd12jpeg_decoder14coeff_buf_openEiiii($2, $38, $45, 8, 8);
      var $47=$i;
      var $48=(($2+452)|0);
      var $49=(($48+($47<<2))|0);
      HEAP32[(($49)>>2)]=$46;
      __label__ = 7; break;
    case 7: 
      var $51=$i;
      var $52=((($51)+(1))|0);
      $i=$52;
      __label__ = 5; break;
    case 8: 
      __label__ = 9; break;
    case 9: 
      var $55=__ZN4jpgd12jpeg_decoder9init_scanEv($2);
      var $56=(($55)|0)!=0;
      if ($56) { __label__ = 11; break; } else { __label__ = 10; break; }
    case 10: 
      __label__ = 34; break;
    case 11: 
      var $59=(($2+304)|0);
      var $60=HEAP32[(($59)>>2)];
      var $61=(($60)|0)==0;
      var $62=(($61)&1);
      $dc_only_scan=$62;
      var $63=(($2+316)|0);
      var $64=HEAP32[(($63)>>2)];
      var $65=(($64)|0)!=0;
      var $66=(($65)&1);
      $refinement_scan=$66;
      var $67=(($2+304)|0);
      var $68=HEAP32[(($67)>>2)];
      var $69=(($2+308)|0);
      var $70=HEAP32[(($69)>>2)];
      var $71=(($68)|0) > (($70)|0);
      if ($71) { __label__ = 13; break; } else { __label__ = 12; break; }
    case 12: 
      var $73=(($2+308)|0);
      var $74=HEAP32[(($73)>>2)];
      var $75=(($74)|0) > 63;
      if ($75) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -227);
      throw "Reached an unreachable!"
    case 14: 
      var $78=$dc_only_scan;
      var $79=(($78)|0)!=0;
      if ($79) { __label__ = 15; break; } else { __label__ = 18; break; }
    case 15: 
      var $81=(($2+308)|0);
      var $82=HEAP32[(($81)>>2)];
      var $83=(($82)|0)!=0;
      if ($83) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -227);
      throw "Reached an unreachable!"
    case 17: 
      __label__ = 21; break;
    case 18: 
      var $87=(($2+252)|0);
      var $88=HEAP32[(($87)>>2)];
      var $89=(($88)|0)!=1;
      if ($89) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -227);
      throw "Reached an unreachable!"
    case 20: 
      __label__ = 21; break;
    case 21: 
      var $93=$refinement_scan;
      var $94=(($93)|0)!=0;
      if ($94) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: 
      var $96=(($2+312)|0);
      var $97=HEAP32[(($96)>>2)];
      var $98=(($2+316)|0);
      var $99=HEAP32[(($98)>>2)];
      var $100=((($99)-(1))|0);
      var $101=(($97)|0)!=(($100)|0);
      if ($101) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -226);
      throw "Reached an unreachable!"
    case 24: 
      var $104=$dc_only_scan;
      var $105=(($104)|0)!=0;
      if ($105) { __label__ = 25; break; } else { __label__ = 29; break; }
    case 25: 
      var $107=$refinement_scan;
      var $108=(($107)|0)!=0;
      if ($108) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: 
      $decode_block_func=2;
      __label__ = 28; break;
    case 27: 
      $decode_block_func=4;
      __label__ = 28; break;
    case 28: 
      __label__ = 33; break;
    case 29: 
      var $113=$refinement_scan;
      var $114=(($113)|0)!=0;
      if ($114) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: 
      $decode_block_func=6;
      __label__ = 32; break;
    case 31: 
      $decode_block_func=8;
      __label__ = 32; break;
    case 32: 
      __label__ = 33; break;
    case 33: 
      var $119=$decode_block_func;
      __ZN4jpgd12jpeg_decoder11decode_scanEPFvPS0_iiiE($2, $119);
      var $120=(($2+9080)|0);
      HEAP32[(($120)>>2)]=16;
      var $121=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      var $122=__ZN4jpgd12jpeg_decoder8get_bitsEi($2, 16);
      __label__ = 9; break;
    case 34: 
      var $124=(($2+152)|0);
      var $125=HEAP32[(($124)>>2)];
      var $126=(($2+252)|0);
      HEAP32[(($126)>>2)]=$125;
      $i=0;
      __label__ = 35; break;
    case 35: 
      var $128=$i;
      var $129=(($2+152)|0);
      var $130=HEAP32[(($129)>>2)];
      var $131=(($128)|0) < (($130)|0);
      if ($131) { __label__ = 36; break; } else { __label__ = 38; break; }
    case 36: 
      var $133=$i;
      var $134=$i;
      var $135=(($2+256)|0);
      var $136=(($135+($134<<2))|0);
      HEAP32[(($136)>>2)]=$133;
      __label__ = 37; break;
    case 37: 
      var $138=$i;
      var $139=((($138)+(1))|0);
      $i=$139;
      __label__ = 35; break;
    case 38: 
      __ZN4jpgd12jpeg_decoder20calc_mcu_block_orderEv($2);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder16init_progressiveEv["X"]=1;

function __ZN4jpgd12jpeg_decoder15init_sequentialEv($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$this;
      var $2=$1;
      var $3=__ZN4jpgd12jpeg_decoder9init_scanEv($2);
      var $4=(($3)|0)!=0;
      if ($4) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE($2, -240);
      throw "Reached an unreachable!"
    case 4: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd24jpeg_decoder_file_streamD2Ev($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$this;
      var $4=$1;
      var $5=$4;
      HEAP32[(($5)>>2)]=((__ZTVN4jpgd24jpeg_decoder_file_streamE+8)|0);
      (function() { try { __THREW__ = false; return __ZN4jpgd24jpeg_decoder_file_stream5closeEv($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $7=$4;
      __ZN4jpgd19jpeg_decoder_streamD2Ev($7);
      ;
      return;
    case 4: 
      var $9=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $10=$9.f0;
      $2=$10;
      var $11=$9.f1;
      $3=$11;
      var $12=$4;
      (function() { try { __THREW__ = false; return __ZN4jpgd19jpeg_decoder_streamD2Ev($12) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: 
      __label__ = 6; break;
    case 6: 
      var $15=$2;
      var $16=$3;
      var $17=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $15, tempValue);
      var $18=($17.f1 = $16, $17);
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)];
    case 7: 
      var $20=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[0]);
      __ZSt9terminatev();
      throw "Reached an unreachable!"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12DCT_Upsample8Matrix44C2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  ;
  return;
}


function __ZNK4jpgd12jpeg_decoder14get_error_codeEv($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=(($2+13296)|0);
  var $4=HEAP32[(($3)>>2)];
  ;
  return $4;
}


function __ZNK4jpgd12jpeg_decoder9get_widthEv($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=(($2+44)|0);
  var $4=HEAP32[(($3)>>2)];
  ;
  return $4;
}


function __ZNK4jpgd12jpeg_decoder10get_heightEv($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=(($2+48)|0);
  var $4=HEAP32[(($3)>>2)];
  ;
  return $4;
}


function __ZNK4jpgd12jpeg_decoder18get_num_componentsEv($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=(($2+152)|0);
  var $4=HEAP32[(($3)>>2)];
  ;
  return $4;
}


function __ZN4jpgd12DCT_Upsample8Matrix442atEii($this, $r, $c) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  $1=$this;
  $2=$r;
  $3=$c;
  var $4=$1;
  var $5=$3;
  var $6=$2;
  var $7=(($4)|0);
  var $8=(($7+($6<<4))|0);
  var $9=(($8+($5<<2))|0);
  ;
  return $9;
}


function __ZNK4jpgd12DCT_Upsample8Matrix442atEii($this, $r, $c) {
  ;
  var __label__;

  var $1;
  var $2;
  var $3;
  $1=$this;
  $2=$r;
  $3=$c;
  var $4=$1;
  var $5=$3;
  var $6=$2;
  var $7=(($4)|0);
  var $8=(($7+($6<<4))|0);
  var $9=(($8+($5<<2))|0);
  ;
  return $9;
}


function __ZN4jpgd19jpeg_decoder_streamD1Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  __ZN4jpgd19jpeg_decoder_streamD2Ev($2);
  ;
  return;
}


function __ZN4jpgd19jpeg_decoder_streamD0Ev($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$this;
      var $4=$1;
      (function() { try { __THREW__ = false; return __ZN4jpgd19jpeg_decoder_streamD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $6=$4;
      __ZdlPv($6);
      ;
      return;
    case 4: 
      var $8=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $9=$8.f0;
      $2=$9;
      var $10=$8.f1;
      $3=$10;
      var $11=$4;
      __ZdlPv($11);
      __label__ = 5; break;
    case 5: 
      var $13=$2;
      var $14=$3;
      var $15=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $13, tempValue);
      var $16=($15.f1 = $14, $15);
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)];
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder9get_octetEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $padding_flag=__stackBase__;
      var $c;
      $2=$this;
      var $3=$2;
      var $4=__ZN4jpgd12jpeg_decoder8get_charEPb($3, $padding_flag);
      $c=$4;
      var $5=$c;
      var $6=(($5)|0)==255;
      if ($6) { __label__ = 3; break; } else { __label__ = 10; break; }
    case 3: 
      var $8=HEAP8[($padding_flag)];
      var $9=(($8) & 1);
      if ($9) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      $1=-1;
      __label__ = 11; break;
    case 5: 
      var $12=__ZN4jpgd12jpeg_decoder8get_charEPb($3, $padding_flag);
      $c=$12;
      var $13=HEAP8[($padding_flag)];
      var $14=(($13) & 1);
      if ($14) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      __ZN4jpgd12jpeg_decoder10stuff_charEh($3, -1);
      $1=-1;
      __label__ = 11; break;
    case 7: 
      var $17=$c;
      var $18=(($17)|0)==0;
      if ($18) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      $1=-1;
      __label__ = 11; break;
    case 9: 
      var $21=$c;
      var $22=(($21) & 255);
      __ZN4jpgd12jpeg_decoder10stuff_charEh($3, $22);
      __ZN4jpgd12jpeg_decoder10stuff_charEh($3, -1);
      $1=-1;
      __label__ = 11; break;
    case 10: 
      var $24=$c;
      var $25=(($24) & 255);
      $1=$25;
      __label__ = 11; break;
    case 11: 
      var $27=$1;
      STACKTOP = __stackBase__;
      return $27;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN4jpgd12jpeg_decoder8get_charEPb($this, $pPadding_flag) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $t;
      var $c;
      $2=$this;
      $3=$pPadding_flag;
      var $4=$2;
      var $5=(($4+492)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=(($6)|0)!=0;
      if ($7) { __label__ = 8; break; } else { __label__ = 3; break; }
    case 3: 
      __ZN4jpgd12jpeg_decoder14prep_in_bufferEv($4);
      var $9=(($4+492)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=(($10)|0)!=0;
      if ($11) { __label__ = 7; break; } else { __label__ = 4; break; }
    case 4: 
      var $13=$3;
      HEAP8[($13)]=1;
      var $14=(($4+496)|0);
      var $15=HEAP32[(($14)>>2)];
      $t=$15;
      var $16=(($4+496)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=$17 ^ 1;
      HEAP32[(($16)>>2)]=$18;
      var $19=$t;
      var $20=(($19)|0)!=0;
      if ($20) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: 
      $1=217;
      __label__ = 9; break;
    case 6: 
      $1=255;
      __label__ = 9; break;
    case 7: 
      __label__ = 8; break;
    case 8: 
      var $25=$3;
      HEAP8[($25)]=0;
      var $26=(($4+488)|0);
      var $27=HEAP32[(($26)>>2)];
      var $28=(($27+1)|0);
      HEAP32[(($26)>>2)]=$28;
      var $29=HEAPU8[($27)];
      var $30=(($29)&255);
      $c=$30;
      var $31=(($4+492)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=((($32)-(1))|0);
      HEAP32[(($31)>>2)]=$33;
      var $34=$c;
      $1=$34;
      __label__ = 9; break;
    case 9: 
      var $36=$1;
      ;
      return $36;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd12jpeg_decoder8get_charEPb["X"]=1;

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
  ;
  var __label__;

  var $1;
  $1=$this;
  var $2=$1;
  var $3=$2;
  __ZNSt9type_infoD2Ev($3);
  ;
  return;
}


function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$this;
      var $4=$1;
      (function() { try { __THREW__ = false; return FUNCTION_TABLE[__ZN10__cxxabiv117__class_type_infoD1Ev]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $6=$4;
      __ZdlPv($6);
      ;
      return;
    case 4: 
      var $8=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $9=$8.f0;
      $2=$9;
      var $10=$8.f1;
      $3=$10;
      var $11=$4;
      __ZdlPv($11);
      __label__ = 5; break;
    case 5: 
      var $13=$2;
      var $14=$2;
      var $15=$3;
      var $16=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $14, tempValue);
      var $17=($16.f1 = $15, $16);
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)];
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      $1=$this;
      var $4=$1;
      (function() { try { __THREW__ = false; return FUNCTION_TABLE[__ZN10__cxxabiv120__si_class_type_infoD1Ev]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $6=$4;
      __ZdlPv($6);
      ;
      return;
    case 4: 
      var $8=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $9=$8.f0;
      $2=$9;
      var $10=$8.f1;
      $3=$10;
      var $11=$4;
      __ZdlPv($11);
      __label__ = 5; break;
    case 5: 
      var $13=$2;
      var $14=$2;
      var $15=$3;
      var $16=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $14, tempValue);
      var $17=($16.f1 = $15, $16);
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)];
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
  var __stackBase__  = STACKTOP; STACKTOP += 56; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $thrown_class_type;
      var $info=__stackBase__;
      $2=$this;
      $3=$thrown_type;
      $4=$adjustedPtr;
      var $5=$2;
      var $6=$5;
      var $7=$3;
      var $8=(($6)|0)==(($7)|0);
      if ($8) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      $1=1;
      __label__ = 12; break;
    case 4: 
      var $11=$3;
      var $12=(($11)|0)==0;
      if ($12) { __label__ = 6; break; } else { __label__ = 5; break; }
    case 5: 
      var $14=$11;
      var $15=___dynamic_cast($14, __ZTIN10__cxxabiv116__shim_type_infoE, __ZTIN10__cxxabiv117__class_type_infoE, -1);
      var $16=$15;
      var $19 = $16;__label__ = 7; break;
    case 6: 
      var $19 = 0;__label__ = 7; break;
    case 7: 
      var $19;
      $thrown_class_type=$19;
      var $20=$thrown_class_type;
      var $21=(($20)|0)==0;
      if ($21) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      $1=0;
      __label__ = 12; break;
    case 9: 
      var $24=$info;
      for (var $$dest = $24>>2, $$stop = $$dest + 14; $$dest < $$stop; $$dest++) {
        HEAP32[$$dest] = 0
      };
      var $25=(($info)|0);
      var $26=$thrown_class_type;
      HEAP32[(($25)>>2)]=$26;
      var $27=(($info+8)|0);
      HEAP32[(($27)>>2)]=$5;
      var $28=(($info+12)|0);
      HEAP32[(($28)>>2)]=-1;
      var $29=(($info+48)|0);
      HEAP32[(($29)>>2)]=1;
      var $30=$thrown_class_type;
      var $31=$30;
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32+20)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=$4;
      var $36=HEAP32[(($35)>>2)];
      FUNCTION_TABLE[$34]($30, $info, $36, 1);
      var $37=(($info+24)|0);
      var $38=HEAP32[(($37)>>2)];
      var $39=(($38)|0)==1;
      if ($39) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $41=(($info+16)|0);
      var $42=HEAP32[(($41)>>2)];
      var $43=$4;
      HEAP32[(($43)>>2)]=$42;
      $1=1;
      __label__ = 12; break;
    case 11: 
      $1=0;
      __label__ = 12; break;
    case 12: 
      var $46=$1;
      STACKTOP = __stackBase__;
      return $46;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv["X"]=1;

function __ZN4jpgd33decompress_jpeg_image_from_streamEPNS_19jpeg_decoder_streamEPiS2_S2_i($pStream, $width, $height, $actual_comps, $req_comps) {
  var __stackBase__  = STACKTOP; STACKTOP += 13316; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $decoder=__stackBase__;
      var $7;
      var $8;
      var $9;
      var $image_width;
      var $image_height;
      var $dst_bpl;
      var $pImage_data;
      var $y;
      var $pScan_line=(__stackBase__)+(13308);
      var $scan_line_len=(__stackBase__)+(13312);
      var $pDst;
      var $x;
      var $luma;
      var $x1;
      var $luma2;
      var $YR;
      var $YG;
      var $YB;
      var $x3;
      var $r;
      var $g;
      var $b;
      var $x4;
      $2=$pStream;
      $3=$width;
      $4=$height;
      $5=$actual_comps;
      $6=$req_comps;
      var $10=$5;
      var $11=(($10)|0)!=0;
      if ($11) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: 
      $1=0;
      __label__ = 74; break;
    case 4: 
      var $14=$5;
      HEAP32[(($14)>>2)]=0;
      var $15=$2;
      var $16=(($15)|0)!=0;
      if ($16) { __label__ = 5; break; } else { __label__ = 8; break; }
    case 5: 
      var $18=$3;
      var $19=(($18)|0)!=0;
      if ($19) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: 
      var $21=$4;
      var $22=(($21)|0)!=0;
      if ($22) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: 
      var $24=$6;
      var $25=(($24)|0)!=0;
      if ($25) { __label__ = 9; break; } else { __label__ = 8; break; }
    case 8: 
      $1=0;
      __label__ = 74; break;
    case 9: 
      var $28=$6;
      var $29=(($28)|0)!=1;
      if ($29) { __label__ = 10; break; } else { __label__ = 13; break; }
    case 10: 
      var $31=$6;
      var $32=(($31)|0)!=3;
      if ($32) { __label__ = 11; break; } else { __label__ = 13; break; }
    case 11: 
      var $34=$6;
      var $35=(($34)|0)!=4;
      if ($35) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      $1=0;
      __label__ = 74; break;
    case 13: 
      var $38=$2;
      FUNCTION_TABLE[__ZN4jpgd12jpeg_decoderC1EPNS_19jpeg_decoder_streamE]($decoder, $38);
      var $39 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder14get_error_codeEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: 
      var $41=(($39)|0)!=0;
      if ($41) { __label__ = 15; break; } else { __label__ = 17; break; }
    case 15: 
      $1=0;
      $9=1;
      __label__ = 72; break;
    case 16: 
      var $44=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $45=$44.f0;
      $7=$45;
      var $46=$44.f1;
      $8=$46;
      (function() { try { __THREW__ = false; return FUNCTION_TABLE[__ZN4jpgd12jpeg_decoderD1Ev]($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 73; break; } else { __label__ = 76; break; }
    case 17: 
      var $48 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder9get_widthEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 18; break; } else { __label__ = 16; break; }
    case 18: 
      $image_width=$48;
      var $50 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder10get_heightEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 19; break; } else { __label__ = 16; break; }
    case 19: 
      $image_height=$50;
      var $52=$image_width;
      var $53=$3;
      HEAP32[(($53)>>2)]=$52;
      var $54=$image_height;
      var $55=$4;
      HEAP32[(($55)>>2)]=$54;
      var $56 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder18get_num_componentsEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 20; break; } else { __label__ = 16; break; }
    case 20: 
      var $58=$5;
      HEAP32[(($58)>>2)]=$56;
      var $59 = (function() { try { __THREW__ = false; return __ZN4jpgd12jpeg_decoder14begin_decodingEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 21; break; } else { __label__ = 16; break; }
    case 21: 
      var $61=(($59)|0)!=0;
      if ($61) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: 
      $1=0;
      $9=1;
      __label__ = 72; break;
    case 23: 
      var $64=$image_width;
      var $65=$6;
      var $66=((($64)*($65))|0);
      $dst_bpl=$66;
      var $67=$dst_bpl;
      var $68=$image_height;
      var $69=((($67)*($68))|0);
      var $70 = (function() { try { __THREW__ = false; return __ZN4jpgdL11jpgd_mallocEj($69) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 24; break; } else { __label__ = 16; break; }
    case 24: 
      $pImage_data=$70;
      var $72=$pImage_data;
      var $73=(($72)|0)!=0;
      if ($73) { __label__ = 26; break; } else { __label__ = 25; break; }
    case 25: 
      $1=0;
      $9=1;
      __label__ = 72; break;
    case 26: 
      $y=0;
      __label__ = 27; break;
    case 27: 
      var $77=$y;
      var $78=$image_height;
      var $79=(($77)|0) < (($78)|0);
      if ($79) { __label__ = 28; break; } else { __label__ = 71; break; }
    case 28: 
      var $81 = (function() { try { __THREW__ = false; return __ZN4jpgd12jpeg_decoder6decodeEPPKvPj($decoder, $pScan_line, $scan_line_len) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 29; break; } else { __label__ = 16; break; }
    case 29: 
      var $83=(($81)|0)!=0;
      if ($83) { __label__ = 30; break; } else { __label__ = 32; break; }
    case 30: 
      var $85=$pImage_data;
      (function() { try { __THREW__ = false; return __ZN4jpgdL9jpgd_freeEPv($85) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 31; break; } else { __label__ = 16; break; }
    case 31: 
      $1=0;
      $9=1;
      __label__ = 72; break;
    case 32: 
      var $88=$pImage_data;
      var $89=$y;
      var $90=$dst_bpl;
      var $91=((($89)*($90))|0);
      var $92=(($88+$91)|0);
      $pDst=$92;
      var $93=$6;
      var $94=(($93)|0)==1;
      if ($94) { __label__ = 33; break; } else { __label__ = 35; break; }
    case 33: 
      var $96 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder18get_num_componentsEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 34; break; } else { __label__ = 16; break; }
    case 34: 
      var $98=(($96)|0)==1;
      if ($98) { __label__ = 38; break; } else { __label__ = 35; break; }
    case 35: 
      var $100=$6;
      var $101=(($100)|0)==4;
      if ($101) { __label__ = 36; break; } else { __label__ = 39; break; }
    case 36: 
      var $103 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder18get_num_componentsEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 37; break; } else { __label__ = 16; break; }
    case 37: 
      var $105=(($103)|0)==3;
      if ($105) { __label__ = 38; break; } else { __label__ = 39; break; }
    case 38: 
      var $107=$pDst;
      var $108=HEAP32[(($pScan_line)>>2)];
      var $109=$dst_bpl;
      assert($109 % 1 === 0, 'memcpy given ' + $109 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($107, $108, $109, 1);
      __label__ = 69; break;
    case 39: 
      var $111 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder18get_num_componentsEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 40; break; } else { __label__ = 16; break; }
    case 40: 
      var $113=(($111)|0)==1;
      if ($113) { __label__ = 41; break; } else { __label__ = 53; break; }
    case 41: 
      var $115=$6;
      var $116=(($115)|0)==3;
      if ($116) { __label__ = 42; break; } else { __label__ = 47; break; }
    case 42: 
      $x=0;
      __label__ = 43; break;
    case 43: 
      var $119=$x;
      var $120=$image_width;
      var $121=(($119)|0) < (($120)|0);
      if ($121) { __label__ = 44; break; } else { __label__ = 46; break; }
    case 44: 
      var $123=$x;
      var $124=HEAP32[(($pScan_line)>>2)];
      var $125=(($124+$123)|0);
      var $126=HEAP8[($125)];
      $luma=$126;
      var $127=$luma;
      var $128=$pDst;
      var $129=(($128)|0);
      HEAP8[($129)]=$127;
      var $130=$luma;
      var $131=$pDst;
      var $132=(($131+1)|0);
      HEAP8[($132)]=$130;
      var $133=$luma;
      var $134=$pDst;
      var $135=(($134+2)|0);
      HEAP8[($135)]=$133;
      var $136=$pDst;
      var $137=(($136+3)|0);
      $pDst=$137;
      __label__ = 45; break;
    case 45: 
      var $139=$x;
      var $140=((($139)+(1))|0);
      $x=$140;
      __label__ = 43; break;
    case 46: 
      __label__ = 52; break;
    case 47: 
      $x1=0;
      __label__ = 48; break;
    case 48: 
      var $144=$x1;
      var $145=$image_width;
      var $146=(($144)|0) < (($145)|0);
      if ($146) { __label__ = 49; break; } else { __label__ = 51; break; }
    case 49: 
      var $148=$x1;
      var $149=HEAP32[(($pScan_line)>>2)];
      var $150=(($149+$148)|0);
      var $151=HEAP8[($150)];
      $luma2=$151;
      var $152=$luma2;
      var $153=$pDst;
      var $154=(($153)|0);
      HEAP8[($154)]=$152;
      var $155=$luma2;
      var $156=$pDst;
      var $157=(($156+1)|0);
      HEAP8[($157)]=$155;
      var $158=$luma2;
      var $159=$pDst;
      var $160=(($159+2)|0);
      HEAP8[($160)]=$158;
      var $161=$pDst;
      var $162=(($161+3)|0);
      HEAP8[($162)]=-1;
      var $163=$pDst;
      var $164=(($163+4)|0);
      $pDst=$164;
      __label__ = 50; break;
    case 50: 
      var $166=$x1;
      var $167=((($166)+(1))|0);
      $x1=$167;
      __label__ = 48; break;
    case 51: 
      __label__ = 52; break;
    case 52: 
      __label__ = 68; break;
    case 53: 
      var $171 = (function() { try { __THREW__ = false; return __ZNK4jpgd12jpeg_decoder18get_num_componentsEv($decoder) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 54; break; } else { __label__ = 16; break; }
    case 54: 
      var $173=(($171)|0)==3;
      if ($173) { __label__ = 55; break; } else { __label__ = 67; break; }
    case 55: 
      var $175=$6;
      var $176=(($175)|0)==1;
      if ($176) { __label__ = 56; break; } else { __label__ = 61; break; }
    case 56: 
      $YR=19595;
      $YG=38470;
      $YB=7471;
      $x3=0;
      __label__ = 57; break;
    case 57: 
      var $179=$x3;
      var $180=$image_width;
      var $181=(($179)|0) < (($180)|0);
      if ($181) { __label__ = 58; break; } else { __label__ = 60; break; }
    case 58: 
      var $183=$x3;
      var $184=((($183<<2))|0);
      var $185=(($184)|0);
      var $186=HEAP32[(($pScan_line)>>2)];
      var $187=(($186+$185)|0);
      var $188=HEAPU8[($187)];
      var $189=(($188)&255);
      $r=$189;
      var $190=$x3;
      var $191=((($190<<2))|0);
      var $192=((($191)+(1))|0);
      var $193=HEAP32[(($pScan_line)>>2)];
      var $194=(($193+$192)|0);
      var $195=HEAPU8[($194)];
      var $196=(($195)&255);
      $g=$196;
      var $197=$x3;
      var $198=((($197<<2))|0);
      var $199=((($198)+(2))|0);
      var $200=HEAP32[(($pScan_line)>>2)];
      var $201=(($200+$199)|0);
      var $202=HEAPU8[($201)];
      var $203=(($202)&255);
      $b=$203;
      var $204=$r;
      var $205=((($204)*(19595))|0);
      var $206=$g;
      var $207=((($206)*(38470))|0);
      var $208=((($205)+($207))|0);
      var $209=$b;
      var $210=((($209)*(7471))|0);
      var $211=((($208)+($210))|0);
      var $212=((($211)+(32768))|0);
      var $213=$212 >> 16;
      var $214=(($213) & 255);
      var $215=$pDst;
      var $216=(($215+1)|0);
      $pDst=$216;
      HEAP8[($215)]=$214;
      __label__ = 59; break;
    case 59: 
      var $218=$x3;
      var $219=((($218)+(1))|0);
      $x3=$219;
      __label__ = 57; break;
    case 60: 
      __label__ = 66; break;
    case 61: 
      $x4=0;
      __label__ = 62; break;
    case 62: 
      var $223=$x4;
      var $224=$image_width;
      var $225=(($223)|0) < (($224)|0);
      if ($225) { __label__ = 63; break; } else { __label__ = 65; break; }
    case 63: 
      var $227=$x4;
      var $228=((($227<<2))|0);
      var $229=(($228)|0);
      var $230=HEAP32[(($pScan_line)>>2)];
      var $231=(($230+$229)|0);
      var $232=HEAP8[($231)];
      var $233=$pDst;
      var $234=(($233)|0);
      HEAP8[($234)]=$232;
      var $235=$x4;
      var $236=((($235<<2))|0);
      var $237=((($236)+(1))|0);
      var $238=HEAP32[(($pScan_line)>>2)];
      var $239=(($238+$237)|0);
      var $240=HEAP8[($239)];
      var $241=$pDst;
      var $242=(($241+1)|0);
      HEAP8[($242)]=$240;
      var $243=$x4;
      var $244=((($243<<2))|0);
      var $245=((($244)+(2))|0);
      var $246=HEAP32[(($pScan_line)>>2)];
      var $247=(($246+$245)|0);
      var $248=HEAP8[($247)];
      var $249=$pDst;
      var $250=(($249+2)|0);
      HEAP8[($250)]=$248;
      var $251=$pDst;
      var $252=(($251+3)|0);
      $pDst=$252;
      __label__ = 64; break;
    case 64: 
      var $254=$x4;
      var $255=((($254)+(1))|0);
      $x4=$255;
      __label__ = 62; break;
    case 65: 
      __label__ = 66; break;
    case 66: 
      __label__ = 67; break;
    case 67: 
      __label__ = 68; break;
    case 68: 
      __label__ = 69; break;
    case 69: 
      __label__ = 70; break;
    case 70: 
      var $262=$y;
      var $263=((($262)+(1))|0);
      $y=$263;
      __label__ = 27; break;
    case 71: 
      var $265=$pImage_data;
      $1=$265;
      $9=1;
      __label__ = 72; break;
    case 72: 
      FUNCTION_TABLE[__ZN4jpgd12jpeg_decoderD1Ev]($decoder);
      __label__ = 74; break;
    case 73: 
      __label__ = 75; break;
    case 74: 
      var $269=$1;
      STACKTOP = __stackBase__;
      return $269;
    case 75: 
      var $271=$7;
      var $272=$8;
      var $273=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $271, tempValue);
      var $274=($273.f1 = $272, $273);
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)];
    case 76: 
      var $276=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[0]);
      __ZSt9terminatev();
      throw "Reached an unreachable!"
    default: assert(0, "bad label: " + __label__);
  }
}
__ZN4jpgd33decompress_jpeg_image_from_streamEPNS_19jpeg_decoder_streamEPiS2_S2_i["X"]=1;

function __ZN4jpgd31decompress_jpeg_image_from_fileEPKcPiS2_S2_i($pSrc_filename, $width, $height, $actual_comps, $req_comps) {
  var __stackBase__  = STACKTOP; STACKTOP += 12; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      var $6;
      var $file_stream=__stackBase__;
      var $7;
      var $8;
      var $9;
      $2=$pSrc_filename;
      $3=$width;
      $4=$height;
      $5=$actual_comps;
      $6=$req_comps;
      FUNCTION_TABLE[__ZN4jpgd24jpeg_decoder_file_streamC1Ev]($file_stream);
      var $10=$2;
      var $11 = (function() { try { __THREW__ = false; return __ZN4jpgd24jpeg_decoder_file_stream4openEPKc($file_stream, $10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: 
      if ($11) { __label__ = 6; break; } else { __label__ = 4; break; }
    case 4: 
      $1=0;
      $9=1;
      __label__ = 8; break;
    case 5: 
      var $15=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[]);
      var $16=$15.f0;
      $7=$16;
      var $17=$15.f1;
      $8=$17;
      (function() { try { __THREW__ = false; return FUNCTION_TABLE[__ZN4jpgd24jpeg_decoder_file_streamD1Ev]($file_stream) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 9; break; } else { __label__ = 11; break; }
    case 6: 
      var $19=$file_stream;
      var $20=$3;
      var $21=$4;
      var $22=$5;
      var $23=$6;
      var $24 = (function() { try { __THREW__ = false; return __ZN4jpgd33decompress_jpeg_image_from_streamEPNS_19jpeg_decoder_streamEPiS2_S2_i($19, $20, $21, $22, $23) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; Module.print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })();if (!__THREW__) { __label__ = 7; break; } else { __label__ = 5; break; }
    case 7: 
      $1=$24;
      $9=1;
      __label__ = 8; break;
    case 8: 
      FUNCTION_TABLE[__ZN4jpgd24jpeg_decoder_file_streamD1Ev]($file_stream);
      var $27=$1;
      STACKTOP = __stackBase__;
      return $27;
    case 9: 
      __label__ = 10; break;
    case 10: 
      var $30=$7;
      var $31=$8;
      var $32=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $30, tempValue);
      var $33=($32.f1 = $31, $32);
      Module.print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)];
    case 11: 
      var $35=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)],[0]);
      __ZSt9terminatev();
      throw "Reached an unreachable!"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$this;
      $2=$info;
      $3=$adjustedPtr;
      $4=$path_below;
      var $5=$1;
      var $6=$2;
      var $7=(($6+16)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=(($8)|0)==0;
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $11=$3;
      var $12=$2;
      var $13=(($12+16)|0);
      HEAP32[(($13)>>2)]=$11;
      var $14=$4;
      var $15=$2;
      var $16=(($15+24)|0);
      HEAP32[(($16)>>2)]=$14;
      var $17=$2;
      var $18=(($17+36)|0);
      HEAP32[(($18)>>2)]=1;
      __label__ = 10; break;
    case 4: 
      var $20=$2;
      var $21=(($20+16)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=$3;
      var $24=(($22)|0)==(($23)|0);
      if ($24) { __label__ = 5; break; } else { __label__ = 8; break; }
    case 5: 
      var $26=$2;
      var $27=(($26+24)|0);
      var $28=HEAP32[(($27)>>2)];
      var $29=(($28)|0)==2;
      if ($29) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $31=$4;
      var $32=$2;
      var $33=(($32+24)|0);
      HEAP32[(($33)>>2)]=$31;
      __label__ = 7; break;
    case 7: 
      __label__ = 9; break;
    case 8: 
      var $36=$2;
      var $37=(($36+36)|0);
      var $38=HEAP32[(($37)>>2)];
      var $39=((($38)+(1))|0);
      HEAP32[(($37)>>2)]=$39;
      var $40=$2;
      var $41=(($40+24)|0);
      HEAP32[(($41)>>2)]=2;
      var $42=$2;
      var $43=(($42+54)|0);
      HEAP8[($43)]=1;
      __label__ = 9; break;
    case 9: 
      __label__ = 10; break;
    case 10: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi["X"]=1;

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      $1=$this;
      $2=$info;
      $3=$dst_ptr;
      $4=$current_ptr;
      $5=$path_below;
      var $6=$1;
      var $7=$2;
      var $8=(($7+53)|0);
      HEAP8[($8)]=1;
      var $9=$4;
      var $10=$2;
      var $11=(($10+4)|0);
      var $12=HEAP32[(($11)>>2)];
      var $13=(($9)|0)==(($12)|0);
      if ($13) { __label__ = 3; break; } else { __label__ = 18; break; }
    case 3: 
      var $15=$2;
      var $16=(($15+52)|0);
      HEAP8[($16)]=1;
      var $17=$2;
      var $18=(($17+16)|0);
      var $19=HEAP32[(($18)>>2)];
      var $20=(($19)|0)==0;
      if ($20) { __label__ = 4; break; } else { __label__ = 8; break; }
    case 4: 
      var $22=$3;
      var $23=$2;
      var $24=(($23+16)|0);
      HEAP32[(($24)>>2)]=$22;
      var $25=$5;
      var $26=$2;
      var $27=(($26+24)|0);
      HEAP32[(($27)>>2)]=$25;
      var $28=$2;
      var $29=(($28+36)|0);
      HEAP32[(($29)>>2)]=1;
      var $30=$2;
      var $31=(($30+48)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32)|0)==1;
      if ($33) { __label__ = 5; break; } else { __label__ = 7; break; }
    case 5: 
      var $35=$2;
      var $36=(($35+24)|0);
      var $37=HEAP32[(($36)>>2)];
      var $38=(($37)|0)==1;
      if ($38) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: 
      var $40=$2;
      var $41=(($40+54)|0);
      HEAP8[($41)]=1;
      __label__ = 7; break;
    case 7: 
      __label__ = 17; break;
    case 8: 
      var $44=$2;
      var $45=(($44+16)|0);
      var $46=HEAP32[(($45)>>2)];
      var $47=$3;
      var $48=(($46)|0)==(($47)|0);
      if ($48) { __label__ = 9; break; } else { __label__ = 15; break; }
    case 9: 
      var $50=$2;
      var $51=(($50+24)|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=(($52)|0)==2;
      if ($53) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $55=$5;
      var $56=$2;
      var $57=(($56+24)|0);
      HEAP32[(($57)>>2)]=$55;
      __label__ = 11; break;
    case 11: 
      var $59=$2;
      var $60=(($59+48)|0);
      var $61=HEAP32[(($60)>>2)];
      var $62=(($61)|0)==1;
      if ($62) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: 
      var $64=$2;
      var $65=(($64+24)|0);
      var $66=HEAP32[(($65)>>2)];
      var $67=(($66)|0)==1;
      if ($67) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      var $69=$2;
      var $70=(($69+54)|0);
      HEAP8[($70)]=1;
      __label__ = 14; break;
    case 14: 
      __label__ = 16; break;
    case 15: 
      var $73=$2;
      var $74=(($73+36)|0);
      var $75=HEAP32[(($74)>>2)];
      var $76=((($75)+(1))|0);
      HEAP32[(($74)>>2)]=$76;
      var $77=$2;
      var $78=(($77+54)|0);
      HEAP8[($78)]=1;
      __label__ = 16; break;
    case 16: 
      __label__ = 17; break;
    case 17: 
      __label__ = 18; break;
    case 18: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i["X"]=1;

function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($this, $info, $current_ptr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$this;
      $2=$info;
      $3=$current_ptr;
      $4=$path_below;
      var $5=$1;
      var $6=$3;
      var $7=$2;
      var $8=(($7+4)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($6)|0)==(($9)|0);
      if ($10) { __label__ = 3; break; } else { __label__ = 6; break; }
    case 3: 
      var $12=$2;
      var $13=(($12+28)|0);
      var $14=HEAP32[(($13)>>2)];
      var $15=(($14)|0)!=1;
      if ($15) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      var $17=$4;
      var $18=$2;
      var $19=(($18+28)|0);
      HEAP32[(($19)>>2)]=$17;
      __label__ = 5; break;
    case 5: 
      __label__ = 6; break;
    case 6: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$this;
      $2=$info;
      $3=$adjustedPtr;
      $4=$path_below;
      var $5=$1;
      var $6=$2;
      var $7=(($6+8)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=(($5)|0)==(($8)|0);
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $11=$2;
      var $12=$3;
      var $13=$4;
      __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($5, $11, $12, $13);
      __label__ = 4; break;
    case 4: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$this;
      $2=$info;
      $3=$adjustedPtr;
      $4=$path_below;
      var $5=$1;
      var $6=$5;
      var $7=$2;
      var $8=(($7+8)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($6)|0)==(($9)|0);
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $12=$5;
      var $13=$2;
      var $14=$3;
      var $15=$4;
      __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($12, $13, $14, $15);
      __label__ = 5; break;
    case 4: 
      var $17=(($5+8)|0);
      var $18=HEAP32[(($17)>>2)];
      var $19=$18;
      var $20=HEAP32[(($19)>>2)];
      var $21=(($20+20)|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=$2;
      var $24=$3;
      var $25=$4;
      FUNCTION_TABLE[$22]($18, $23, $24, $25);
      __label__ = 5; break;
    case 5: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
  var __stackBase__  = STACKTOP; STACKTOP += 56; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $vtable;
      var $offset_to_derived;
      var $dynamic_ptr;
      var $dynamic_type;
      var $dst_ptr;
      var $info=__stackBase__;
      $1=$static_ptr;
      $2=$static_type;
      $3=$dst_type;
      $4=$src2dst_offset;
      var $5=$1;
      var $6=$5;
      var $7=HEAP32[(($6)>>2)];
      $vtable=$7;
      var $8=$vtable;
      var $9=((($8)-(8))|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=$10;
      $offset_to_derived=$11;
      var $12=$1;
      var $13=$offset_to_derived;
      var $14=(($12+$13)|0);
      $dynamic_ptr=$14;
      var $15=$vtable;
      var $16=((($15)-(4))|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=$17;
      $dynamic_type=$18;
      $dst_ptr=0;
      var $19=(($info)|0);
      var $20=$3;
      HEAP32[(($19)>>2)]=$20;
      var $21=(($info+4)|0);
      var $22=$1;
      HEAP32[(($21)>>2)]=$22;
      var $23=(($info+8)|0);
      var $24=$2;
      HEAP32[(($23)>>2)]=$24;
      var $25=(($info+12)|0);
      var $26=$4;
      HEAP32[(($25)>>2)]=$26;
      var $27=(($info+16)|0);
      HEAP32[(($27)>>2)]=0;
      var $28=(($info+20)|0);
      HEAP32[(($28)>>2)]=0;
      var $29=(($info+24)|0);
      HEAP32[(($29)>>2)]=0;
      var $30=(($info+28)|0);
      HEAP32[(($30)>>2)]=0;
      var $31=(($info+32)|0);
      HEAP32[(($31)>>2)]=0;
      var $32=(($info+36)|0);
      HEAP32[(($32)>>2)]=0;
      var $33=(($info+40)|0);
      HEAP32[(($33)>>2)]=0;
      var $34=(($info+44)|0);
      HEAP32[(($34)>>2)]=0;
      var $35=(($info+48)|0);
      HEAP32[(($35)>>2)]=0;
      var $36=(($info+52)|0);
      HEAP8[($36)]=0;
      var $37=(($info+53)|0);
      HEAP8[($37)]=0;
      var $38=(($info+54)|0);
      HEAP8[($38)]=0;
      var $39=$dynamic_type;
      var $40=$3;
      var $41=(($39)|0)==(($40)|0);
      if ($41) { __label__ = 3; break; } else { __label__ = 6; break; }
    case 3: 
      var $43=(($info+48)|0);
      HEAP32[(($43)>>2)]=1;
      var $44=$dynamic_type;
      var $45=$44;
      var $46=HEAP32[(($45)>>2)];
      var $47=(($46+12)|0);
      var $48=HEAP32[(($47)>>2)];
      var $49=$dynamic_ptr;
      var $50=$dynamic_ptr;
      FUNCTION_TABLE[$48]($44, $info, $49, $50, 1);
      var $51=(($info+24)|0);
      var $52=HEAP32[(($51)>>2)];
      var $53=(($52)|0)==1;
      if ($53) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: 
      var $55=$dynamic_ptr;
      $dst_ptr=$55;
      __label__ = 5; break;
    case 5: 
      __label__ = 19; break;
    case 6: 
      var $58=$dynamic_type;
      var $59=$58;
      var $60=HEAP32[(($59)>>2)];
      var $61=(($60+16)|0);
      var $62=HEAP32[(($61)>>2)];
      var $63=$dynamic_ptr;
      FUNCTION_TABLE[$62]($58, $info, $63, 1);
      var $64=(($info+36)|0);
      var $65=HEAP32[(($64)>>2)];
      if ((($65)|0) == 0) {
        __label__ = 7; break;
      }
      else if ((($65)|0) == 1) {
        __label__ = 12; break;
      }
      else {
      __label__ = 18; break;
      }
      
    case 7: 
      var $67=(($info+40)|0);
      var $68=HEAP32[(($67)>>2)];
      var $69=(($68)|0)==1;
      if ($69) { __label__ = 8; break; } else { __label__ = 11; break; }
    case 8: 
      var $71=(($info+28)|0);
      var $72=HEAP32[(($71)>>2)];
      var $73=(($72)|0)==1;
      if ($73) { __label__ = 9; break; } else { __label__ = 11; break; }
    case 9: 
      var $75=(($info+32)|0);
      var $76=HEAP32[(($75)>>2)];
      var $77=(($76)|0)==1;
      if ($77) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: 
      var $79=(($info+20)|0);
      var $80=HEAP32[(($79)>>2)];
      $dst_ptr=$80;
      __label__ = 11; break;
    case 11: 
      __label__ = 18; break;
    case 12: 
      var $83=(($info+24)|0);
      var $84=HEAP32[(($83)>>2)];
      var $85=(($84)|0)==1;
      if ($85) { __label__ = 16; break; } else { __label__ = 13; break; }
    case 13: 
      var $87=(($info+40)|0);
      var $88=HEAP32[(($87)>>2)];
      var $89=(($88)|0)==0;
      if ($89) { __label__ = 14; break; } else { __label__ = 17; break; }
    case 14: 
      var $91=(($info+28)|0);
      var $92=HEAP32[(($91)>>2)];
      var $93=(($92)|0)==1;
      if ($93) { __label__ = 15; break; } else { __label__ = 17; break; }
    case 15: 
      var $95=(($info+32)|0);
      var $96=HEAP32[(($95)>>2)];
      var $97=(($96)|0)==1;
      if ($97) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: 
      var $99=(($info+16)|0);
      var $100=HEAP32[(($99)>>2)];
      $dst_ptr=$100;
      __label__ = 17; break;
    case 17: 
      __label__ = 18; break;
    case 18: 
      __label__ = 19; break;
    case 19: 
      var $104=$dst_ptr;
      STACKTOP = __stackBase__;
      return $104;
    default: assert(0, "bad label: " + __label__);
  }
}
___dynamic_cast["X"]=1;

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi($this, $info, $current_ptr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $is_dst_type_derived_from_static_type;
      var $does_dst_type_point_to_our_static_type;
      $1=$this;
      $2=$info;
      $3=$current_ptr;
      $4=$path_below;
      var $5=$1;
      var $6=$5;
      var $7=$2;
      var $8=(($7+8)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($6)|0)==(($9)|0);
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $12=$5;
      var $13=$2;
      var $14=$3;
      var $15=$4;
      __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($12, $13, $14, $15);
      __label__ = 28; break;
    case 4: 
      var $17=$5;
      var $18=$2;
      var $19=(($18)|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=(($17)|0)==(($20)|0);
      if ($21) { __label__ = 5; break; } else { __label__ = 26; break; }
    case 5: 
      var $23=$3;
      var $24=$2;
      var $25=(($24+16)|0);
      var $26=HEAP32[(($25)>>2)];
      var $27=(($23)|0)==(($26)|0);
      if ($27) { __label__ = 7; break; } else { __label__ = 6; break; }
    case 6: 
      var $29=$3;
      var $30=$2;
      var $31=(($30+20)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($29)|0)==(($32)|0);
      if ($33) { __label__ = 7; break; } else { __label__ = 10; break; }
    case 7: 
      var $35=$4;
      var $36=(($35)|0)==1;
      if ($36) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $38=$2;
      var $39=(($38+32)|0);
      HEAP32[(($39)>>2)]=1;
      __label__ = 9; break;
    case 9: 
      __label__ = 25; break;
    case 10: 
      var $42=$4;
      var $43=$2;
      var $44=(($43+32)|0);
      HEAP32[(($44)>>2)]=$42;
      var $45=$2;
      var $46=(($45+44)|0);
      var $47=HEAP32[(($46)>>2)];
      var $48=(($47)|0)!=4;
      if ($48) { __label__ = 11; break; } else { __label__ = 24; break; }
    case 11: 
      $is_dst_type_derived_from_static_type=0;
      $does_dst_type_point_to_our_static_type=0;
      var $50=$2;
      var $51=(($50+52)|0);
      HEAP8[($51)]=0;
      var $52=$2;
      var $53=(($52+53)|0);
      HEAP8[($53)]=0;
      var $54=(($5+8)|0);
      var $55=HEAP32[(($54)>>2)];
      var $56=$55;
      var $57=HEAP32[(($56)>>2)];
      var $58=(($57+12)|0);
      var $59=HEAP32[(($58)>>2)];
      var $60=$2;
      var $61=$3;
      var $62=$3;
      FUNCTION_TABLE[$59]($55, $60, $61, $62, 1);
      var $63=$2;
      var $64=(($63+53)|0);
      var $65=HEAP8[($64)];
      var $66=(($65) & 1);
      if ($66) { __label__ = 12; break; } else { __label__ = 15; break; }
    case 12: 
      $is_dst_type_derived_from_static_type=1;
      var $68=$2;
      var $69=(($68+52)|0);
      var $70=HEAP8[($69)];
      var $71=(($70) & 1);
      if ($71) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: 
      $does_dst_type_point_to_our_static_type=1;
      __label__ = 14; break;
    case 14: 
      __label__ = 15; break;
    case 15: 
      var $75=$does_dst_type_point_to_our_static_type;
      var $76=(($75) & 1);
      if ($76) { __label__ = 20; break; } else { __label__ = 16; break; }
    case 16: 
      var $78=$3;
      var $79=$2;
      var $80=(($79+20)|0);
      HEAP32[(($80)>>2)]=$78;
      var $81=$2;
      var $82=(($81+40)|0);
      var $83=HEAP32[(($82)>>2)];
      var $84=((($83)+(1))|0);
      HEAP32[(($82)>>2)]=$84;
      var $85=$2;
      var $86=(($85+36)|0);
      var $87=HEAP32[(($86)>>2)];
      var $88=(($87)|0)==1;
      if ($88) { __label__ = 17; break; } else { __label__ = 19; break; }
    case 17: 
      var $90=$2;
      var $91=(($90+24)|0);
      var $92=HEAP32[(($91)>>2)];
      var $93=(($92)|0)==2;
      if ($93) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: 
      var $95=$2;
      var $96=(($95+54)|0);
      HEAP8[($96)]=1;
      __label__ = 19; break;
    case 19: 
      __label__ = 20; break;
    case 20: 
      var $99=$is_dst_type_derived_from_static_type;
      var $100=(($99) & 1);
      if ($100) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: 
      var $102=$2;
      var $103=(($102+44)|0);
      HEAP32[(($103)>>2)]=3;
      __label__ = 23; break;
    case 22: 
      var $105=$2;
      var $106=(($105+44)|0);
      HEAP32[(($106)>>2)]=4;
      __label__ = 23; break;
    case 23: 
      __label__ = 24; break;
    case 24: 
      __label__ = 25; break;
    case 25: 
      __label__ = 27; break;
    case 26: 
      var $111=(($5+8)|0);
      var $112=HEAP32[(($111)>>2)];
      var $113=$112;
      var $114=HEAP32[(($113)>>2)];
      var $115=(($114+16)|0);
      var $116=HEAP32[(($115)>>2)];
      var $117=$2;
      var $118=$3;
      var $119=$4;
      FUNCTION_TABLE[$116]($112, $117, $118, $119);
      __label__ = 27; break;
    case 27: 
      __label__ = 28; break;
    case 28: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi["X"]=1;

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi($this, $info, $current_ptr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      $1=$this;
      $2=$info;
      $3=$current_ptr;
      $4=$path_below;
      var $5=$1;
      var $6=$2;
      var $7=(($6+8)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=(($5)|0)==(($8)|0);
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $11=$2;
      var $12=$3;
      var $13=$4;
      __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($5, $11, $12, $13);
      __label__ = 16; break;
    case 4: 
      var $15=$2;
      var $16=(($15)|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=(($5)|0)==(($17)|0);
      if ($18) { __label__ = 5; break; } else { __label__ = 15; break; }
    case 5: 
      var $20=$3;
      var $21=$2;
      var $22=(($21+16)|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=(($20)|0)==(($23)|0);
      if ($24) { __label__ = 7; break; } else { __label__ = 6; break; }
    case 6: 
      var $26=$3;
      var $27=$2;
      var $28=(($27+20)|0);
      var $29=HEAP32[(($28)>>2)];
      var $30=(($26)|0)==(($29)|0);
      if ($30) { __label__ = 7; break; } else { __label__ = 10; break; }
    case 7: 
      var $32=$4;
      var $33=(($32)|0)==1;
      if ($33) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: 
      var $35=$2;
      var $36=(($35+32)|0);
      HEAP32[(($36)>>2)]=1;
      __label__ = 9; break;
    case 9: 
      __label__ = 14; break;
    case 10: 
      var $39=$4;
      var $40=$2;
      var $41=(($40+32)|0);
      HEAP32[(($41)>>2)]=$39;
      var $42=$3;
      var $43=$2;
      var $44=(($43+20)|0);
      HEAP32[(($44)>>2)]=$42;
      var $45=$2;
      var $46=(($45+40)|0);
      var $47=HEAP32[(($46)>>2)];
      var $48=((($47)+(1))|0);
      HEAP32[(($46)>>2)]=$48;
      var $49=$2;
      var $50=(($49+36)|0);
      var $51=HEAP32[(($50)>>2)];
      var $52=(($51)|0)==1;
      if ($52) { __label__ = 11; break; } else { __label__ = 13; break; }
    case 11: 
      var $54=$2;
      var $55=(($54+24)|0);
      var $56=HEAP32[(($55)>>2)];
      var $57=(($56)|0)==2;
      if ($57) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: 
      var $59=$2;
      var $60=(($59+54)|0);
      HEAP8[($60)]=1;
      __label__ = 13; break;
    case 13: 
      var $62=$2;
      var $63=(($62+44)|0);
      HEAP32[(($63)>>2)]=4;
      __label__ = 14; break;
    case 14: 
      __label__ = 15; break;
    case 15: 
      __label__ = 16; break;
    case 16: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi["X"]=1;

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      $1=$this;
      $2=$info;
      $3=$dst_ptr;
      $4=$current_ptr;
      $5=$path_below;
      var $6=$1;
      var $7=$6;
      var $8=$2;
      var $9=(($8+8)|0);
      var $10=HEAP32[(($9)>>2)];
      var $11=(($7)|0)==(($10)|0);
      if ($11) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $13=$6;
      var $14=$2;
      var $15=$3;
      var $16=$4;
      var $17=$5;
      __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($13, $14, $15, $16, $17);
      __label__ = 5; break;
    case 4: 
      var $19=(($6+8)|0);
      var $20=HEAP32[(($19)>>2)];
      var $21=$20;
      var $22=HEAP32[(($21)>>2)];
      var $23=(($22+12)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=$2;
      var $26=$3;
      var $27=$4;
      var $28=$5;
      FUNCTION_TABLE[$24]($20, $25, $26, $27, $28);
      __label__ = 5; break;
    case 5: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $5;
      $1=$this;
      $2=$info;
      $3=$dst_ptr;
      $4=$current_ptr;
      $5=$path_below;
      var $6=$1;
      var $7=$2;
      var $8=(($7+8)|0);
      var $9=HEAP32[(($8)>>2)];
      var $10=(($6)|0)==(($9)|0);
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: 
      var $12=$2;
      var $13=$3;
      var $14=$4;
      var $15=$5;
      __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($6, $12, $13, $14, $15);
      __label__ = 4; break;
    case 4: 
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _malloc($bytes) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $mem;
      var $nb;
      var $idx;
      var $smallbits;
      var $b;
      var $p;
      var $F;
      var $b1;
      var $p2;
      var $r;
      var $rsize;
      var $i;
      var $leftbits;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $F3;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F4;
      var $rsize5;
      var $p6;
      var $r7;
      var $dvs;
      var $rsize8;
      var $p9;
      var $r10;
      $1=$bytes;
      var $2=$1; //@line 4628 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)>>>0) <= 244; //@line 4628 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($3) { __label__ = 3; break; } else { __label__ = 38; break; } //@line 4628 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=$1; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=(($5)>>>0) < 11; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($6) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $14 = 16;__label__ = 6; break; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $9=$1; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=((($9)+(4))|0); //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=((($10)+(7))|0); //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=$11 & -8; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14 = $12;__label__ = 6; break; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $14; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nb=$14; //@line 4631 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$nb; //@line 4632 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=$15 >>> 3; //@line 4632 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $idx=$16; //@line 4632 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=HEAPU32[((((__gm_)|0))>>2)]; //@line 4633 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=$idx; //@line 4633 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=$17 >>> (($18)>>>0); //@line 4633 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $smallbits=$19; //@line 4633 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=$smallbits; //@line 4635 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=$20 & 3; //@line 4635 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=(($21)|0)!=0; //@line 4635 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($22) { __label__ = 7; break; } else { __label__ = 14; break; } //@line 4635 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $24=$smallbits; //@line 4637 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=$24 ^ -1; //@line 4637 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=$25 & 1; //@line 4637 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$idx; //@line 4637 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=((($27)+($26))|0); //@line 4637 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $idx=$28; //@line 4637 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=$idx; //@line 4638 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=$29 << 1; //@line 4638 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=((((__gm_+40)|0)+($30<<2))|0); //@line 4638 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=$31; //@line 4638 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 4638 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $b=$33; //@line 4638 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=$b; //@line 4639 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=(($34+8)|0); //@line 4639 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($35)>>2)]; //@line 4639 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$36; //@line 4639 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=$p; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=(($37+8)|0); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=HEAP32[(($38)>>2)]; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$39; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=$b; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$F; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=(($40)|0)==(($41)|0); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($42) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $44=$idx; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=1 << $44; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=$45 ^ -1; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=HEAP32[((((__gm_)|0))>>2)]; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $48=$47 & $46; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$48; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $50=$F; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $53=(($51)>>>0) >= (($52)>>>0); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=(($53)&1); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=(($54)==(1)); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=(($55)|0)!=0; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($56) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $58=$F; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=$b; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=(($59+8)|0); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($60)>>2)]=$58; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=$b; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $62=$F; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=(($62+12)|0); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($63)>>2)]=$61; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      _abort(); //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4641 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      __label__ = 13; break;
    case 13: 
      var $67=$idx; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=$67 << 3; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=$68 | 1; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=$69 | 2; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=$p; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $72=(($71+4)|0); //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($72)>>2)]=$70; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73=$p; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=$73; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=$idx; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=$75 << 3; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $77=(($74+$76)|0); //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $78=$77; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $79=(($78+4)|0); //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=HEAP32[(($79)>>2)]; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=$80 | 1; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($79)>>2)]=$81; //@line 4642 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=$p; //@line 4643 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=$82; //@line 4643 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=(($83+8)|0); //@line 4643 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$84; //@line 4643 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4645 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $86=$nb; //@line 4648 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4648 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=(($86)>>>0) > (($87)>>>0); //@line 4648 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($88) { __label__ = 15; break; } else { __label__ = 36; break; } //@line 4648 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $90=$smallbits; //@line 4649 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=(($90)|0)!=0; //@line 4649 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($91) { __label__ = 16; break; } else { __label__ = 31; break; } //@line 4649 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $93=$smallbits; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $94=$idx; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=$93 << $94; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $96=$idx; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $97=1 << $96; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=$97 << 1; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $99=$idx; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $100=1 << $99; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=$100 << 1; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=(((-$101))|0); //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=$98 | $102; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $104=$95 & $103; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $leftbits=$104; //@line 4653 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $105=$leftbits; //@line 4654 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $106=$leftbits; //@line 4654 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=(((-$106))|0); //@line 4654 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=$105 & $107; //@line 4654 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $leastbit=$108; //@line 4654 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $109=$leastbit; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $110=((($109)-(1))|0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$110; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $111=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $112=$111 >>> 12; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=$112 & 16; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$113; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $114=$K; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$114; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $115=$K; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $116=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $117=$116 >>> (($115)>>>0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$117; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $118=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $119=$118 >>> 5; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $120=$119 & 8; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$120; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $121=$N; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $122=((($121)+($120))|0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$122; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $123=$K; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $124=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $125=$124 >>> (($123)>>>0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$125; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $126=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $127=$126 >>> 2; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=$127 & 4; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$128; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=$N; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $130=((($129)+($128))|0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$130; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $131=$K; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $132=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $133=$132 >>> (($131)>>>0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$133; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $134=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=$134 >>> 1; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $136=$135 & 2; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$136; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $137=$N; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $138=((($137)+($136))|0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$138; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $139=$K; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $140=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $141=$140 >>> (($139)>>>0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$141; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $142=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $143=$142 >>> 1; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $144=$143 & 1; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$144; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $145=$N; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $146=((($145)+($144))|0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$146; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $147=$K; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $148=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $149=$148 >>> (($147)>>>0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$149; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $150=$N; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $151=$Y; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $152=((($150)+($151))|0); //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $i=$152; //@line 4655 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=$i; //@line 4656 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=$153 << 1; //@line 4656 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $155=((((__gm_+40)|0)+($154<<2))|0); //@line 4656 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $156=$155; //@line 4656 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 4656 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $b1=$157; //@line 4656 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $158=$b1; //@line 4657 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $159=(($158+8)|0); //@line 4657 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $160=HEAP32[(($159)>>2)]; //@line 4657 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p2=$160; //@line 4657 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $161=$p2; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $162=(($161+8)|0); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $163=HEAP32[(($162)>>2)]; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F3=$163; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $164=$b1; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $165=$F3; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $166=(($164)|0)==(($165)|0); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($166) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $168=$i; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $169=1 << $168; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $170=$169 ^ -1; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $171=HEAP32[((((__gm_)|0))>>2)]; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $172=$171 & $170; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$172; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 22; break; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $174=$F3; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $175=$174; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $176=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $177=(($175)>>>0) >= (($176)>>>0); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $178=(($177)&1); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $179=(($178)==(1)); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $180=(($179)|0)!=0; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($180) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $182=$F3; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183=$b1; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $184=(($183+8)|0); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($184)>>2)]=$182; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $185=$b1; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $186=$F3; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $187=(($186+12)|0); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($187)>>2)]=$185; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      _abort(); //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4659 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 21: 
      __label__ = 22; break;
    case 22: 
      var $191=$i; //@line 4660 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $192=$191 << 3; //@line 4660 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $193=$nb; //@line 4660 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $194=((($192)-($193))|0); //@line 4660 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize=$194; //@line 4660 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $195=$nb; //@line 4665 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $196=$195 | 1; //@line 4665 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $197=$196 | 2; //@line 4665 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $198=$p2; //@line 4665 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $199=(($198+4)|0); //@line 4665 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($199)>>2)]=$197; //@line 4665 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $200=$p2; //@line 4666 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $201=$200; //@line 4666 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $202=$nb; //@line 4666 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $203=(($201+$202)|0); //@line 4666 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $204=$203; //@line 4666 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $r=$204; //@line 4666 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $205=$rsize; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $206=$205 | 1; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=$r; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=(($207+4)|0); //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($208)>>2)]=$206; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $209=$rsize; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $210=$r; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $211=$210; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $212=$rsize; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $213=(($211+$212)|0); //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $214=$213; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $215=(($214)|0); //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($215)>>2)]=$209; //@line 4667 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $216=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $DVS=$216; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $217=$DVS; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $218=(($217)|0)!=0; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($218) { __label__ = 23; break; } else { __label__ = 30; break; } //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $220=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $DV=$220; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $221=$DVS; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $222=$221 >>> 3; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I=$222; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $223=$I; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $224=$223 << 1; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $225=((((__gm_+40)|0)+($224<<2))|0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $226=$225; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $227=$226; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B=$227; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $228=$B; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F4=$228; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $229=HEAP32[((((__gm_)|0))>>2)]; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230=$I; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $231=1 << $230; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $232=$229 & $231; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $233=(($232)|0)!=0; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($233) { __label__ = 25; break; } else { __label__ = 24; break; } //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $235=$I; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $236=1 << $235; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $237=HEAP32[((((__gm_)|0))>>2)]; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $238=$237 | $236; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$238; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 29; break; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $240=$B; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $241=(($240+8)|0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $242=HEAP32[(($241)>>2)]; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $243=$242; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $244=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $245=(($243)>>>0) >= (($244)>>>0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $246=(($245)&1); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=(($246)==(1)); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $248=(($247)|0)!=0; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($248) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $250=$B; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $251=(($250+8)|0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $252=HEAP32[(($251)>>2)]; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F4=$252; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 27: 
      _abort(); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break;
    case 29: 
      var $256=$DV; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $257=$B; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $258=(($257+8)|0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($258)>>2)]=$256; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $259=$DV; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $260=$F4; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $261=(($260+12)|0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($261)>>2)]=$259; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $262=$F4; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $263=$DV; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $264=(($263+8)|0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($264)>>2)]=$262; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $265=$B; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $266=$DV; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $267=(($266+12)|0); //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($267)>>2)]=$265; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $269=$rsize; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$269; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $270=$r; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$270; //@line 4668 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $271=$p2; //@line 4670 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $272=$271; //@line 4670 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $273=(($272+8)|0); //@line 4670 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$273; //@line 4670 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $275=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $276=(($275)|0)!=0; //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($276) { __label__ = 32; break; } else { __label__ = 34; break; } //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $278=$nb; //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=_tmalloc_small(__gm_, $278); //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$279; //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $280=(($279)|0)!=0; //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($280) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 4675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      __label__ = 54; break; //@line 4677 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      __label__ = 35; break;
    case 35: 
      __label__ = 36; break; //@line 4679 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      __label__ = 37; break;
    case 37: 
      __label__ = 45; break; //@line 4680 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $287=$1; //@line 4681 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $288=(($287)>>>0) >= 4294967232; //@line 4681 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($288) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 4681 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 39: 
      $nb=-1; //@line 4682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 44; break; //@line 4682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      var $291=$1; //@line 4684 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $292=((($291)+(4))|0); //@line 4684 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $293=((($292)+(7))|0); //@line 4684 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $294=$293 & -8; //@line 4684 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nb=$294; //@line 4684 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $295=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $296=(($295)|0)!=0; //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($296) { __label__ = 41; break; } else { __label__ = 43; break; } //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 41: 
      var $298=$nb; //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $299=_tmalloc_large(__gm_, $298); //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$299; //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $300=(($299)|0)!=0; //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($300) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 4685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 42: 
      __label__ = 54; break; //@line 4687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 43: 
      __label__ = 44; break;
    case 44: 
      __label__ = 45; break;
    case 45: 
      var $305=$nb; //@line 4691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $306=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $307=(($305)>>>0) <= (($306)>>>0); //@line 4691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($307) { __label__ = 46; break; } else { __label__ = 50; break; } //@line 4691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $309=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4692 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $310=$nb; //@line 4692 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $311=((($309)-($310))|0); //@line 4692 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize5=$311; //@line 4692 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $312=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4693 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p6=$312; //@line 4693 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $313=$rsize5; //@line 4694 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $314=(($313)>>>0) >= 16; //@line 4694 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($314) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 4694 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $316=$p6; //@line 4695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $317=$316; //@line 4695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $318=$nb; //@line 4695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $319=(($317+$318)|0); //@line 4695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $320=$319; //@line 4695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$320; //@line 4695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $r7=$320; //@line 4695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $321=$rsize5; //@line 4696 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$321; //@line 4696 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $322=$rsize5; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $323=$322 | 1; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=$r7; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $325=(($324+4)|0); //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($325)>>2)]=$323; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326=$rsize5; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $327=$r7; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $328=$327; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $329=$rsize5; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $330=(($328+$329)|0); //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $331=$330; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $332=(($331)|0); //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($332)>>2)]=$326; //@line 4697 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $333=$nb; //@line 4698 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $334=$333 | 1; //@line 4698 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $335=$334 | 2; //@line 4698 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $336=$p6; //@line 4698 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $337=(($336+4)|0); //@line 4698 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($337)>>2)]=$335; //@line 4698 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break; //@line 4699 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $339=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4701 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $dvs=$339; //@line 4701 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4702 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4703 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $340=$dvs; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $341=$340 | 1; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $342=$341 | 2; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $343=$p6; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $344=(($343+4)|0); //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($344)>>2)]=$342; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $345=$p6; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $346=$345; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $347=$dvs; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $348=(($346+$347)|0); //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $349=$348; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $350=(($349+4)|0); //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=HEAP32[(($350)>>2)]; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $352=$351 | 1; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($350)>>2)]=$352; //@line 4704 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break;
    case 49: 
      var $354=$p6; //@line 4706 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $355=$354; //@line 4706 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $356=(($355+8)|0); //@line 4706 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$356; //@line 4706 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4708 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $358=$nb; //@line 4711 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $359=HEAPU32[((((__gm_+12)|0))>>2)]; //@line 4711 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $360=(($358)>>>0) < (($359)>>>0); //@line 4711 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($360) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 4711 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $362=$nb; //@line 4712 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $363=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4712 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $364=((($363)-($362))|0); //@line 4712 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$364; //@line 4712 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize8=$364; //@line 4712 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $365=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4713 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p9=$365; //@line 4713 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $366=$p9; //@line 4714 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $367=$366; //@line 4714 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=$nb; //@line 4714 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $369=(($367+$368)|0); //@line 4714 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $370=$369; //@line 4714 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$370; //@line 4714 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $r10=$370; //@line 4714 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $371=$rsize8; //@line 4715 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $372=$371 | 1; //@line 4715 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $373=$r10; //@line 4715 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $374=(($373+4)|0); //@line 4715 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($374)>>2)]=$372; //@line 4715 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $375=$nb; //@line 4716 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $376=$375 | 1; //@line 4716 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $377=$376 | 2; //@line 4716 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $378=$p9; //@line 4716 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $379=(($378+4)|0); //@line 4716 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($379)>>2)]=$377; //@line 4716 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $380=$p9; //@line 4717 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $381=$380; //@line 4717 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $382=(($381+8)|0); //@line 4717 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$382; //@line 4717 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4720 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break;
    case 53: 
      var $385=$nb; //@line 4723 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=_sys_alloc(__gm_, $385); //@line 4723 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$386; //@line 4723 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4723 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $388=$mem; //@line 4727 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $388; //@line 4727 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
Module["_malloc"] = _malloc;_malloc["X"]=1;

function _tmalloc_small($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $t;
      var $v;
      var $rsize;
      var $i;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $trem;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F1;
      $1=$m;
      $2=$nb;
      var $3=$1; //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $4=(($3+4)|0); //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=HEAP32[(($4)>>2)]; //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=$1; //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=(($6+4)|0); //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($7)>>2)]; //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=(((-$8))|0); //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=$5 & $9; //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $leastbit=$10; //@line 4268 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=$leastbit; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=((($11)-(1))|0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$12; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=$13 >>> 12; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$14 & 16; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$15; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=$K; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$16; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=$K; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=$18 >>> (($17)>>>0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$19; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=$20 >>> 5; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=$21 & 8; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$22; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=$N; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=((($23)+($22))|0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$24; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=$K; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$26 >>> (($25)>>>0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$27; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=$28 >>> 2; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=$29 & 4; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$30; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=$N; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=((($31)+($30))|0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$32; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=$K; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=$34 >>> (($33)>>>0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$35; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=$36 >>> 1; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=$37 & 2; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$38; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=$N; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=((($39)+($38))|0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$40; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$K; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=$42 >>> (($41)>>>0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$43; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=$44 >>> 1; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=$45 & 1; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$46; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=$N; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $48=((($47)+($46))|0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$48; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49=$K; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=$50 >>> (($49)>>>0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$51; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52=$N; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $53=$Y; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=((($52)+($53))|0); //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $i=$54; //@line 4269 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=$i; //@line 4270 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$1; //@line 4270 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+304)|0); //@line 4270 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $58=(($57+($55<<2))|0); //@line 4270 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($58)>>2)]; //@line 4270 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $t=$59; //@line 4270 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $v=$59; //@line 4270 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=$t; //@line 4271 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=(($60+4)|0); //@line 4271 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $62=HEAP32[(($61)>>2)]; //@line 4271 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=$62 & -8; //@line 4271 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=$2; //@line 4271 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $65=((($63)-($64))|0); //@line 4271 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize=$65; //@line 4271 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $67=$t; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=(($67+16)|0); //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=(($68)|0); //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($69)>>2)]; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=(($70)|0)!=0; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($71) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $73=$t; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=(($73+16)|0); //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=(($74)|0); //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[(($75)>>2)]; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83 = $76;__label__ = 6; break; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $78=$t; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $79=(($78+16)|0); //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=(($79+4)|0); //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($80)>>2)]; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83 = $81;__label__ = 6; break; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $83; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $t=$83; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=(($83)|0)!=0; //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($84) { __label__ = 7; break; } else { __label__ = 10; break; } //@line 4273 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $86=$t; //@line 4274 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=(($86+4)|0); //@line 4274 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($87)>>2)]; //@line 4274 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=$88 & -8; //@line 4274 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $90=$2; //@line 4274 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=((($89)-($90))|0); //@line 4274 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $trem=$91; //@line 4274 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=$trem; //@line 4275 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $93=$rsize; //@line 4275 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $94=(($92)>>>0) < (($93)>>>0); //@line 4275 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($94) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4275 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $96=$trem; //@line 4276 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize=$96; //@line 4276 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $97=$t; //@line 4277 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $v=$97; //@line 4277 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 4278 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      __label__ = 3; break; //@line 4279 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $100=$v; //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=$100; //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=$1; //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=(($102+16)|0); //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $104=HEAPU32[(($103)>>2)]; //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $105=(($101)>>>0) >= (($104)>>>0); //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $106=(($105)&1); //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=(($106)==(1)); //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=(($107)|0)!=0; //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 11; break; } else { __label__ = 70; break; } //@line 4281 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $110=$v; //@line 4282 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $111=$110; //@line 4282 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $112=$2; //@line 4282 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=(($111+$112)|0); //@line 4282 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $114=$113; //@line 4282 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $r=$114; //@line 4282 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $115=$v; //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $116=$115; //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $117=$r; //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $118=$117; //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $119=(($116)>>>0) < (($118)>>>0); //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $120=(($119)&1); //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $121=(($120)==(1)); //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $122=(($121)|0)!=0; //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($122) { __label__ = 12; break; } else { __label__ = 69; break; } //@line 4284 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $124=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $125=(($124+24)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $126=HEAP32[(($125)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $XP=$126; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $127=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=(($127+12)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=HEAP32[(($128)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $130=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $131=(($129)|0)!=(($130)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($131) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $133=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $134=(($133+8)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($134)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$135; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $136=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $137=(($136+12)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $138=HEAP32[(($137)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$138; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $139=$F; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $140=$139; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $141=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $142=(($141+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $143=HEAPU32[(($142)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $144=(($140)>>>0) >= (($143)>>>0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $145=(($144)&1); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $146=(($145)==(1)); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $147=(($146)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($147) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $149=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $150=$F; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $151=(($150+12)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($151)>>2)]=$149; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $152=$F; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=(($153+8)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($154)>>2)]=$152; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      _abort(); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      __label__ = 29; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $158=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $159=(($158+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $160=(($159+4)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$160; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $161=HEAP32[(($160)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$161; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $162=(($161)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($162) { __label__ = 19; break; } else { __label__ = 18; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $164=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $165=(($164+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $166=(($165)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$166; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $167=HEAP32[(($166)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$167; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $168=(($167)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($168) { __label__ = 19; break; } else { __label__ = 28; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      __label__ = 20; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $171=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $172=(($171+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $173=(($172+4)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$173; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $174=HEAP32[(($173)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $175=(($174)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($175) { var $183 = 1;__label__ = 22; break; } else { __label__ = 21; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $177=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $178=(($177+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $179=(($178)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$179; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $180=HEAP32[(($179)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $181=(($180)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183 = $181;__label__ = 22; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $183;
      if ($183) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $185=$CP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$185; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $186=HEAP32[(($185)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$186; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $188=$RP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $189=$188; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $190=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $191=(($190+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $192=HEAPU32[(($191)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $193=(($189)>>>0) >= (($192)>>>0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $194=(($193)&1); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $195=(($194)==(1)); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $196=(($195)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($196) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $198=$RP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($198)>>2)]=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      _abort(); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 27: 
      __label__ = 28; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break;
    case 29: 
      var $203=$XP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $204=(($203)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($204) { __label__ = 30; break; } else { __label__ = 57; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $206=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=(($206+28)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=HEAP32[(($207)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $209=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $210=(($209+304)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $211=(($210+($208<<2))|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H=$211; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $212=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $213=$H; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $214=HEAP32[(($213)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $215=(($212)|0)==(($214)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($215) { __label__ = 31; break; } else { __label__ = 34; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $217=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $218=$H; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($218)>>2)]=$217; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $219=(($217)|0)==0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($219) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $221=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $222=(($221+28)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $223=HEAP32[(($222)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $224=1 << $223; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $225=$224 ^ -1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $226=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $227=(($226+4)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $228=HEAP32[(($227)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $229=$228 & $225; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($227)>>2)]=$229; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      __label__ = 41; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $232=$XP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $233=$232; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $234=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $235=(($234+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $236=HEAPU32[(($235)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $237=(($233)>>>0) >= (($236)>>>0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $238=(($237)&1); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $239=(($238)==(1)); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $240=(($239)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($240) { __label__ = 35; break; } else { __label__ = 39; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $242=$XP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $243=(($242+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $244=(($243)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $245=HEAP32[(($244)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $246=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=(($245)|0)==(($246)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($247) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $249=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $250=$XP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $251=(($250+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $252=(($251)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($252)>>2)]=$249; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $254=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $255=$XP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $256=(($255+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $257=(($256+4)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($257)>>2)]=$254; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break;
    case 38: 
      __label__ = 40; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 39: 
      _abort(); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      __label__ = 41; break;
    case 41: 
      var $262=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $263=(($262)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($263) { __label__ = 42; break; } else { __label__ = 56; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $265=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $266=$265; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $267=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $268=(($267+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $269=HEAPU32[(($268)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $270=(($266)>>>0) >= (($269)>>>0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $271=(($270)&1); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $272=(($271)==(1)); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $273=(($272)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($273) { __label__ = 43; break; } else { __label__ = 54; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $275=$XP; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $276=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $277=(($276+24)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($277)>>2)]=$275; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $278=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=(($278+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $280=(($279)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $281=HEAP32[(($280)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C0=$281; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $282=(($281)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($282) { __label__ = 44; break; } else { __label__ = 48; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $284=$C0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $285=$284; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $286=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $287=(($286+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $288=HEAPU32[(($287)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $289=(($285)>>>0) >= (($288)>>>0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $290=(($289)&1); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $291=(($290)==(1)); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $292=(($291)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($292) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 45: 
      var $294=$C0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $295=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $296=(($295+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $297=(($296)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($297)>>2)]=$294; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $298=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $299=$C0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $300=(($299+24)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($300)>>2)]=$298; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      _abort(); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      __label__ = 48; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $304=$v; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $305=(($304+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $306=(($305+4)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $307=HEAP32[(($306)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C1=$307; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $308=(($307)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($308) { __label__ = 49; break; } else { __label__ = 53; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $310=$C1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $311=$310; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $312=$1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $313=(($312+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $314=HEAPU32[(($313)>>2)]; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $315=(($311)>>>0) >= (($314)>>>0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $316=(($315)&1); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $317=(($316)==(1)); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $318=(($317)|0)!=0; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($318) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $320=$C1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $321=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $322=(($321+16)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $323=(($322+4)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($323)>>2)]=$320; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=$R; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $325=$C1; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326=(($325+24)|0); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($326)>>2)]=$324; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 51: 
      _abort(); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 53: 
      __label__ = 55; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 54: 
      _abort(); //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 55: 
      __label__ = 56; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 56: 
      __label__ = 57; break; //@line 4285 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $334=$rsize; //@line 4286 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $335=(($334)>>>0) < 16; //@line 4286 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($335) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 4286 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 58: 
      var $337=$rsize; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $338=$2; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $339=((($337)+($338))|0); //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $340=$339 | 1; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $341=$340 | 2; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $342=$v; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $343=(($342+4)|0); //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($343)>>2)]=$341; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $344=$v; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $345=$344; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $346=$rsize; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $347=$2; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $348=((($346)+($347))|0); //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $349=(($345+$348)|0); //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $350=$349; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+4)|0); //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $352=HEAP32[(($351)>>2)]; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $353=$352 | 1; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($351)>>2)]=$353; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 68; break; //@line 4287 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $355=$2; //@line 4289 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $356=$355 | 1; //@line 4289 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $357=$356 | 2; //@line 4289 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $358=$v; //@line 4289 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $359=(($358+4)|0); //@line 4289 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($359)>>2)]=$357; //@line 4289 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $360=$rsize; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $361=$360 | 1; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $362=$r; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $363=(($362+4)|0); //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($363)>>2)]=$361; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $364=$rsize; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $365=$r; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $366=$365; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $367=$rsize; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=(($366+$367)|0); //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $369=$368; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $370=(($369)|0); //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($370)>>2)]=$364; //@line 4290 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $371=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $372=(($371+8)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $373=HEAP32[(($372)>>2)]; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $DVS=$373; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $374=$DVS; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $375=(($374)|0)!=0; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($375) { __label__ = 60; break; } else { __label__ = 67; break; } //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $377=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $378=(($377+20)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $379=HEAP32[(($378)>>2)]; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $DV=$379; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $380=$DVS; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $381=$380 >>> 3; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I=$381; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $382=$I; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $383=$382 << 1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $384=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $385=(($384+40)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=(($385+($383<<2))|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $387=$386; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $388=$387; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B=$388; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $389=$B; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F1=$389; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $390=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $391=(($390)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $392=HEAP32[(($391)>>2)]; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $393=$I; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $394=1 << $393; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $395=$392 & $394; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $396=(($395)|0)!=0; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($396) { __label__ = 62; break; } else { __label__ = 61; break; } //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $398=$I; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $399=1 << $398; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $400=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $401=(($400)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $402=HEAP32[(($401)>>2)]; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $403=$402 | $399; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($401)>>2)]=$403; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $405=$B; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $406=(($405+8)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $407=HEAP32[(($406)>>2)]; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $408=$407; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $409=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $410=(($409+16)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $411=HEAPU32[(($410)>>2)]; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $412=(($408)>>>0) >= (($411)>>>0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $413=(($412)&1); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $414=(($413)==(1)); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $415=(($414)|0)!=0; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($415) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $417=$B; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $418=(($417+8)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $419=HEAP32[(($418)>>2)]; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F1=$419; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 64: 
      _abort(); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 65: 
      __label__ = 66; break;
    case 66: 
      var $423=$DV; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $424=$B; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $425=(($424+8)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($425)>>2)]=$423; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $426=$DV; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $427=$F1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $428=(($427+12)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($428)>>2)]=$426; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $429=$F1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $430=$DV; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $431=(($430+8)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($431)>>2)]=$429; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $432=$B; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $433=$DV; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $434=(($433+12)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($434)>>2)]=$432; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 67; break; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 67: 
      var $436=$rsize; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $437=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $438=(($437+8)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($438)>>2)]=$436; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $439=$r; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $440=$1; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $441=(($440+20)|0); //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($441)>>2)]=$439; //@line 4291 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 68; break;
    case 68: 
      var $443=$v; //@line 4293 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $444=$443; //@line 4293 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $445=(($444+8)|0); //@line 4293 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $445; //@line 4293 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break; //@line 4295 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 70: 
      _abort(); //@line 4297 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4297 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_small["X"]=1;

function _tmalloc_large($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $v;
      var $rsize;
      var $t;
      var $idx;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $sizebits;
      var $rst;
      var $rt;
      var $trem;
      var $leftbits;
      var $i;
      var $leastbit;
      var $Y1;
      var $K2;
      var $N3;
      var $trem4;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I;
      var $B;
      var $F5;
      var $TP;
      var $H6;
      var $I7;
      var $X8;
      var $Y9;
      var $N10;
      var $K11;
      var $T;
      var $K12;
      var $C;
      var $F13;
      $2=$m;
      $3=$nb;
      $v=0; //@line 4194 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 4195 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=(((-$4))|0); //@line 4195 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize=$5; //@line 4195 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=$3; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=$6 >>> 8; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $X=$7; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=$X; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0)==0; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      $idx=0; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $12=$X; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)>>>0) > 65535; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($13) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      $idx=31; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $16=$X; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$16; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=$Y; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=((($17)-(256))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=$18 >>> 16; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=$19 & 8; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$20; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=$N; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=$Y; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=$22 << $21; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$23; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=((($23)-(4096))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=$24 >>> 16; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=$25 & 4; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$26; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$K; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=$N; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=((($28)+($27))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$29; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=$K; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=$Y; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=$31 << $30; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$32; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=((($32)-(16384))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=$33 >>> 16; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=$34 & 2; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$35; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=$N; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=((($36)+($35))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$37; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=$N; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=(((14)-($38))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=$K; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$Y; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=$41 << $40; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$42; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=$42 >>> 15; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=((($39)+($43))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$44; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=$K; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=$45 << 1; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=$3; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $48=$K; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49=((($48)+(7))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=$47 >>> (($49)>>>0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=$50 & 1; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52=((($46)+($51))|0); //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $idx=$52; //@line 4198 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break;
    case 7: 
      __label__ = 8; break;
    case 8: 
      var $55=$idx; //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$2; //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+304)|0); //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $58=(($57+($55<<2))|0); //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($58)>>2)]; //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $t=$59; //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=(($59)|0)!=0; //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($60) { __label__ = 9; break; } else { __label__ = 24; break; } //@line 4199 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $62=$3; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=$idx; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=(($63)|0)==31; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($64) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $73 = 0;__label__ = 12; break; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $67=$idx; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=$67 >>> 1; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)+(8))|0); //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=((($69)-(2))|0); //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=(((31)-($70))|0); //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73 = $71;__label__ = 12; break; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $73; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=$62 << $73; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sizebits=$74; //@line 4201 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rst=0; //@line 4202 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 4203 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $76=$t; //@line 4205 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $77=(($76+4)|0); //@line 4205 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[(($77)>>2)]; //@line 4205 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $79=$78 & -8; //@line 4205 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=$3; //@line 4205 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=((($79)-($80))|0); //@line 4205 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $trem=$81; //@line 4205 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=$trem; //@line 4206 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=$rsize; //@line 4206 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=(($82)>>>0) < (($83)>>>0); //@line 4206 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($84) { __label__ = 14; break; } else { __label__ = 17; break; } //@line 4206 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $86=$t; //@line 4207 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $v=$86; //@line 4207 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=$trem; //@line 4208 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize=$87; //@line 4208 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=(($87)|0)==0; //@line 4208 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($88) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4208 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      __label__ = 23; break; //@line 4209 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      __label__ = 17; break; //@line 4210 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $92=$t; //@line 4211 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $93=(($92+16)|0); //@line 4211 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $94=(($93+4)|0); //@line 4211 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=HEAP32[(($94)>>2)]; //@line 4211 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rt=$95; //@line 4211 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $96=$sizebits; //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $97=$96 >>> 31; //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=$97 & 1; //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $99=$t; //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $100=(($99+16)|0); //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=(($100+($98<<2))|0); //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=HEAP32[(($101)>>2)]; //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $t=$102; //@line 4212 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=$rt; //@line 4213 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $104=(($103)|0)!=0; //@line 4213 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($104) { __label__ = 18; break; } else { __label__ = 20; break; } //@line 4213 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $106=$rt; //@line 4213 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=$t; //@line 4213 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=(($106)|0)!=(($107)|0); //@line 4213 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4213 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $110=$rt; //@line 4214 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rst=$110; //@line 4214 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4214 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $112=$t; //@line 4215 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=(($112)|0)==0; //@line 4215 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($113) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 4215 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $115=$rst; //@line 4216 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $t=$115; //@line 4216 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4217 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $117=$sizebits; //@line 4219 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $118=$117 << 1; //@line 4219 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sizebits=$118; //@line 4219 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 4220 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      __label__ = 24; break; //@line 4221 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $121=$t; //@line 4222 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $122=(($121)|0)==0; //@line 4222 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($122) { __label__ = 25; break; } else { __label__ = 29; break; } //@line 4222 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $124=$v; //@line 4222 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $125=(($124)|0)==0; //@line 4222 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($125) { __label__ = 26; break; } else { __label__ = 29; break; } //@line 4222 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $127=$idx; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=1 << $127; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=$128 << 1; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $130=$idx; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $131=1 << $130; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $132=$131 << 1; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $133=(((-$132))|0); //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $134=$129 | $133; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=$2; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $136=(($135+4)|0); //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $137=HEAP32[(($136)>>2)]; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $138=$134 & $137; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $leftbits=$138; //@line 4223 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $139=$leftbits; //@line 4224 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $140=(($139)|0)!=0; //@line 4224 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($140) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 4224 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 27: 
      var $142=$leftbits; //@line 4226 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $143=$leftbits; //@line 4226 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $144=(((-$143))|0); //@line 4226 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $145=$142 & $144; //@line 4226 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $leastbit=$145; //@line 4226 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $146=$leastbit; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $147=((($146)-(1))|0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y1=$147; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $148=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $149=$148 >>> 12; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $150=$149 & 16; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$150; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $151=$K2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N3=$151; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $152=$K2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=$153 >>> (($152)>>>0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y1=$154; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $155=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $156=$155 >>> 5; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $157=$156 & 8; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$157; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $158=$N3; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $159=((($158)+($157))|0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N3=$159; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $160=$K2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $161=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $162=$161 >>> (($160)>>>0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y1=$162; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $163=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $164=$163 >>> 2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $165=$164 & 4; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$165; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $166=$N3; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $167=((($166)+($165))|0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N3=$167; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $168=$K2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $169=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $170=$169 >>> (($168)>>>0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y1=$170; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $171=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $172=$171 >>> 1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $173=$172 & 2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$173; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $174=$N3; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $175=((($174)+($173))|0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N3=$175; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $176=$K2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $177=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $178=$177 >>> (($176)>>>0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y1=$178; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $179=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $180=$179 >>> 1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $181=$180 & 1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$181; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $182=$N3; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183=((($182)+($181))|0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N3=$183; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $184=$K2; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $185=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $186=$185 >>> (($184)>>>0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y1=$186; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $187=$N3; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $188=$Y1; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $189=((($187)+($188))|0); //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $i=$189; //@line 4227 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $190=$i; //@line 4228 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $191=$2; //@line 4228 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $192=(($191+304)|0); //@line 4228 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $193=(($192+($190<<2))|0); //@line 4228 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $194=HEAP32[(($193)>>2)]; //@line 4228 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $t=$194; //@line 4228 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4229 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break; //@line 4230 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 29: 
      __label__ = 30; break; //@line 4232 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $198=$t; //@line 4232 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $199=(($198)|0)!=0; //@line 4232 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($199) { __label__ = 31; break; } else { __label__ = 37; break; } //@line 4232 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $201=$t; //@line 4233 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $202=(($201+4)|0); //@line 4233 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[(($202)>>2)]; //@line 4233 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $204=$203 & -8; //@line 4233 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $205=$3; //@line 4233 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $206=((($204)-($205))|0); //@line 4233 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $trem4=$206; //@line 4233 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=$trem4; //@line 4234 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=$rsize; //@line 4234 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $209=(($207)>>>0) < (($208)>>>0); //@line 4234 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($209) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4234 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $211=$trem4; //@line 4235 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize=$211; //@line 4235 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $212=$t; //@line 4236 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $v=$212; //@line 4236 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4237 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $214=$t; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $215=(($214+16)|0); //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $216=(($215)|0); //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $217=HEAP32[(($216)>>2)]; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $218=(($217)|0)!=0; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($218) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $220=$t; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $221=(($220+16)|0); //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $222=(($221)|0); //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $223=HEAP32[(($222)>>2)]; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230 = $223;__label__ = 36; break; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $225=$t; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $226=(($225+16)|0); //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $227=(($226+4)|0); //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $228=HEAP32[(($227)>>2)]; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230 = $228;__label__ = 36; break; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $230; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $t=$230; //@line 4238 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 4239 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $232=$v; //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $233=(($232)|0)!=0; //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($233) { __label__ = 38; break; } else { __label__ = 127; break; } //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $235=$rsize; //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $236=$2; //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $237=(($236+8)|0); //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $238=HEAP32[(($237)>>2)]; //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $239=$3; //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $240=((($238)-($239))|0); //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $241=(($235)>>>0) < (($240)>>>0); //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($241) { __label__ = 39; break; } else { __label__ = 127; break; } //@line 4242 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 39: 
      var $243=$v; //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $244=$243; //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $245=$2; //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $246=(($245+16)|0); //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=HEAPU32[(($246)>>2)]; //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $248=(($244)>>>0) >= (($247)>>>0); //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $249=(($248)&1); //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $250=(($249)==(1)); //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $251=(($250)|0)!=0; //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($251) { __label__ = 40; break; } else { __label__ = 126; break; } //@line 4243 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      var $253=$v; //@line 4244 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $254=$253; //@line 4244 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $255=$3; //@line 4244 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $256=(($254+$255)|0); //@line 4244 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $257=$256; //@line 4244 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $r=$257; //@line 4244 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $258=$v; //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $259=$258; //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $260=$r; //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $261=$260; //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $262=(($259)>>>0) < (($261)>>>0); //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $263=(($262)&1); //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $264=(($263)==(1)); //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $265=(($264)|0)!=0; //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($265) { __label__ = 41; break; } else { __label__ = 125; break; } //@line 4246 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 41: 
      var $267=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $268=(($267+24)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $269=HEAP32[(($268)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $XP=$269; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $270=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $271=(($270+12)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $272=HEAP32[(($271)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $273=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $274=(($272)|0)!=(($273)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($274) { __label__ = 42; break; } else { __label__ = 46; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $276=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $277=(($276+8)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $278=HEAP32[(($277)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$278; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $280=(($279+12)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $281=HEAP32[(($280)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$281; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $282=$F; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $283=$282; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $284=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $285=(($284+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $286=HEAPU32[(($285)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $287=(($283)>>>0) >= (($286)>>>0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $288=(($287)&1); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $289=(($288)==(1)); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $290=(($289)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($290) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $292=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $293=$F; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $294=(($293+12)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($294)>>2)]=$292; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $295=$F; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $296=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $297=(($296+8)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($297)>>2)]=$295; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 44: 
      _abort(); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 45: 
      __label__ = 58; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $301=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $302=(($301+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $303=(($302+4)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$303; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $304=HEAP32[(($303)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$304; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $305=(($304)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($305) { __label__ = 48; break; } else { __label__ = 47; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $307=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $308=(($307+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $309=(($308)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$309; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $310=HEAP32[(($309)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$310; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $311=(($310)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($311) { __label__ = 48; break; } else { __label__ = 57; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 48: 
      __label__ = 49; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $314=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $315=(($314+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $316=(($315+4)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$316; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $317=HEAP32[(($316)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $318=(($317)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($318) { var $326 = 1;__label__ = 51; break; } else { __label__ = 50; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $320=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $321=(($320+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $322=(($321)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$322; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $323=HEAP32[(($322)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=(($323)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326 = $324;__label__ = 51; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $326;
      if ($326) { __label__ = 52; break; } else { __label__ = 53; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 52: 
      var $328=$CP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$328; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $329=HEAP32[(($328)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$329; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 53: 
      var $331=$RP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $332=$331; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $333=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $334=(($333+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $335=HEAPU32[(($334)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $336=(($332)>>>0) >= (($335)>>>0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $337=(($336)&1); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $338=(($337)==(1)); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $339=(($338)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($339) { __label__ = 54; break; } else { __label__ = 55; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $341=$RP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($341)>>2)]=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 56; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 55: 
      _abort(); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 56: 
      __label__ = 57; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 57: 
      __label__ = 58; break;
    case 58: 
      var $346=$XP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $347=(($346)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($347) { __label__ = 59; break; } else { __label__ = 86; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $349=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $350=(($349+28)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=HEAP32[(($350)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $352=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $353=(($352+304)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $354=(($353+($351<<2))|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H=$354; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $355=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $356=$H; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $357=HEAP32[(($356)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $358=(($355)|0)==(($357)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($358) { __label__ = 60; break; } else { __label__ = 63; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $360=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $361=$H; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($361)>>2)]=$360; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $362=(($360)|0)==0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($362) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $364=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $365=(($364+28)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $366=HEAP32[(($365)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $367=1 << $366; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=$367 ^ -1; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $369=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $370=(($369+4)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $371=HEAP32[(($370)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $372=$371 & $368; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($370)>>2)]=$372; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 62: 
      __label__ = 70; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $375=$XP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $376=$375; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $377=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $378=(($377+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $379=HEAPU32[(($378)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $380=(($376)>>>0) >= (($379)>>>0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $381=(($380)&1); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $382=(($381)==(1)); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $383=(($382)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($383) { __label__ = 64; break; } else { __label__ = 68; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 64: 
      var $385=$XP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=(($385+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $387=(($386)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $388=HEAP32[(($387)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $389=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $390=(($388)|0)==(($389)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($390) { __label__ = 65; break; } else { __label__ = 66; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 65: 
      var $392=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $393=$XP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $394=(($393+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $395=(($394)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($395)>>2)]=$392; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 67; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 66: 
      var $397=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $398=$XP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $399=(($398+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $400=(($399+4)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($400)>>2)]=$397; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 67; break;
    case 67: 
      __label__ = 69; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 68: 
      _abort(); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break;
    case 70: 
      var $405=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $406=(($405)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($406) { __label__ = 71; break; } else { __label__ = 85; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $408=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $409=$408; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $410=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $411=(($410+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $412=HEAPU32[(($411)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $413=(($409)>>>0) >= (($412)>>>0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $414=(($413)&1); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $415=(($414)==(1)); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $416=(($415)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($416) { __label__ = 72; break; } else { __label__ = 83; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $418=$XP; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $419=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $420=(($419+24)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($420)>>2)]=$418; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $421=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $422=(($421+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $423=(($422)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $424=HEAP32[(($423)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C0=$424; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $425=(($424)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($425) { __label__ = 73; break; } else { __label__ = 77; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $427=$C0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $428=$427; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $429=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $430=(($429+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $431=HEAPU32[(($430)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $432=(($428)>>>0) >= (($431)>>>0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $433=(($432)&1); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $434=(($433)==(1)); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $435=(($434)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($435) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $437=$C0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $438=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $439=(($438+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $440=(($439)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($440)>>2)]=$437; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $441=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $442=$C0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $443=(($442+24)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($443)>>2)]=$441; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 76; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 75: 
      _abort(); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 76: 
      __label__ = 77; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 77: 
      var $447=$v; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $448=(($447+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $449=(($448+4)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $450=HEAP32[(($449)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C1=$450; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $451=(($450)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($451) { __label__ = 78; break; } else { __label__ = 82; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $453=$C1; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $454=$453; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $455=$2; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $456=(($455+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $457=HEAPU32[(($456)>>2)]; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $458=(($454)>>>0) >= (($457)>>>0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $459=(($458)&1); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $460=(($459)==(1)); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $461=(($460)|0)!=0; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($461) { __label__ = 79; break; } else { __label__ = 80; break; } //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $463=$C1; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $464=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $465=(($464+16)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $466=(($465+4)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($466)>>2)]=$463; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $467=$R; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $468=$C1; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $469=(($468+24)|0); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($469)>>2)]=$467; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 81; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 80: 
      _abort(); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 81: 
      __label__ = 82; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 82: 
      __label__ = 84; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 83: 
      _abort(); //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 84: 
      __label__ = 85; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 85: 
      __label__ = 86; break; //@line 4247 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 86: 
      var $477=$rsize; //@line 4248 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $478=(($477)>>>0) < 16; //@line 4248 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($478) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 4248 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 87: 
      var $480=$rsize; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $481=$3; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $482=((($480)+($481))|0); //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $483=$482 | 1; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $484=$483 | 2; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $485=$v; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $486=(($485+4)|0); //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($486)>>2)]=$484; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $487=$v; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $488=$487; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $489=$rsize; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $490=$3; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $491=((($489)+($490))|0); //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $492=(($488+$491)|0); //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $493=$492; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $494=(($493+4)|0); //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $495=HEAP32[(($494)>>2)]; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $496=$495 | 1; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($494)>>2)]=$496; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 124; break; //@line 4249 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $498=$3; //@line 4251 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $499=$498 | 1; //@line 4251 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $500=$499 | 2; //@line 4251 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $501=$v; //@line 4251 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $502=(($501+4)|0); //@line 4251 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($502)>>2)]=$500; //@line 4251 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $503=$rsize; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $504=$503 | 1; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $505=$r; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $506=(($505+4)|0); //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($506)>>2)]=$504; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $507=$rsize; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $508=$r; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $509=$508; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $510=$rsize; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $511=(($509+$510)|0); //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $512=$511; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $513=(($512)|0); //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($513)>>2)]=$507; //@line 4252 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $514=$rsize; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $515=$514 >>> 3; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $516=(($515)>>>0) < 32; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($516) { __label__ = 89; break; } else { __label__ = 96; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $518=$rsize; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $519=$518 >>> 3; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I=$519; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $520=$I; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $521=$520 << 1; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $522=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $523=(($522+40)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $524=(($523+($521<<2))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $525=$524; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $526=$525; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B=$526; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $527=$B; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F5=$527; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $528=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $529=(($528)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $530=HEAP32[(($529)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $531=$I; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $532=1 << $531; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $533=$530 & $532; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $534=(($533)|0)!=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($534) { __label__ = 91; break; } else { __label__ = 90; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $536=$I; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $537=1 << $536; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $538=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $539=(($538)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $540=HEAP32[(($539)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $541=$540 | $537; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($539)>>2)]=$541; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 95; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $543=$B; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $544=(($543+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $545=HEAP32[(($544)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $546=$545; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $547=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $548=(($547+16)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $549=HEAPU32[(($548)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $550=(($546)>>>0) >= (($549)>>>0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $551=(($550)&1); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $552=(($551)==(1)); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $553=(($552)|0)!=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($553) { __label__ = 92; break; } else { __label__ = 93; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $555=$B; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $556=(($555+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $557=HEAP32[(($556)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F5=$557; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 94; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 93: 
      _abort(); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 94: 
      __label__ = 95; break;
    case 95: 
      var $561=$r; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $562=$B; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $563=(($562+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($563)>>2)]=$561; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $564=$r; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $565=$F5; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $566=(($565+12)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($566)>>2)]=$564; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $567=$F5; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $568=$r; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $569=(($568+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($569)>>2)]=$567; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $570=$B; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $571=$r; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $572=(($571+12)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($572)>>2)]=$570; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 123; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 96: 
      var $574=$r; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $575=$574; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $TP=$575; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $576=$rsize; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $577=$576 >>> 8; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $X8=$577; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $578=$X8; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $579=(($578)|0)==0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($579) { __label__ = 97; break; } else { __label__ = 98; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 97: 
      $I7=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 102; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 98: 
      var $582=$X8; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $583=(($582)>>>0) > 65535; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($583) { __label__ = 99; break; } else { __label__ = 100; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 99: 
      $I7=31; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 101; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 100: 
      var $586=$X8; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y9=$586; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $587=$Y9; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $588=((($587)-(256))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $589=$588 >>> 16; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $590=$589 & 8; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N10=$590; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $591=$N10; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $592=$Y9; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $593=$592 << $591; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y9=$593; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $594=((($593)-(4096))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $595=$594 >>> 16; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $596=$595 & 4; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K11=$596; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $597=$K11; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $598=$N10; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $599=((($598)+($597))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N10=$599; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $600=$K11; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $601=$Y9; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $602=$601 << $600; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y9=$602; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $603=((($602)-(16384))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $604=$603 >>> 16; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $605=$604 & 2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K11=$605; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $606=$N10; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $607=((($606)+($605))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N10=$607; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $608=$N10; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $609=(((14)-($608))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $610=$K11; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $611=$Y9; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $612=$611 << $610; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y9=$612; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $613=$612 >>> 15; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $614=((($609)+($613))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K11=$614; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $615=$K11; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $616=$615 << 1; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $617=$rsize; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $618=$K11; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $619=((($618)+(7))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $620=$617 >>> (($619)>>>0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $621=$620 & 1; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $622=((($616)+($621))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I7=$622; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 101; break;
    case 101: 
      __label__ = 102; break;
    case 102: 
      var $625=$I7; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $626=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $627=(($626+304)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $628=(($627+($625<<2))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H6=$628; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $629=$I7; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $630=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $631=(($630+28)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($631)>>2)]=$629; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $632=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $633=(($632+16)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $634=(($633+4)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($634)>>2)]=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $635=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $636=(($635+16)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $637=(($636)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($637)>>2)]=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $638=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $639=(($638+4)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $640=HEAP32[(($639)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $641=$I7; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $642=1 << $641; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $643=$640 & $642; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $644=(($643)|0)!=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($644) { __label__ = 104; break; } else { __label__ = 103; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 103: 
      var $646=$I7; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $647=1 << $646; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $648=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $649=(($648+4)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $650=HEAP32[(($649)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $651=$650 | $647; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($649)>>2)]=$651; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $652=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $653=$H6; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($653)>>2)]=$652; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $654=$H6; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $655=$654; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $656=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $657=(($656+24)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($657)>>2)]=$655; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $658=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $659=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $660=(($659+12)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($660)>>2)]=$658; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $661=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $662=(($661+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($662)>>2)]=$658; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 122; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 104: 
      var $664=$H6; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $665=HEAP32[(($664)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$665; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $666=$rsize; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $667=$I7; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $668=(($667)|0)==31; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($668) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 105: 
      var $677 = 0;__label__ = 107; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 106: 
      var $671=$I7; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $672=$671 >>> 1; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $673=((($672)+(8))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $674=((($673)-(2))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $675=(((31)-($674))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $677 = $675;__label__ = 107; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 107: 
      var $677; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $678=$666 << $677; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K12=$678; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 108; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 108: 
      var $680=$T; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $681=(($680+4)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $682=HEAP32[(($681)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $683=$682 & -8; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $684=$rsize; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $685=(($683)|0)!=(($684)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($685) { __label__ = 109; break; } else { __label__ = 115; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 109: 
      var $687=$K12; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $688=$687 >>> 31; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $689=$688 & 1; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $690=$T; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $691=(($690+16)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $692=(($691+($689<<2))|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C=$692; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $693=$K12; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $694=$693 << 1; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K12=$694; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $695=$C; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $696=HEAP32[(($695)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $697=(($696)|0)!=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($697) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 110: 
      var $699=$C; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $700=HEAP32[(($699)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$700; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 114; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 111: 
      var $702=$C; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $703=$702; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $704=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $705=(($704+16)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $706=HEAPU32[(($705)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $707=(($703)>>>0) >= (($706)>>>0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $708=(($707)&1); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $709=(($708)==(1)); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $710=(($709)|0)!=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($710) { __label__ = 112; break; } else { __label__ = 113; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 112: 
      var $712=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $713=$C; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($713)>>2)]=$712; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $714=$T; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $715=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $716=(($715+24)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($716)>>2)]=$714; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $717=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $718=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $719=(($718+12)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($719)>>2)]=$717; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $720=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $721=(($720+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($721)>>2)]=$717; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 121; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 113: 
      _abort(); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 114: 
      __label__ = 120; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 115: 
      var $725=$T; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $726=(($725+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $727=HEAP32[(($726)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F13=$727; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $728=$T; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $729=$728; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $730=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $731=(($730+16)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $732=HEAPU32[(($731)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $733=(($729)>>>0) >= (($732)>>>0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($733) { __label__ = 116; break; } else { var $742 = 0;__label__ = 117; break; } //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 116: 
      var $735=$F13; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $736=$735; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $737=$2; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $738=(($737+16)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $739=HEAPU32[(($738)>>2)]; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $740=(($736)>>>0) >= (($739)>>>0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $742 = $740;__label__ = 117; break;
    case 117: 
      var $742;
      var $743=(($742)&1);
      var $744=(($743)==(1));
      var $745=(($744)|0)!=0;
      if ($745) { __label__ = 118; break; } else { __label__ = 119; break; }
    case 118: 
      var $747=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $748=$F13; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $749=(($748+12)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($749)>>2)]=$747; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $750=$T; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $751=(($750+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($751)>>2)]=$747; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $752=$F13; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $753=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $754=(($753+8)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($754)>>2)]=$752; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $755=$T; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $756=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $757=(($756+12)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($757)>>2)]=$755; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $758=$TP; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $759=(($758+24)|0); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($759)>>2)]=0; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 121; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 119: 
      _abort(); //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 120: 
      __label__ = 108; break; //@line 4253 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 121: 
      __label__ = 122; break;
    case 122: 
      __label__ = 123; break;
    case 123: 
      __label__ = 124; break;
    case 124: 
      var $766=$v; //@line 4255 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $767=$766; //@line 4255 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $768=(($767+8)|0); //@line 4255 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $1=$768; //@line 4255 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 128; break; //@line 4255 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 125: 
      __label__ = 126; break; //@line 4257 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 126: 
      _abort(); //@line 4258 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4258 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 127: 
      $1=0; //@line 4260 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 128; break; //@line 4260 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 128: 
      var $773=$1; //@line 4261 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $773; //@line 4261 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_large["X"]=1;

function _sys_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $tbase;
      var $tsize;
      var $mmap_flag;
      var $mem;
      var $br;
      var $ss;
      var $asize;
      var $base;
      var $esize;
      var $end;
      var $asize1;
      var $br2;
      var $end3;
      var $ssize;
      var $mn;
      var $sp;
      var $oldbase;
      var $rsize;
      var $p;
      var $r;
      $2=$m;
      $3=$nb;
      $tbase=-1; //@line 3876 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tsize=0; //@line 3877 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mmap_flag=0; //@line 3878 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $4=HEAP32[((((_mparams)|0))>>2)]; //@line 3880 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=(($4)|0)!=0; //@line 3880 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($5) { var $10 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 3880 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $7=_init_mparams(); //@line 3880 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=(($7)|0)!=0; //@line 3880 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10 = $8;__label__ = 4; break; //@line 3880 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $10;
      var $11=(($10)&1); //@line 3880 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=$2; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=(($12+440)|0); //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($13)>>2)]; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$14 & 0; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=(($15)|0)!=0; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($16) { __label__ = 5; break; } else { __label__ = 10; break; } //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $18=$3; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=HEAPU32[((((_mparams+12)|0))>>2)]; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=(($18)>>>0) >= (($19)>>>0); //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($20) { __label__ = 6; break; } else { __label__ = 10; break; } //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $22=$2; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=(($22+12)|0); //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[(($23)>>2)]; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=(($24)|0)!=0; //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 7; break; } else { __label__ = 10; break; } //@line 3883 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $27=$2; //@line 3884 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=$3; //@line 3884 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=_mmap_alloc($27, $28); //@line 3884 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mem=$29; //@line 3884 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=$mem; //@line 3885 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=(($30)|0)!=0; //@line 3885 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($31) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 3885 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $33=$mem; //@line 3886 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $1=$33; //@line 3886 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 3886 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      __label__ = 10; break; //@line 3887 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $36=$2; //@line 3911 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=(($36+440)|0); //@line 3911 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[(($37)>>2)]; //@line 3911 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=$38 & 4; //@line 3911 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=(($39)|0)!=0; //@line 3911 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($40) { __label__ = 43; break; } else { __label__ = 11; break; } //@line 3911 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      $br=-1; //@line 3912 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=$2; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+24)|0); //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[(($43)>>2)]; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=(($44)|0)==0; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($45) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $55 = 0;__label__ = 14; break; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $48=$2; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49=$2; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=(($49+24)|0); //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=HEAP32[(($50)>>2)]; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52=$51; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $53=_segment_holding($48, $52); //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55 = $53;__label__ = 14; break; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $55; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $ss=$55; //@line 3913 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $asize=0; //@line 3914 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$ss; //@line 3917 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=(($56)|0)==0; //@line 3917 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($57) { __label__ = 15; break; } else { __label__ = 23; break; } //@line 3917 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $59=_sbrk(0); //@line 3918 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $base=$59; //@line 3918 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=$base; //@line 3919 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=(($60)|0)!=-1; //@line 3919 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($61) { __label__ = 16; break; } else { __label__ = 22; break; } //@line 3919 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $63=$3; //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=((($63)+(48))|0); //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $65=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $66=((($65)-(1))|0); //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $67=((($64)+($66))|0); //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)-(1))|0); //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=$69 ^ -1; //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=$67 & $70; //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $asize=$71; //@line 3920 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $72=$base; //@line 3922 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73=$72; //@line 3922 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3922 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=((($74)-(1))|0); //@line 3922 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=$73 & $75; //@line 3922 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $77=(($76)|0)==0; //@line 3922 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($77) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 3922 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $79=$base; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=$79; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=((($81)-(1))|0); //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=((($80)+($82))|0); //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $85=((($84)-(1))|0); //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $86=$85 ^ -1; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=$83 & $86; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=$base; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=$88; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $90=((($87)-($89))|0); //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=$asize; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=((($91)+($90))|0); //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $asize=$92; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 3923 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $94=$asize; //@line 3925 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=(($94)>>>0) < 2147483647; //@line 3925 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($95) { __label__ = 19; break; } else { __label__ = 21; break; } //@line 3925 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $97=$asize; //@line 3926 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=_sbrk($97); //@line 3926 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $br=$98; //@line 3926 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $99=$base; //@line 3926 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $100=(($98)|0)==(($99)|0); //@line 3926 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($100) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 3926 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $102=$base; //@line 3927 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tbase=$102; //@line 3927 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=$asize; //@line 3928 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tsize=$103; //@line 3928 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 3929 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 21: 
      __label__ = 22; break; //@line 3930 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 22: 
      __label__ = 27; break; //@line 3931 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $107=$3; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=$2; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $109=(($108+12)|0); //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $110=HEAP32[(($109)>>2)]; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $111=((($107)-($110))|0); //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $112=((($111)+(48))|0); //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $114=((($113)-(1))|0); //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $115=((($112)+($114))|0); //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $116=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $117=((($116)-(1))|0); //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $118=$117 ^ -1; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $119=$115 & $118; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $asize=$119; //@line 3934 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $120=$asize; //@line 3936 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $121=(($120)>>>0) < 2147483647; //@line 3936 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($121) { __label__ = 24; break; } else { __label__ = 26; break; } //@line 3936 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $123=$asize; //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $124=_sbrk($123); //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $br=$124; //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $125=$ss; //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $126=(($125)|0); //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $127=HEAP32[(($126)>>2)]; //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=$ss; //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=(($128+4)|0); //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $130=HEAP32[(($129)>>2)]; //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $131=(($127+$130)|0); //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $132=(($124)|0)==(($131)|0); //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($132) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 3937 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $134=$br; //@line 3938 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tbase=$134; //@line 3938 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=$asize; //@line 3939 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tsize=$135; //@line 3939 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 3940 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      __label__ = 27; break;
    case 27: 
      var $138=$tbase; //@line 3943 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $139=(($138)|0)==-1; //@line 3943 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($139) { __label__ = 28; break; } else { __label__ = 42; break; } //@line 3943 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 28: 
      var $141=$br; //@line 3944 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $142=(($141)|0)!=-1; //@line 3944 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($142) { __label__ = 29; break; } else { __label__ = 38; break; } //@line 3944 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $144=$asize; //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $145=(($144)>>>0) < 2147483647; //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($145) { __label__ = 30; break; } else { __label__ = 37; break; } //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $147=$asize; //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $148=$3; //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $149=((($148)+(48))|0); //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $150=(($147)>>>0) < (($149)>>>0); //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($150) { __label__ = 31; break; } else { __label__ = 37; break; } //@line 3945 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $152=$3; //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=((($152)+(48))|0); //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=$asize; //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $155=((($153)-($154))|0); //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $156=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $157=((($156)-(1))|0); //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $158=((($155)+($157))|0); //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $159=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $160=((($159)-(1))|0); //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $161=$160 ^ -1; //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $162=$158 & $161; //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $esize=$162; //@line 3947 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $163=$esize; //@line 3948 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $164=(($163)>>>0) < 2147483647; //@line 3948 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($164) { __label__ = 32; break; } else { __label__ = 36; break; } //@line 3948 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $166=$esize; //@line 3949 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $167=_sbrk($166); //@line 3949 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $end=$167; //@line 3949 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $168=$end; //@line 3950 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $169=(($168)|0)!=-1; //@line 3950 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($169) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 3950 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $171=$esize; //@line 3951 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $172=$asize; //@line 3951 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $173=((($172)+($171))|0); //@line 3951 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $asize=$173; //@line 3951 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break; //@line 3951 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $175=$asize; //@line 3953 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $176=(((-$175))|0); //@line 3953 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $177=_sbrk($176); //@line 3953 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $br=-1; //@line 3954 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 35; break;
    case 35: 
      __label__ = 36; break; //@line 3956 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      __label__ = 37; break; //@line 3957 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 37: 
      __label__ = 38; break; //@line 3958 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $182=$br; //@line 3959 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183=(($182)|0)!=-1; //@line 3959 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($183) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 3959 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 39: 
      var $185=$br; //@line 3960 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tbase=$185; //@line 3960 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $186=$asize; //@line 3961 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tsize=$186; //@line 3961 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break; //@line 3962 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      var $188=$2; //@line 3964 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $189=(($188+440)|0); //@line 3964 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $190=HEAP32[(($189)>>2)]; //@line 3964 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $191=$190 | 4; //@line 3964 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($189)>>2)]=$191; //@line 3964 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break;
    case 41: 
      __label__ = 42; break; //@line 3965 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 42: 
      __label__ = 43; break; //@line 3968 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $195=$tbase; //@line 3982 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $196=(($195)|0)==-1; //@line 3982 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($196) { __label__ = 44; break; } else { __label__ = 53; break; } //@line 3982 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $198=$3; //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $199=((($198)+(48))|0); //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $200=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $201=((($200)-(1))|0); //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $202=((($199)+($201))|0); //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $204=((($203)-(1))|0); //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $205=$204 ^ -1; //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $206=$202 & $205; //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $asize1=$206; //@line 3983 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=$asize1; //@line 3984 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=(($207)>>>0) < 2147483647; //@line 3984 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($208) { __label__ = 45; break; } else { __label__ = 52; break; } //@line 3984 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 45: 
      $br2=-1; //@line 3985 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $end3=-1; //@line 3986 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $210=$asize1; //@line 3988 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $211=_sbrk($210); //@line 3988 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $br2=$211; //@line 3988 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $212=_sbrk(0); //@line 3989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $end3=$212; //@line 3989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $213=$br2; //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $214=(($213)|0)!=-1; //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($214) { __label__ = 46; break; } else { __label__ = 51; break; } //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $216=$end3; //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $217=(($216)|0)!=-1; //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($217) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $219=$br2; //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $220=$end3; //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $221=(($219)>>>0) < (($220)>>>0); //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($221) { __label__ = 48; break; } else { __label__ = 51; break; } //@line 3991 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $223=$end3; //@line 3992 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $224=$br2; //@line 3992 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $225=$223; //@line 3992 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $226=$224; //@line 3992 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $227=((($225)-($226))|0); //@line 3992 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $ssize=$227; //@line 3992 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $228=$ssize; //@line 3993 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $229=$3; //@line 3993 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230=((($229)+(40))|0); //@line 3993 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $231=(($228)>>>0) > (($230)>>>0); //@line 3993 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($231) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 3993 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $233=$br2; //@line 3994 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tbase=$233; //@line 3994 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $234=$ssize; //@line 3995 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tsize=$234; //@line 3995 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 3996 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 50: 
      __label__ = 51; break; //@line 3997 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 51: 
      __label__ = 52; break; //@line 3998 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break; //@line 3999 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 53: 
      var $239=$tbase; //@line 4001 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $240=(($239)|0)!=-1; //@line 4001 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($240) { __label__ = 54; break; } else { __label__ = 92; break; } //@line 4001 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $242=$tsize; //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $243=$2; //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $244=(($243+432)|0); //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $245=HEAP32[(($244)>>2)]; //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $246=((($245)+($242))|0); //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($244)>>2)]=$246; //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=$2; //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $248=(($247+436)|0); //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $249=HEAPU32[(($248)>>2)]; //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $250=(($246)>>>0) > (($249)>>>0); //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($250) { __label__ = 55; break; } else { __label__ = 56; break; } //@line 4003 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 55: 
      var $252=$2; //@line 4004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $253=(($252+432)|0); //@line 4004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $254=HEAP32[(($253)>>2)]; //@line 4004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $255=$2; //@line 4004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $256=(($255+436)|0); //@line 4004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($256)>>2)]=$254; //@line 4004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 56; break; //@line 4004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 56: 
      var $258=$2; //@line 4006 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $259=(($258+24)|0); //@line 4006 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $260=HEAP32[(($259)>>2)]; //@line 4006 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $261=(($260)|0)!=0; //@line 4006 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($261) { __label__ = 64; break; } else { __label__ = 57; break; } //@line 4006 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $263=$2; //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $264=(($263+16)|0); //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $265=HEAP32[(($264)>>2)]; //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $266=(($265)|0)==0; //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($266) { __label__ = 59; break; } else { __label__ = 58; break; } //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 58: 
      var $268=$tbase; //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $269=$2; //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $270=(($269+16)|0); //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $271=HEAPU32[(($270)>>2)]; //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $272=(($268)>>>0) < (($271)>>>0); //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($272) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 4007 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $274=$tbase; //@line 4008 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $275=$2; //@line 4008 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $276=(($275+16)|0); //@line 4008 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($276)>>2)]=$274; //@line 4008 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 60; break; //@line 4008 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $278=$tbase; //@line 4009 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=$2; //@line 4009 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $280=(($279+444)|0); //@line 4009 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $281=(($280)|0); //@line 4009 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($281)>>2)]=$278; //@line 4009 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $282=$tsize; //@line 4010 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $283=$2; //@line 4010 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $284=(($283+444)|0); //@line 4010 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $285=(($284+4)|0); //@line 4010 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($285)>>2)]=$282; //@line 4010 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $286=$mmap_flag; //@line 4011 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $287=$2; //@line 4011 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $288=(($287+444)|0); //@line 4011 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $289=(($288+12)|0); //@line 4011 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($289)>>2)]=$286; //@line 4011 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $290=HEAP32[((((_mparams)|0))>>2)]; //@line 4012 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $291=$2; //@line 4012 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $292=(($291+36)|0); //@line 4012 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($292)>>2)]=$290; //@line 4012 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $293=$2; //@line 4013 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $294=(($293+32)|0); //@line 4013 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($294)>>2)]=-1; //@line 4013 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $295=$2; //@line 4014 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      _init_bins($295); //@line 4014 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $296=$2; //@line 4016 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $297=(($296)|0)==((__gm_)|0); //@line 4016 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($297) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 4016 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $299=$2; //@line 4017 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $300=$tbase; //@line 4017 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $301=$300; //@line 4017 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $302=$tsize; //@line 4017 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $303=((($302)-(40))|0); //@line 4017 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      _init_top($299, $301, $303); //@line 4017 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4017 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $305=$2; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $306=$305; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $307=((($306)-(8))|0); //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $308=$307; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $309=$308; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $310=$2; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $311=$310; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $312=((($311)-(8))|0); //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $313=$312; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $314=(($313+4)|0); //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $315=HEAP32[(($314)>>2)]; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $316=$315 & -8; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $317=(($309+$316)|0); //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $318=$317; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mn=$318; //@line 4022 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $319=$2; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $320=$mn; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $321=$tbase; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $322=$tsize; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $323=(($321+$322)|0); //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=$mn; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $325=$324; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326=$323; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $327=$325; //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $328=((($326)-($327))|0); //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $329=((($328)-(40))|0); //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      _init_top($319, $320, $329); //@line 4023 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break;
    case 63: 
      __label__ = 89; break; //@line 4025 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 64: 
      var $332=$2; //@line 4029 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $333=(($332+444)|0); //@line 4029 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$333; //@line 4029 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 65: 
      var $335=$sp; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $336=(($335)|0)!=0; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($336) { __label__ = 66; break; } else { var $348 = 0;__label__ = 67; break; } //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 66: 
      var $338=$tbase; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $339=$sp; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $340=(($339)|0); //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $341=HEAP32[(($340)>>2)]; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $342=$sp; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $343=(($342+4)|0); //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $344=HEAP32[(($343)>>2)]; //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $345=(($341+$344)|0); //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $346=(($338)|0)!=(($345)|0); //@line 4031 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $348 = $346;__label__ = 67; break;
    case 67: 
      var $348;
      if ($348) { __label__ = 68; break; } else { __label__ = 69; break; }
    case 68: 
      var $350=$sp; //@line 4032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+8)|0); //@line 4032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $352=HEAP32[(($351)>>2)]; //@line 4032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$352; //@line 4032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 69: 
      var $354=$sp; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $355=(($354)|0)!=0; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($355) { __label__ = 70; break; } else { __label__ = 75; break; } //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 70: 
      var $357=$sp; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $358=(($357+12)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $359=HEAP32[(($358)>>2)]; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $360=$359 & 8; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $361=(($360)|0)!=0; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($361) { __label__ = 75; break; } else { __label__ = 71; break; } //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $363=$sp; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $364=(($363+12)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $365=HEAP32[(($364)>>2)]; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $366=$365 & 0; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $367=$mmap_flag; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=(($366)|0)==(($367)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($368) { __label__ = 72; break; } else { __label__ = 75; break; } //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $370=$2; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $371=(($370+24)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $372=HEAP32[(($371)>>2)]; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $373=$372; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $374=$sp; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $375=(($374)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $376=HEAPU32[(($375)>>2)]; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $377=(($373)>>>0) >= (($376)>>>0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($377) { __label__ = 73; break; } else { __label__ = 75; break; } //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $379=$2; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $380=(($379+24)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $381=HEAP32[(($380)>>2)]; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $382=$381; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $383=$sp; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $384=(($383)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($384)>>2)]; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=$sp; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $387=(($386+4)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $388=HEAP32[(($387)>>2)]; //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $389=(($385+$388)|0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $390=(($382)>>>0) < (($389)>>>0); //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($390) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 4033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $392=$tsize; //@line 4037 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $393=$sp; //@line 4037 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $394=(($393+4)|0); //@line 4037 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $395=HEAP32[(($394)>>2)]; //@line 4037 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $396=((($395)+($392))|0); //@line 4037 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($394)>>2)]=$396; //@line 4037 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $397=$2; //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $398=$2; //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $399=(($398+24)|0); //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $400=HEAP32[(($399)>>2)]; //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $401=$2; //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $402=(($401+12)|0); //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $403=HEAP32[(($402)>>2)]; //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $404=$tsize; //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $405=((($403)+($404))|0); //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      _init_top($397, $400, $405); //@line 4038 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 88; break; //@line 4039 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 75: 
      var $407=$tbase; //@line 4041 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $408=$2; //@line 4041 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $409=(($408+16)|0); //@line 4041 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $410=HEAPU32[(($409)>>2)]; //@line 4041 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $411=(($407)>>>0) < (($410)>>>0); //@line 4041 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($411) { __label__ = 76; break; } else { __label__ = 77; break; } //@line 4041 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 76: 
      var $413=$tbase; //@line 4042 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $414=$2; //@line 4042 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $415=(($414+16)|0); //@line 4042 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($415)>>2)]=$413; //@line 4042 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 77; break; //@line 4042 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 77: 
      var $417=$2; //@line 4043 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $418=(($417+444)|0); //@line 4043 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$418; //@line 4043 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 78; break; //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $420=$sp; //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $421=(($420)|0)!=0; //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($421) { __label__ = 79; break; } else { var $431 = 0;__label__ = 80; break; } //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $423=$sp; //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $424=(($423)|0); //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $425=HEAP32[(($424)>>2)]; //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $426=$tbase; //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $427=$tsize; //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $428=(($426+$427)|0); //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $429=(($425)|0)!=(($428)|0); //@line 4044 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $431 = $429;__label__ = 80; break;
    case 80: 
      var $431;
      if ($431) { __label__ = 81; break; } else { __label__ = 82; break; }
    case 81: 
      var $433=$sp; //@line 4045 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $434=(($433+8)|0); //@line 4045 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $435=HEAP32[(($434)>>2)]; //@line 4045 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$435; //@line 4045 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 78; break; //@line 4045 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 82: 
      var $437=$sp; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $438=(($437)|0)!=0; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($438) { __label__ = 83; break; } else { __label__ = 86; break; } //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 83: 
      var $440=$sp; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $441=(($440+12)|0); //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $442=HEAP32[(($441)>>2)]; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $443=$442 & 8; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $444=(($443)|0)!=0; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($444) { __label__ = 86; break; } else { __label__ = 84; break; } //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 84: 
      var $446=$sp; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $447=(($446+12)|0); //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $448=HEAP32[(($447)>>2)]; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $449=$448 & 0; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $450=$mmap_flag; //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $451=(($449)|0)==(($450)|0); //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($451) { __label__ = 85; break; } else { __label__ = 86; break; } //@line 4046 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 85: 
      var $453=$sp; //@line 4049 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $454=(($453)|0); //@line 4049 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $455=HEAP32[(($454)>>2)]; //@line 4049 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $oldbase=$455; //@line 4049 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $456=$tbase; //@line 4050 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $457=$sp; //@line 4050 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $458=(($457)|0); //@line 4050 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($458)>>2)]=$456; //@line 4050 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $459=$tsize; //@line 4051 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $460=$sp; //@line 4051 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $461=(($460+4)|0); //@line 4051 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $462=HEAP32[(($461)>>2)]; //@line 4051 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $463=((($462)+($459))|0); //@line 4051 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($461)>>2)]=$463; //@line 4051 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $464=$2; //@line 4052 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $465=$tbase; //@line 4052 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $466=$oldbase; //@line 4052 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $467=$3; //@line 4052 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $468=_prepend_alloc($464, $465, $466, $467); //@line 4052 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $1=$468; //@line 4052 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4052 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 86: 
      var $470=$2; //@line 4055 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $471=$tbase; //@line 4055 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $472=$tsize; //@line 4055 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $473=$mmap_flag; //@line 4055 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      _add_segment($470, $471, $472, $473); //@line 4055 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 87; break;
    case 87: 
      __label__ = 88; break;
    case 88: 
      __label__ = 89; break;
    case 89: 
      var $477=$3; //@line 4059 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $478=$2; //@line 4059 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $479=(($478+12)|0); //@line 4059 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $480=HEAPU32[(($479)>>2)]; //@line 4059 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $481=(($477)>>>0) < (($480)>>>0); //@line 4059 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($481) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 4059 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $483=$3; //@line 4060 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $484=$2; //@line 4060 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $485=(($484+12)|0); //@line 4060 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $486=HEAP32[(($485)>>2)]; //@line 4060 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $487=((($486)-($483))|0); //@line 4060 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($485)>>2)]=$487; //@line 4060 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rsize=$487; //@line 4060 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $488=$2; //@line 4061 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $489=(($488+24)|0); //@line 4061 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $490=HEAP32[(($489)>>2)]; //@line 4061 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$490; //@line 4061 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $491=$p; //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $492=$491; //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $493=$3; //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $494=(($492+$493)|0); //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $495=$494; //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $496=$2; //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $497=(($496+24)|0); //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($497)>>2)]=$495; //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $r=$495; //@line 4062 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $498=$rsize; //@line 4063 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $499=$498 | 1; //@line 4063 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $500=$r; //@line 4063 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $501=(($500+4)|0); //@line 4063 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($501)>>2)]=$499; //@line 4063 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $502=$3; //@line 4064 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $503=$502 | 1; //@line 4064 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $504=$503 | 2; //@line 4064 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $505=$p; //@line 4064 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $506=(($505+4)|0); //@line 4064 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($506)>>2)]=$504; //@line 4064 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $507=$p; //@line 4067 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $508=$507; //@line 4067 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $509=(($508+8)|0); //@line 4067 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $1=$509; //@line 4067 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4067 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 91: 
      __label__ = 92; break; //@line 4069 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $512=___errno(); //@line 4071 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($512)>>2)]=12; //@line 4071 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $1=0; //@line 4072 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4072 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 93: 
      var $514=$1; //@line 4073 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $514; //@line 4073 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_alloc["X"]=1;

function _free($mem) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $p;
      var $psize;
      var $next;
      var $prevsize;
      var $prev;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F1;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F2;
      var $B3;
      var $I4;
      var $TP5;
      var $XP6;
      var $R7;
      var $F8;
      var $RP9;
      var $CP10;
      var $H11;
      var $C012;
      var $C113;
      var $I14;
      var $B15;
      var $F16;
      var $tp;
      var $H17;
      var $I18;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K19;
      var $C;
      var $F20;
      $1=$mem;
      var $2=$1; //@line 4740 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $3=(($2)|0)!=0; //@line 4740 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($3) { __label__ = 3; break; } else { __label__ = 197; break; } //@line 4740 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $5=$1; //@line 4741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=((($5)-(8))|0); //@line 4741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=$6; //@line 4741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$7; //@line 4741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=$p; //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=$8; //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=(($9)>>>0) >= (($10)>>>0); //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($11) { __label__ = 4; break; } else { var $19 = 0;__label__ = 5; break; } //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $13=$p; //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=(($13+4)|0); //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[(($14)>>2)]; //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=$15 & 3; //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=(($16)|0)!=1; //@line 4753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19 = $17;__label__ = 5; break;
    case 5: 
      var $19;
      var $20=(($19)&1);
      var $21=(($20)==(1));
      var $22=(($21)|0)!=0;
      if ($22) { __label__ = 6; break; } else { __label__ = 194; break; }
    case 6: 
      var $24=$p; //@line 4754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=(($24+4)|0); //@line 4754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($25)>>2)]; //@line 4754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$26 & -8; //@line 4754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$27; //@line 4754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=$p; //@line 4755 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=$28; //@line 4755 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=$psize; //@line 4755 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=(($29+$30)|0); //@line 4755 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=$31; //@line 4755 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $next=$32; //@line 4755 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=$p; //@line 4756 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=(($33+4)|0); //@line 4756 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=HEAP32[(($34)>>2)]; //@line 4756 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=$35 & 1; //@line 4756 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=(($36)|0)!=0; //@line 4756 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($37) { __label__ = 78; break; } else { __label__ = 7; break; } //@line 4756 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $39=$p; //@line 4757 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=(($39)|0); //@line 4757 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=HEAP32[(($40)>>2)]; //@line 4757 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $prevsize=$41; //@line 4757 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=$p; //@line 4758 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+4)|0); //@line 4758 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[(($43)>>2)]; //@line 4758 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=$44 & 3; //@line 4758 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=(($45)|0)==0; //@line 4758 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($46) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4758 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $48=$prevsize; //@line 4759 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49=((($48)+(16))|0); //@line 4759 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=$psize; //@line 4759 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=((($50)+($49))|0); //@line 4759 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$51; //@line 4759 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4762 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $53=$p; //@line 4765 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=$53; //@line 4765 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=$prevsize; //@line 4765 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=(((-$55))|0); //@line 4765 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=(($54+$56)|0); //@line 4765 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $58=$57; //@line 4765 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $prev=$58; //@line 4765 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=$prevsize; //@line 4766 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=$psize; //@line 4766 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=((($60)+($59))|0); //@line 4766 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$61; //@line 4766 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $62=$prev; //@line 4767 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$62; //@line 4767 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=$prev; //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=$63; //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $65=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $66=(($64)>>>0) >= (($65)>>>0); //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $67=(($66)&1); //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=(($67)==(1)); //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=(($68)|0)!=0; //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($69) { __label__ = 10; break; } else { __label__ = 75; break; } //@line 4768 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $71=$p; //@line 4769 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4769 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73=(($71)|0)!=(($72)|0); //@line 4769 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($73) { __label__ = 11; break; } else { __label__ = 71; break; } //@line 4769 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $75=$prevsize; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=$75 >>> 3; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $77=(($76)>>>0) < 32; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($77) { __label__ = 12; break; } else { __label__ = 24; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $79=$p; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=(($79+8)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($80)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$81; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=$p; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=(($82+12)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=HEAP32[(($83)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B=$84; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $85=$prevsize; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $86=$85 >>> 3; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I=$86; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=$F; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=$B; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=(($87)|0)==(($88)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($89) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $91=$I; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=1 << $91; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $93=$92 ^ -1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $94=HEAP32[((((__gm_)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=$94 & $93; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$95; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $97=$F; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=$I; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $99=$98 << 1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $100=((((__gm_+40)|0)+($99<<2))|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=$100; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=$101; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=(($97)|0)==(($102)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($103) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $105=$F; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $106=$105; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=(($106)>>>0) >= (($107)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 16; break; } else { var $125 = 0;__label__ = 19; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $110=$B; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $111=$I; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $112=$111 << 1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=((((__gm_+40)|0)+($112<<2))|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $114=$113; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $115=$114; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $116=(($110)|0)==(($115)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($116) { var $123 = 1;__label__ = 18; break; } else { __label__ = 17; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $118=$B; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $119=$118; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $120=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $121=(($119)>>>0) >= (($120)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $123 = $121;__label__ = 18; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $123;
      var $125 = $123;__label__ = 19; break;
    case 19: 
      var $125;
      var $126=(($125)&1);
      var $127=(($126)==(1));
      var $128=(($127)|0)!=0;
      if ($128) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: 
      var $130=$B; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $131=$F; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $132=(($131+12)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($132)>>2)]=$130; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $133=$F; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $134=$B; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=(($134+8)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($135)>>2)]=$133; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 22; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 21: 
      _abort(); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 22: 
      __label__ = 23; break;
    case 23: 
      __label__ = 70; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $140=$p; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $141=$140; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $TP=$141; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $142=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $143=(($142+24)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $144=HEAP32[(($143)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $XP=$144; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $145=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $146=(($145+12)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $147=HEAP32[(($146)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $148=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $149=(($147)|0)!=(($148)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($149) { __label__ = 25; break; } else { __label__ = 29; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $151=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $152=(($151+8)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=HEAP32[(($152)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F1=$153; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $155=(($154+12)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $156=HEAP32[(($155)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$156; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $157=$F1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $159=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $160=(($158)>>>0) >= (($159)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $161=(($160)&1); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $162=(($161)==(1)); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $163=(($162)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($163) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $165=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $166=$F1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $167=(($166+12)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($167)>>2)]=$165; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $168=$F1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $169=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $170=(($169+8)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($170)>>2)]=$168; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 27: 
      _abort(); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 41; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $174=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $175=(($174+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $176=(($175+4)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$176; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $177=HEAP32[(($176)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$177; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $178=(($177)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($178) { __label__ = 31; break; } else { __label__ = 30; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $180=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $181=(($180+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $182=(($181)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$182; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183=HEAP32[(($182)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$183; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $184=(($183)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($184) { __label__ = 31; break; } else { __label__ = 40; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      __label__ = 32; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $187=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $188=(($187+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $189=(($188+4)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$189; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $190=HEAP32[(($189)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $191=(($190)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($191) { var $199 = 1;__label__ = 34; break; } else { __label__ = 33; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $193=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $194=(($193+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $195=(($194)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$195; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $196=HEAP32[(($195)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $197=(($196)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $199 = $197;__label__ = 34; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $199;
      if ($199) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $201=$CP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$201; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $202=HEAP32[(($201)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$202; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $204=$RP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $205=$204; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $206=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=(($205)>>>0) >= (($206)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=(($207)&1); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $209=(($208)==(1)); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $210=(($209)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($210) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $212=$RP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($212)>>2)]=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 38: 
      _abort(); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 39: 
      __label__ = 40; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      __label__ = 41; break;
    case 41: 
      var $217=$XP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $218=(($217)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($218) { __label__ = 42; break; } else { __label__ = 69; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $220=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $221=(($220+28)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $222=HEAP32[(($221)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $223=((((__gm_+304)|0)+($222<<2))|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H=$223; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $224=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $225=$H; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $226=HEAP32[(($225)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $227=(($224)|0)==(($226)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($227) { __label__ = 43; break; } else { __label__ = 46; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $229=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230=$H; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($230)>>2)]=$229; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $231=(($229)|0)==0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($231) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $233=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $234=(($233+28)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $235=HEAP32[(($234)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $236=1 << $235; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $237=$236 ^ -1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $238=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $239=$238 & $237; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$239; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 45: 
      __label__ = 53; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $242=$XP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $243=$242; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $244=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $245=(($243)>>>0) >= (($244)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $246=(($245)&1); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=(($246)==(1)); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $248=(($247)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($248) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      var $250=$XP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $251=(($250+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $252=(($251)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $253=HEAP32[(($252)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $254=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $255=(($253)|0)==(($254)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($255) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $257=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $258=$XP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $259=(($258+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $260=(($259)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($260)>>2)]=$257; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $262=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $263=$XP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $264=(($263+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $265=(($264+4)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($265)>>2)]=$262; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break;
    case 50: 
      __label__ = 52; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 51: 
      _abort(); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 52: 
      __label__ = 53; break;
    case 53: 
      var $270=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $271=(($270)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($271) { __label__ = 54; break; } else { __label__ = 68; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 54: 
      var $273=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $274=$273; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $275=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $276=(($274)>>>0) >= (($275)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $277=(($276)&1); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $278=(($277)==(1)); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=(($278)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($279) { __label__ = 55; break; } else { __label__ = 66; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 55: 
      var $281=$XP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $282=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $283=(($282+24)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($283)>>2)]=$281; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $284=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $285=(($284+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $286=(($285)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $287=HEAP32[(($286)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C0=$287; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $288=(($287)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($288) { __label__ = 56; break; } else { __label__ = 60; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 56: 
      var $290=$C0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $291=$290; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $292=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $293=(($291)>>>0) >= (($292)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $294=(($293)&1); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $295=(($294)==(1)); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $296=(($295)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($296) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $298=$C0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $299=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $300=(($299+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $301=(($300)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($301)>>2)]=$298; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $302=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $303=$C0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $304=(($303+24)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($304)>>2)]=$302; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 59; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 58: 
      _abort(); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 59: 
      __label__ = 60; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 60: 
      var $308=$TP; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $309=(($308+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $310=(($309+4)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $311=HEAP32[(($310)>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C1=$311; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $312=(($311)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($312) { __label__ = 61; break; } else { __label__ = 65; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $314=$C1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $315=$314; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $316=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $317=(($315)>>>0) >= (($316)>>>0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $318=(($317)&1); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $319=(($318)==(1)); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $320=(($319)|0)!=0; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($320) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $322=$C1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $323=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=(($323+16)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $325=(($324+4)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($325)>>2)]=$322; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326=$R; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $327=$C1; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $328=(($327+24)|0); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($328)>>2)]=$326; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 63: 
      _abort(); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 64: 
      __label__ = 65; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 65: 
      __label__ = 67; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 66: 
      _abort(); //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 67: 
      __label__ = 68; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 68: 
      __label__ = 69; break; //@line 4770 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break;
    case 70: 
      __label__ = 74; break; //@line 4771 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $338=$next; //@line 4772 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $339=(($338+4)|0); //@line 4772 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $340=HEAP32[(($339)>>2)]; //@line 4772 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $341=$340 & 3; //@line 4772 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $342=(($341)|0)==3; //@line 4772 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($342) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 4772 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $344=$psize; //@line 4773 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$344; //@line 4773 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $345=$next; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $346=(($345+4)|0); //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $347=HEAP32[(($346)>>2)]; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $348=$347 & -2; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($346)>>2)]=$348; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $349=$psize; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $350=$349 | 1; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=$p; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $352=(($351+4)|0); //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($352)>>2)]=$350; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $353=$psize; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $354=$p; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $355=$354; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $356=$psize; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $357=(($355+$356)|0); //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $358=$357; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $359=(($358)|0); //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($359)>>2)]=$353; //@line 4774 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4775 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 73: 
      __label__ = 74; break;
    case 74: 
      __label__ = 76; break; //@line 4777 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 75: 
      __label__ = 195; break; //@line 4779 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 76: 
      __label__ = 77; break;
    case 77: 
      __label__ = 78; break; //@line 4781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $366=$p; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $367=$366; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=$next; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $369=$368; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $370=(($367)>>>0) < (($369)>>>0); //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($370) { __label__ = 79; break; } else { var $378 = 0;__label__ = 80; break; } //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $372=$next; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $373=(($372+4)|0); //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $374=HEAP32[(($373)>>2)]; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $375=$374 & 1; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $376=(($375)|0)!=0; //@line 4783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $378 = $376;__label__ = 80; break;
    case 80: 
      var $378;
      var $379=(($378)&1);
      var $380=(($379)==(1));
      var $381=(($380)|0)!=0;
      if ($381) { __label__ = 81; break; } else { __label__ = 193; break; }
    case 81: 
      var $383=$next; //@line 4784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $384=(($383+4)|0); //@line 4784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($384)>>2)]; //@line 4784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=$385 & 2; //@line 4784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $387=(($386)|0)!=0; //@line 4784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($387) { __label__ = 154; break; } else { __label__ = 82; break; } //@line 4784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 82: 
      var $389=$next; //@line 4785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $390=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $391=(($389)|0)==(($390)|0); //@line 4785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($391) { __label__ = 83; break; } else { __label__ = 88; break; } //@line 4785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 83: 
      var $393=$psize; //@line 4786 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $394=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4786 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $395=((($394)+($393))|0); //@line 4786 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$395; //@line 4786 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tsize=$395; //@line 4786 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $396=$p; //@line 4787 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$396; //@line 4787 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $397=$tsize; //@line 4788 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $398=$397 | 1; //@line 4788 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $399=$p; //@line 4788 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $400=(($399+4)|0); //@line 4788 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($400)>>2)]=$398; //@line 4788 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $401=$p; //@line 4789 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $402=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4789 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $403=(($401)|0)==(($402)|0); //@line 4789 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($403) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 4789 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 84: 
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4790 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4791 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 4792 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 85: 
      var $406=$tsize; //@line 4793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $407=HEAPU32[((((__gm_+28)|0))>>2)]; //@line 4793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $408=(($406)>>>0) > (($407)>>>0); //@line 4793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($408) { __label__ = 86; break; } else { __label__ = 87; break; } //@line 4793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 86: 
      var $410=_sys_trim(__gm_, 0); //@line 4794 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 87; break; //@line 4794 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 87: 
      __label__ = 196; break; //@line 4795 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $413=$next; //@line 4797 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $414=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4797 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $415=(($413)|0)==(($414)|0); //@line 4797 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($415) { __label__ = 89; break; } else { __label__ = 90; break; } //@line 4797 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $417=$psize; //@line 4798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $418=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $419=((($418)+($417))|0); //@line 4798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$419; //@line 4798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $dsize=$419; //@line 4798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $420=$p; //@line 4799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$420; //@line 4799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $421=$dsize; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $422=$421 | 1; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $423=$p; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $424=(($423+4)|0); //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($424)>>2)]=$422; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $425=$dsize; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $426=$p; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $427=$426; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $428=$dsize; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $429=(($427+$428)|0); //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $430=$429; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $431=(($430)|0); //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($431)>>2)]=$425; //@line 4800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $433=$next; //@line 4804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $434=(($433+4)|0); //@line 4804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $435=HEAP32[(($434)>>2)]; //@line 4804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $436=$435 & -8; //@line 4804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nsize=$436; //@line 4804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $437=$nsize; //@line 4805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $438=$psize; //@line 4805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $439=((($438)+($437))|0); //@line 4805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$439; //@line 4805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $440=$nsize; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $441=$440 >>> 3; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $442=(($441)>>>0) < 32; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($442) { __label__ = 91; break; } else { __label__ = 103; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $444=$next; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $445=(($444+8)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $446=HEAP32[(($445)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F2=$446; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $447=$next; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $448=(($447+12)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $449=HEAP32[(($448)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B3=$449; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $450=$nsize; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $451=$450 >>> 3; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I4=$451; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $452=$F2; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $453=$B3; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $454=(($452)|0)==(($453)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($454) { __label__ = 92; break; } else { __label__ = 93; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $456=$I4; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $457=1 << $456; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $458=$457 ^ -1; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $459=HEAP32[((((__gm_)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $460=$459 & $458; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$460; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 102; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 93: 
      var $462=$F2; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $463=$I4; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $464=$463 << 1; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $465=((((__gm_+40)|0)+($464<<2))|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $466=$465; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $467=$466; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $468=(($462)|0)==(($467)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($468) { __label__ = 95; break; } else { __label__ = 94; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 94: 
      var $470=$F2; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $471=$470; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $472=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $473=(($471)>>>0) >= (($472)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($473) { __label__ = 95; break; } else { var $490 = 0;__label__ = 98; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 95: 
      var $475=$B3; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $476=$I4; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $477=$476 << 1; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $478=((((__gm_+40)|0)+($477<<2))|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $479=$478; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $480=$479; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $481=(($475)|0)==(($480)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($481) { var $488 = 1;__label__ = 97; break; } else { __label__ = 96; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 96: 
      var $483=$B3; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $484=$483; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $485=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $486=(($484)>>>0) >= (($485)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $488 = $486;__label__ = 97; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 97: 
      var $488;
      var $490 = $488;__label__ = 98; break;
    case 98: 
      var $490;
      var $491=(($490)&1);
      var $492=(($491)==(1));
      var $493=(($492)|0)!=0;
      if ($493) { __label__ = 99; break; } else { __label__ = 100; break; }
    case 99: 
      var $495=$B3; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $496=$F2; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $497=(($496+12)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($497)>>2)]=$495; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $498=$F2; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $499=$B3; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $500=(($499+8)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($500)>>2)]=$498; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 101; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 100: 
      _abort(); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 101: 
      __label__ = 102; break;
    case 102: 
      __label__ = 149; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 103: 
      var $505=$next; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $506=$505; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $TP5=$506; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $507=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $508=(($507+24)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $509=HEAP32[(($508)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $XP6=$509; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $510=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $511=(($510+12)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $512=HEAP32[(($511)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $513=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $514=(($512)|0)!=(($513)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($514) { __label__ = 104; break; } else { __label__ = 108; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 104: 
      var $516=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $517=(($516+8)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $518=HEAP32[(($517)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F8=$518; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $519=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $520=(($519+12)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $521=HEAP32[(($520)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R7=$521; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $522=$F8; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $523=$522; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $524=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $525=(($523)>>>0) >= (($524)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $526=(($525)&1); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $527=(($526)==(1)); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $528=(($527)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($528) { __label__ = 105; break; } else { __label__ = 106; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 105: 
      var $530=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $531=$F8; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $532=(($531+12)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($532)>>2)]=$530; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $533=$F8; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $534=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $535=(($534+8)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($535)>>2)]=$533; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 107; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 106: 
      _abort(); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 107: 
      __label__ = 120; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 108: 
      var $539=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $540=(($539+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $541=(($540+4)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP9=$541; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $542=HEAP32[(($541)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R7=$542; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $543=(($542)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($543) { __label__ = 110; break; } else { __label__ = 109; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 109: 
      var $545=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $546=(($545+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $547=(($546)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP9=$547; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $548=HEAP32[(($547)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R7=$548; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $549=(($548)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($549) { __label__ = 110; break; } else { __label__ = 119; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 110: 
      __label__ = 111; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 111: 
      var $552=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $553=(($552+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $554=(($553+4)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP10=$554; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $555=HEAP32[(($554)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $556=(($555)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($556) { var $564 = 1;__label__ = 113; break; } else { __label__ = 112; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 112: 
      var $558=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $559=(($558+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $560=(($559)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP10=$560; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $561=HEAP32[(($560)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $562=(($561)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $564 = $562;__label__ = 113; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 113: 
      var $564;
      if ($564) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 114: 
      var $566=$CP10; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP9=$566; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $567=HEAP32[(($566)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R7=$567; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 111; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 115: 
      var $569=$RP9; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $570=$569; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $571=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $572=(($570)>>>0) >= (($571)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $573=(($572)&1); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $574=(($573)==(1)); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $575=(($574)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($575) { __label__ = 116; break; } else { __label__ = 117; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 116: 
      var $577=$RP9; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($577)>>2)]=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 118; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 117: 
      _abort(); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 118: 
      __label__ = 119; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 119: 
      __label__ = 120; break;
    case 120: 
      var $582=$XP6; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $583=(($582)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($583) { __label__ = 121; break; } else { __label__ = 148; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 121: 
      var $585=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $586=(($585+28)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $587=HEAP32[(($586)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $588=((((__gm_+304)|0)+($587<<2))|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H11=$588; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $589=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $590=$H11; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $591=HEAP32[(($590)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $592=(($589)|0)==(($591)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($592) { __label__ = 122; break; } else { __label__ = 125; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 122: 
      var $594=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $595=$H11; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($595)>>2)]=$594; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $596=(($594)|0)==0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($596) { __label__ = 123; break; } else { __label__ = 124; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 123: 
      var $598=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $599=(($598+28)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $600=HEAP32[(($599)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $601=1 << $600; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $602=$601 ^ -1; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $603=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $604=$603 & $602; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$604; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 124; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 124: 
      __label__ = 132; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 125: 
      var $607=$XP6; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $608=$607; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $609=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $610=(($608)>>>0) >= (($609)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $611=(($610)&1); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $612=(($611)==(1)); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $613=(($612)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($613) { __label__ = 126; break; } else { __label__ = 130; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 126: 
      var $615=$XP6; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $616=(($615+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $617=(($616)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $618=HEAP32[(($617)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $619=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $620=(($618)|0)==(($619)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($620) { __label__ = 127; break; } else { __label__ = 128; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 127: 
      var $622=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $623=$XP6; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $624=(($623+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $625=(($624)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($625)>>2)]=$622; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 129; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 128: 
      var $627=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $628=$XP6; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $629=(($628+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $630=(($629+4)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($630)>>2)]=$627; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 129; break;
    case 129: 
      __label__ = 131; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 130: 
      _abort(); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 131: 
      __label__ = 132; break;
    case 132: 
      var $635=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $636=(($635)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($636) { __label__ = 133; break; } else { __label__ = 147; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 133: 
      var $638=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $639=$638; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $640=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $641=(($639)>>>0) >= (($640)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $642=(($641)&1); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $643=(($642)==(1)); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $644=(($643)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($644) { __label__ = 134; break; } else { __label__ = 145; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 134: 
      var $646=$XP6; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $647=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $648=(($647+24)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($648)>>2)]=$646; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $649=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $650=(($649+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $651=(($650)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $652=HEAP32[(($651)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C012=$652; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $653=(($652)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($653) { __label__ = 135; break; } else { __label__ = 139; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 135: 
      var $655=$C012; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $656=$655; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $657=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $658=(($656)>>>0) >= (($657)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $659=(($658)&1); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $660=(($659)==(1)); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $661=(($660)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($661) { __label__ = 136; break; } else { __label__ = 137; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 136: 
      var $663=$C012; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $664=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $665=(($664+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $666=(($665)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($666)>>2)]=$663; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $667=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $668=$C012; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $669=(($668+24)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($669)>>2)]=$667; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 138; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 137: 
      _abort(); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 138: 
      __label__ = 139; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 139: 
      var $673=$TP5; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $674=(($673+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $675=(($674+4)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $676=HEAP32[(($675)>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C113=$676; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $677=(($676)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($677) { __label__ = 140; break; } else { __label__ = 144; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 140: 
      var $679=$C113; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $680=$679; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $681=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $682=(($680)>>>0) >= (($681)>>>0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $683=(($682)&1); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $684=(($683)==(1)); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $685=(($684)|0)!=0; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($685) { __label__ = 141; break; } else { __label__ = 142; break; } //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 141: 
      var $687=$C113; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $688=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $689=(($688+16)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $690=(($689+4)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($690)>>2)]=$687; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $691=$R7; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $692=$C113; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $693=(($692+24)|0); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($693)>>2)]=$691; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 143; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 142: 
      _abort(); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 143: 
      __label__ = 144; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 144: 
      __label__ = 146; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 145: 
      _abort(); //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 146: 
      __label__ = 147; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 147: 
      __label__ = 148; break; //@line 4806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 148: 
      __label__ = 149; break;
    case 149: 
      var $702=$psize; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $703=$702 | 1; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $704=$p; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $705=(($704+4)|0); //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($705)>>2)]=$703; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $706=$psize; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $707=$p; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $708=$707; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $709=$psize; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $710=(($708+$709)|0); //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $711=$710; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $712=(($711)|0); //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($712)>>2)]=$706; //@line 4807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $713=$p; //@line 4808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $714=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $715=(($713)|0)==(($714)|0); //@line 4808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($715) { __label__ = 150; break; } else { __label__ = 151; break; } //@line 4808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 150: 
      var $717=$psize; //@line 4809 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$717; //@line 4809 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 196; break; //@line 4810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 151: 
      __label__ = 152; break;
    case 152: 
      __label__ = 153; break;
    case 153: 
      __label__ = 155; break; //@line 4813 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 154: 
      var $722=$next; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $723=(($722+4)|0); //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $724=HEAP32[(($723)>>2)]; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $725=$724 & -2; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($723)>>2)]=$725; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $726=$psize; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $727=$726 | 1; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $728=$p; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $729=(($728+4)|0); //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($729)>>2)]=$727; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $730=$psize; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $731=$p; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $732=$731; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $733=$psize; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $734=(($732+$733)|0); //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $735=$734; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $736=(($735)|0); //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($736)>>2)]=$730; //@line 4815 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 155; break;
    case 155: 
      var $738=$psize; //@line 4817 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $739=$738 >>> 3; //@line 4817 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $740=(($739)>>>0) < 32; //@line 4817 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($740) { __label__ = 156; break; } else { __label__ = 163; break; } //@line 4817 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 156: 
      var $742=$psize; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $743=$742 >>> 3; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I14=$743; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $744=$I14; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $745=$744 << 1; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $746=((((__gm_+40)|0)+($745<<2))|0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $747=$746; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $748=$747; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B15=$748; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $749=$B15; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F16=$749; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $750=HEAP32[((((__gm_)|0))>>2)]; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $751=$I14; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $752=1 << $751; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $753=$750 & $752; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $754=(($753)|0)!=0; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($754) { __label__ = 158; break; } else { __label__ = 157; break; } //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 157: 
      var $756=$I14; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $757=1 << $756; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $758=HEAP32[((((__gm_)|0))>>2)]; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $759=$758 | $757; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$759; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 162; break; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 158: 
      var $761=$B15; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $762=(($761+8)|0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $763=HEAP32[(($762)>>2)]; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $764=$763; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $765=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $766=(($764)>>>0) >= (($765)>>>0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $767=(($766)&1); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $768=(($767)==(1)); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $769=(($768)|0)!=0; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($769) { __label__ = 159; break; } else { __label__ = 160; break; } //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 159: 
      var $771=$B15; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $772=(($771+8)|0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $773=HEAP32[(($772)>>2)]; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F16=$773; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 161; break; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 160: 
      _abort(); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 161: 
      __label__ = 162; break;
    case 162: 
      var $777=$p; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $778=$B15; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $779=(($778+8)|0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($779)>>2)]=$777; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $780=$p; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $781=$F16; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $782=(($781+12)|0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($782)>>2)]=$780; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $783=$F16; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $784=$p; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $785=(($784+8)|0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($785)>>2)]=$783; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $786=$B15; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $787=$p; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $788=(($787+12)|0); //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($788)>>2)]=$786; //@line 4818 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 192; break; //@line 4820 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 163: 
      var $790=$p; //@line 4822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $791=$790; //@line 4822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tp=$791; //@line 4822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $792=$psize; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $793=$792 >>> 8; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $X=$793; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $794=$X; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $795=(($794)|0)==0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($795) { __label__ = 164; break; } else { __label__ = 165; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 164: 
      $I18=0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 169; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 165: 
      var $798=$X; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $799=(($798)>>>0) > 65535; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($799) { __label__ = 166; break; } else { __label__ = 167; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 166: 
      $I18=31; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 168; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 167: 
      var $802=$X; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$802; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $803=$Y; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $804=((($803)-(256))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $805=$804 >>> 16; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $806=$805 & 8; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$806; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $807=$N; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $808=$Y; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $809=$808 << $807; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$809; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $810=((($809)-(4096))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $811=$810 >>> 16; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $812=$811 & 4; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$812; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $813=$K; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $814=$N; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $815=((($814)+($813))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$815; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $816=$K; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $817=$Y; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $818=$817 << $816; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$818; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $819=((($818)-(16384))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $820=$819 >>> 16; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $821=$820 & 2; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$821; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $822=$N; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $823=((($822)+($821))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$823; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $824=$N; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $825=(((14)-($824))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $826=$K; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $827=$Y; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $828=$827 << $826; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$828; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $829=$828 >>> 15; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $830=((($825)+($829))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$830; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $831=$K; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $832=$831 << 1; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $833=$psize; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $834=$K; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $835=((($834)+(7))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $836=$833 >>> (($835)>>>0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $837=$836 & 1; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $838=((($832)+($837))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I18=$838; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 168; break;
    case 168: 
      __label__ = 169; break;
    case 169: 
      var $841=$I18; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $842=((((__gm_+304)|0)+($841<<2))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H17=$842; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $843=$I18; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $844=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $845=(($844+28)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($845)>>2)]=$843; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $846=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $847=(($846+16)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $848=(($847+4)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($848)>>2)]=0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $849=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $850=(($849+16)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $851=(($850)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($851)>>2)]=0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $852=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $853=$I18; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $854=1 << $853; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $855=$852 & $854; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $856=(($855)|0)!=0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($856) { __label__ = 171; break; } else { __label__ = 170; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 170: 
      var $858=$I18; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $859=1 << $858; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $860=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $861=$860 | $859; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$861; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $862=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $863=$H17; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($863)>>2)]=$862; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $864=$H17; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $865=$864; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $866=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $867=(($866+24)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($867)>>2)]=$865; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $868=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $869=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $870=(($869+12)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($870)>>2)]=$868; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $871=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $872=(($871+8)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($872)>>2)]=$868; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 189; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 171: 
      var $874=$H17; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $875=HEAP32[(($874)>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$875; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $876=$psize; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $877=$I18; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $878=(($877)|0)==31; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($878) { __label__ = 172; break; } else { __label__ = 173; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 172: 
      var $887 = 0;__label__ = 174; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 173: 
      var $881=$I18; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $882=$881 >>> 1; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $883=((($882)+(8))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $884=((($883)-(2))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $885=(((31)-($884))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $887 = $885;__label__ = 174; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 174: 
      var $887; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $888=$876 << $887; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K19=$888; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 175; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 175: 
      var $890=$T; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $891=(($890+4)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $892=HEAP32[(($891)>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $893=$892 & -8; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $894=$psize; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $895=(($893)|0)!=(($894)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($895) { __label__ = 176; break; } else { __label__ = 182; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 176: 
      var $897=$K19; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $898=$897 >>> 31; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $899=$898 & 1; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $900=$T; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $901=(($900+16)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $902=(($901+($899<<2))|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C=$902; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $903=$K19; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $904=$903 << 1; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K19=$904; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $905=$C; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $906=HEAP32[(($905)>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $907=(($906)|0)!=0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($907) { __label__ = 177; break; } else { __label__ = 178; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 177: 
      var $909=$C; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $910=HEAP32[(($909)>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$910; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 181; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 178: 
      var $912=$C; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $913=$912; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $914=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $915=(($913)>>>0) >= (($914)>>>0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $916=(($915)&1); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $917=(($916)==(1)); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $918=(($917)|0)!=0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($918) { __label__ = 179; break; } else { __label__ = 180; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 179: 
      var $920=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $921=$C; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($921)>>2)]=$920; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $922=$T; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $923=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $924=(($923+24)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($924)>>2)]=$922; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $925=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $926=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $927=(($926+12)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($927)>>2)]=$925; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $928=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $929=(($928+8)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($929)>>2)]=$925; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 188; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 180: 
      _abort(); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 181: 
      __label__ = 187; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 182: 
      var $933=$T; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $934=(($933+8)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $935=HEAP32[(($934)>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F20=$935; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $936=$T; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $937=$936; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $938=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $939=(($937)>>>0) >= (($938)>>>0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($939) { __label__ = 183; break; } else { var $946 = 0;__label__ = 184; break; } //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 183: 
      var $941=$F20; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $942=$941; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $943=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $944=(($942)>>>0) >= (($943)>>>0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $946 = $944;__label__ = 184; break;
    case 184: 
      var $946;
      var $947=(($946)&1);
      var $948=(($947)==(1));
      var $949=(($948)|0)!=0;
      if ($949) { __label__ = 185; break; } else { __label__ = 186; break; }
    case 185: 
      var $951=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $952=$F20; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $953=(($952+12)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($953)>>2)]=$951; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $954=$T; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $955=(($954+8)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($955)>>2)]=$951; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $956=$F20; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $957=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $958=(($957+8)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($958)>>2)]=$956; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $959=$T; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $960=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $961=(($960+12)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($961)>>2)]=$959; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $962=$tp; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $963=(($962+24)|0); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($963)>>2)]=0; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 188; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 186: 
      _abort(); //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 187: 
      __label__ = 175; break; //@line 4823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 188: 
      __label__ = 189; break;
    case 189: 
      var $968=HEAP32[((((__gm_+32)|0))>>2)]; //@line 4825 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $969=((($968)-(1))|0); //@line 4825 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+32)|0))>>2)]=$969; //@line 4825 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $970=(($969)|0)==0; //@line 4825 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($970) { __label__ = 190; break; } else { __label__ = 191; break; } //@line 4825 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 190: 
      var $972=_release_unused_segments(__gm_); //@line 4826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 191; break; //@line 4826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 191: 
      __label__ = 192; break;
    case 192: 
      __label__ = 196; break; //@line 4828 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 193: 
      __label__ = 194; break; //@line 4830 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 194: 
      __label__ = 195; break; //@line 4830 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 195: 
      _abort(); //@line 4832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 196: 
      __label__ = 197; break; //@line 4836 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 197: 
      ;
      return; //@line 4840 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
Module["_free"] = _free;_free["X"]=1;

function _sys_trim($m, $pad) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $released;
      var $unit;
      var $extra;
      var $sp;
      var $old_br;
      var $rel_br;
      var $new_br;
      $1=$m;
      $2=$pad;
      $released=0; //@line 4126 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[((((_mparams)|0))>>2)]; //@line 4127 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $4=(($3)|0)!=0; //@line 4127 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($4) { var $9 = 1;__label__ = 4; break; } else { __label__ = 3; break; } //@line 4127 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $6=_init_mparams(); //@line 4127 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=(($6)|0)!=0; //@line 4127 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9 = $7;__label__ = 4; break; //@line 4127 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $9;
      var $10=(($9)&1); //@line 4127 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=$2; //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=(($11)>>>0) < 4294967232; //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($12) { __label__ = 5; break; } else { __label__ = 26; break; } //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $14=$1; //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=(($14+24)|0); //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($15)>>2)]; //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=(($16)|0)!=0; //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($17) { __label__ = 6; break; } else { __label__ = 26; break; } //@line 4128 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $19=$2; //@line 4129 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=((($19)+(40))|0); //@line 4129 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $2=$20; //@line 4129 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=$1; //@line 4131 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=(($21+12)|0); //@line 4131 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=HEAPU32[(($22)>>2)]; //@line 4131 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=$2; //@line 4131 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=(($23)>>>0) > (($24)>>>0); //@line 4131 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 7; break; } else { __label__ = 22; break; } //@line 4131 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $27=HEAP32[((((_mparams+8)|0))>>2)]; //@line 4133 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $unit=$27; //@line 4133 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=$1; //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=(($28+12)|0); //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($29)>>2)]; //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=$2; //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=((($30)-($31))|0); //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=$unit; //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=((($33)-(1))|0); //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=((($32)+($34))|0); //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=$unit; //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=Math.floor(((($35)>>>0))/((($36)>>>0))); //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=((($37)-(1))|0); //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=$unit; //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=((($38)*($39))|0); //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $extra=$40; //@line 4135 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$1; //@line 4136 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=$1; //@line 4136 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+24)|0); //@line 4136 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[(($43)>>2)]; //@line 4136 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=$44; //@line 4136 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=_segment_holding($41, $45); //@line 4136 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$46; //@line 4136 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=$sp; //@line 4138 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $48=(($47+12)|0); //@line 4138 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49=HEAP32[(($48)>>2)]; //@line 4138 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=$49 & 8; //@line 4138 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=(($50)|0)!=0; //@line 4138 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($51) { __label__ = 19; break; } else { __label__ = 8; break; } //@line 4138 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $53=$sp; //@line 4139 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=(($53+12)|0); //@line 4139 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=HEAP32[(($54)>>2)]; //@line 4139 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$55 & 0; //@line 4139 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=(($56)|0)!=0; //@line 4139 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($57) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 4139 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      __label__ = 18; break; //@line 4150 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $60=$extra; //@line 4152 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=(($60)>>>0) >= 2147483647; //@line 4152 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($61) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4152 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $63=$unit; //@line 4153 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=(((-2147483648)-($63))|0); //@line 4153 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $extra=$64; //@line 4153 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 4153 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $66=_sbrk(0); //@line 4157 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $old_br=$66; //@line 4157 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $67=$old_br; //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=$sp; //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=(($68)|0); //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($69)>>2)]; //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=$sp; //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $72=(($71+4)|0); //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73=HEAP32[(($72)>>2)]; //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=(($70+$73)|0); //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=(($67)|0)==(($74)|0); //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($75) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 4158 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $77=$extra; //@line 4159 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $78=(((-$77))|0); //@line 4159 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $79=_sbrk($78); //@line 4159 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rel_br=$79; //@line 4159 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=_sbrk(0); //@line 4160 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $new_br=$80; //@line 4160 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=$rel_br; //@line 4161 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=(($81)|0)!=-1; //@line 4161 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($82) { __label__ = 14; break; } else { __label__ = 16; break; } //@line 4161 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $84=$new_br; //@line 4161 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $85=$old_br; //@line 4161 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $86=(($84)>>>0) < (($85)>>>0); //@line 4161 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($86) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4161 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $88=$old_br; //@line 4162 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=$new_br; //@line 4162 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $90=$88; //@line 4162 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=$89; //@line 4162 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=((($90)-($91))|0); //@line 4162 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $released=$92; //@line 4162 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 4162 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      __label__ = 17; break; //@line 4163 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      __label__ = 18; break;
    case 18: 
      __label__ = 19; break; //@line 4167 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $97=$released; //@line 4169 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=(($97)|0)!=0; //@line 4169 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($98) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 4169 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $100=$released; //@line 4170 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=$sp; //@line 4170 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=(($101+4)|0); //@line 4170 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=HEAP32[(($102)>>2)]; //@line 4170 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $104=((($103)-($100))|0); //@line 4170 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($102)>>2)]=$104; //@line 4170 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $105=$released; //@line 4171 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $106=$1; //@line 4171 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=(($106+432)|0); //@line 4171 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[(($107)>>2)]; //@line 4171 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $109=((($108)-($105))|0); //@line 4171 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($107)>>2)]=$109; //@line 4171 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $110=$1; //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $111=$1; //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $112=(($111+24)|0); //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($112)>>2)]; //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $114=$1; //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $115=(($114+12)|0); //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $116=HEAP32[(($115)>>2)]; //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $117=$released; //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $118=((($116)-($117))|0); //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      _init_top($110, $113, $118); //@line 4172 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4174 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 21: 
      __label__ = 22; break; //@line 4175 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $121=$released; //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $122=(($121)|0)==0; //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($122) { __label__ = 23; break; } else { __label__ = 25; break; } //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $124=$1; //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $125=(($124+12)|0); //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $126=HEAPU32[(($125)>>2)]; //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $127=$1; //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=(($127+28)|0); //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=HEAPU32[(($128)>>2)]; //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $130=(($126)>>>0) > (($129)>>>0); //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($130) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4182 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $132=$1; //@line 4183 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $133=(($132+28)|0); //@line 4183 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($133)>>2)]=-1; //@line 4183 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 4183 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      __label__ = 26; break; //@line 4184 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $136=$released; //@line 4186 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $137=(($136)|0)!=0; //@line 4186 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $138=$137 ? 1 : 0; //@line 4186 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $138; //@line 4186 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_trim["X"]=1;

function _segment_holding($m, $addr) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $sp;
      $2=$m;
      $3=$addr;
      var $4=$2; //@line 2562 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=(($4+444)|0); //@line 2562 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$5; //@line 2562 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 2563 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $7=$3; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=$sp; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0); //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=HEAPU32[(($9)>>2)]; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=(($7)>>>0) >= (($10)>>>0); //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($11) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $13=$3; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=$sp; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=(($14)|0); //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($15)>>2)]; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=$sp; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=(($17+4)|0); //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[(($18)>>2)]; //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=(($16+$19)|0); //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=(($13)>>>0) < (($20)>>>0); //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($21) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 2564 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $23=$sp; //@line 2565 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $1=$23; //@line 2565 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 2565 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $25=$sp; //@line 2566 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=(($25+8)|0); //@line 2566 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=HEAP32[(($26)>>2)]; //@line 2566 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$27; //@line 2566 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=(($27)|0)==0; //@line 2566 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($28) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 2566 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      $1=0; //@line 2567 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 2567 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      __label__ = 3; break; //@line 2568 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $32=$1; //@line 2569 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $32; //@line 2569 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _release_unused_segments($m) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $released;
      var $nsegs;
      var $pred;
      var $sp;
      var $base;
      var $size;
      var $next;
      var $p;
      var $psize;
      var $tp;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $H1;
      var $I;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K2;
      var $C;
      var $F3;
      $1=$m;
      $released=0; //@line 4079 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nsegs=0; //@line 4080 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $2=$1; //@line 4081 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $3=(($2+444)|0); //@line 4081 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $pred=$3; //@line 4081 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $4=$pred; //@line 4082 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=(($4+8)|0); //@line 4082 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($5)>>2)]; //@line 4082 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$6; //@line 4082 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4083 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $8=$sp; //@line 4083 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0)!=0; //@line 4083 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($9) { __label__ = 4; break; } else { __label__ = 88; break; } //@line 4083 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $11=$sp; //@line 4084 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=(($11)|0); //@line 4084 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($12)>>2)]; //@line 4084 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $base=$13; //@line 4084 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=$sp; //@line 4085 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=(($14+4)|0); //@line 4085 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($15)>>2)]; //@line 4085 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $size=$16; //@line 4085 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=$sp; //@line 4086 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=(($17+8)|0); //@line 4086 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[(($18)>>2)]; //@line 4086 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $next=$19; //@line 4086 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=$nsegs; //@line 4087 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=((($20)+(1))|0); //@line 4087 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nsegs=$21; //@line 4087 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=$sp; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=(($22+12)|0); //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[(($23)>>2)]; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=$24 & 0; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=(($25)|0)!=0; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($26) { __label__ = 5; break; } else { __label__ = 87; break; } //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $28=$sp; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=(($28+12)|0); //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($29)>>2)]; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=$30 & 8; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=(($31)|0)!=0; //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($32) { __label__ = 87; break; } else { __label__ = 6; break; } //@line 4088 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $34=$base; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=$base; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=(($35+8)|0); //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=$36; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=$37 & 7; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=(($38)|0)==0; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($39) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $49 = 0;__label__ = 9; break; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $42=$base; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=(($42+8)|0); //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=$43; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=$44 & 7; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=(((8)-($45))|0); //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=$46 & 7; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49 = $47;__label__ = 9; break; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $49; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=(($34+$49)|0); //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$51; //@line 4089 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52=$p; //@line 4090 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $53=(($52+4)|0); //@line 4090 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=HEAP32[(($53)>>2)]; //@line 4090 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=$54 & -8; //@line 4090 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$55; //@line 4090 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$p; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+4)|0); //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $58=HEAP32[(($57)>>2)]; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=$58 & 3; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=(($59)|0)!=1; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($60) { __label__ = 86; break; } else { __label__ = 10; break; } //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $62=$p; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=$62; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=$psize; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $65=(($63+$64)|0); //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $66=$base; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $67=$size; //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=(($66+$67)|0); //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)-(40))|0); //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=(($65)>>>0) >= (($69)>>>0); //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($70) { __label__ = 11; break; } else { __label__ = 86; break; } //@line 4092 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $72=$p; //@line 4093 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73=$72; //@line 4093 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tp=$73; //@line 4093 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=$p; //@line 4095 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=$1; //@line 4095 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=(($75+20)|0); //@line 4095 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $77=HEAP32[(($76)>>2)]; //@line 4095 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $78=(($74)|0)==(($77)|0); //@line 4095 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($78) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 4095 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $80=$1; //@line 4096 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=(($80+20)|0); //@line 4096 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($81)>>2)]=0; //@line 4096 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=$1; //@line 4097 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=(($82+8)|0); //@line 4097 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($83)>>2)]=0; //@line 4097 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 59; break; //@line 4098 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $85=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $86=(($85+24)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=HEAP32[(($86)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $XP=$87; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=(($88+12)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($89)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=(($90)|0)!=(($91)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($92) { __label__ = 14; break; } else { __label__ = 18; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $94=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=(($94+8)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($95)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$96; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $97=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=(($97+12)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $99=HEAP32[(($98)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$99; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $100=$F; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=$100; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=(($102+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $104=HEAPU32[(($103)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $105=(($101)>>>0) >= (($104)>>>0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $106=(($105)&1); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=(($106)==(1)); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=(($107)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($108) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $110=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $111=$F; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $112=(($111+12)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($112)>>2)]=$110; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=$F; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $114=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $115=(($114+8)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($115)>>2)]=$113; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 17; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      _abort(); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      __label__ = 30; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $119=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $120=(($119+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $121=(($120+4)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$121; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $122=HEAP32[(($121)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$122; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $123=(($122)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($123) { __label__ = 20; break; } else { __label__ = 19; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $125=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $126=(($125+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $127=(($126)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$127; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=HEAP32[(($127)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$128; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=(($128)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($129) { __label__ = 20; break; } else { __label__ = 29; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      __label__ = 21; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 21: 
      var $132=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $133=(($132+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $134=(($133+4)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$134; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($134)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $136=(($135)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($136) { var $144 = 1;__label__ = 23; break; } else { __label__ = 22; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $138=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $139=(($138+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $140=(($139)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$140; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[(($140)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $142=(($141)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $144 = $142;__label__ = 23; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      var $144;
      if ($144) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $146=$CP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$146; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $147=HEAP32[(($146)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$147; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      var $149=$RP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $150=$149; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $151=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $152=(($151+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=HEAPU32[(($152)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=(($150)>>>0) >= (($153)>>>0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $155=(($154)&1); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $156=(($155)==(1)); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $157=(($156)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($157) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $159=$RP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($159)>>2)]=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 27: 
      _abort(); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 28: 
      __label__ = 29; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 29: 
      __label__ = 30; break;
    case 30: 
      var $164=$XP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $165=(($164)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($165) { __label__ = 31; break; } else { __label__ = 58; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $167=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $168=(($167+28)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $169=HEAP32[(($168)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $170=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $171=(($170+304)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $172=(($171+($169<<2))|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H=$172; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $173=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $174=$H; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $175=HEAP32[(($174)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $176=(($173)|0)==(($175)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($176) { __label__ = 32; break; } else { __label__ = 35; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $178=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $179=$H; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($179)>>2)]=$178; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $180=(($178)|0)==0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($180) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $182=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183=(($182+28)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $184=HEAP32[(($183)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $185=1 << $184; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $186=$185 ^ -1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $187=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $188=(($187+4)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $189=HEAP32[(($188)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $190=$189 & $186; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($188)>>2)]=$190; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      __label__ = 42; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $193=$XP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $194=$193; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $195=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $196=(($195+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $197=HEAPU32[(($196)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $198=(($194)>>>0) >= (($197)>>>0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $199=(($198)&1); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $200=(($199)==(1)); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $201=(($200)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($201) { __label__ = 36; break; } else { __label__ = 40; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $203=$XP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $204=(($203+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $205=(($204)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $206=HEAP32[(($205)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=(($206)|0)==(($207)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($208) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $210=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $211=$XP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $212=(($211+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $213=(($212)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($213)>>2)]=$210; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $215=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $216=$XP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $217=(($216+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $218=(($217+4)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($218)>>2)]=$215; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break;
    case 39: 
      __label__ = 41; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      _abort(); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 41: 
      __label__ = 42; break;
    case 42: 
      var $223=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $224=(($223)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($224) { __label__ = 43; break; } else { __label__ = 57; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 43: 
      var $226=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $227=$226; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $228=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $229=(($228+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230=HEAPU32[(($229)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $231=(($227)>>>0) >= (($230)>>>0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $232=(($231)&1); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $233=(($232)==(1)); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $234=(($233)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($234) { __label__ = 44; break; } else { __label__ = 55; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $236=$XP; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $237=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $238=(($237+24)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($238)>>2)]=$236; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $239=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $240=(($239+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $241=(($240)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $242=HEAP32[(($241)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C0=$242; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $243=(($242)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($243) { __label__ = 45; break; } else { __label__ = 49; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 45: 
      var $245=$C0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $246=$245; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $248=(($247+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $249=HEAPU32[(($248)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $250=(($246)>>>0) >= (($249)>>>0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $251=(($250)&1); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $252=(($251)==(1)); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $253=(($252)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($253) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $255=$C0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $256=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $257=(($256+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $258=(($257)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($258)>>2)]=$255; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $259=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $260=$C0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $261=(($260+24)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($261)>>2)]=$259; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      _abort(); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 48: 
      __label__ = 49; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $265=$tp; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $266=(($265+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $267=(($266+4)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $268=HEAP32[(($267)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C1=$268; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $269=(($268)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($269) { __label__ = 50; break; } else { __label__ = 54; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $271=$C1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $272=$271; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $273=$1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $274=(($273+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $275=HEAPU32[(($274)>>2)]; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $276=(($272)>>>0) >= (($275)>>>0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $277=(($276)&1); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $278=(($277)==(1)); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=(($278)|0)!=0; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($279) { __label__ = 51; break; } else { __label__ = 52; break; } //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $281=$C1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $282=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $283=(($282+16)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $284=(($283+4)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($284)>>2)]=$281; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $285=$R; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $286=$C1; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $287=(($286+24)|0); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($287)>>2)]=$285; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 53; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 52: 
      _abort(); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 53: 
      __label__ = 54; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 54: 
      __label__ = 56; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 55: 
      _abort(); //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 56: 
      __label__ = 57; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 57: 
      __label__ = 58; break; //@line 4100 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 58: 
      __label__ = 59; break;
    case 59: 
      var $296=$psize; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $297=$296 >>> 8; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $X=$297; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $298=$X; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $299=(($298)|0)==0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($299) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 60: 
      $I=0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 61: 
      var $302=$X; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $303=(($302)>>>0) > 65535; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($303) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 62: 
      $I=31; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $306=$X; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$306; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $307=$Y; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $308=((($307)-(256))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $309=$308 >>> 16; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $310=$309 & 8; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$310; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $311=$N; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $312=$Y; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $313=$312 << $311; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$313; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $314=((($313)-(4096))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $315=$314 >>> 16; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $316=$315 & 4; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$316; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $317=$K; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $318=$N; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $319=((($318)+($317))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$319; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $320=$K; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $321=$Y; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $322=$321 << $320; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$322; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $323=((($322)-(16384))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=$323 >>> 16; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $325=$324 & 2; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$325; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326=$N; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $327=((($326)+($325))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$327; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $328=$N; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $329=(((14)-($328))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $330=$K; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $331=$Y; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $332=$331 << $330; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$332; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $333=$332 >>> 15; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $334=((($329)+($333))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$334; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $335=$K; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $336=$335 << 1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $337=$psize; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $338=$K; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $339=((($338)+(7))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $340=$337 >>> (($339)>>>0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $341=$340 & 1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $342=((($336)+($341))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I=$342; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break;
    case 64: 
      __label__ = 65; break;
    case 65: 
      var $345=$I; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $346=$1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $347=(($346+304)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $348=(($347+($345<<2))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H1=$348; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $349=$I; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $350=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+28)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($351)>>2)]=$349; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $352=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $353=(($352+16)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $354=(($353+4)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($354)>>2)]=0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $355=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $356=(($355+16)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $357=(($356)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($357)>>2)]=0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $358=$1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $359=(($358+4)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $360=HEAP32[(($359)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $361=$I; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $362=1 << $361; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $363=$360 & $362; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $364=(($363)|0)!=0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($364) { __label__ = 67; break; } else { __label__ = 66; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 66: 
      var $366=$I; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $367=1 << $366; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=$1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $369=(($368+4)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $370=HEAP32[(($369)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $371=$370 | $367; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($369)>>2)]=$371; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $372=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $373=$H1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($373)>>2)]=$372; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $374=$H1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $375=$374; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $376=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $377=(($376+24)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($377)>>2)]=$375; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $378=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $379=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $380=(($379+12)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($380)>>2)]=$378; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $381=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $382=(($381+8)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($382)>>2)]=$378; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 67: 
      var $384=$H1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($384)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$385; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=$psize; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $387=$I; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $388=(($387)|0)==31; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($388) { __label__ = 68; break; } else { __label__ = 69; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 68: 
      var $397 = 0;__label__ = 70; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 69: 
      var $391=$I; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $392=$391 >>> 1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $393=((($392)+(8))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $394=((($393)-(2))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $395=(((31)-($394))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $397 = $395;__label__ = 70; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 70: 
      var $397; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $398=$386 << $397; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$398; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 71; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 71: 
      var $400=$T; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $401=(($400+4)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $402=HEAP32[(($401)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $403=$402 & -8; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $404=$psize; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $405=(($403)|0)!=(($404)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($405) { __label__ = 72; break; } else { __label__ = 78; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 72: 
      var $407=$K2; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $408=$407 >>> 31; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $409=$408 & 1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $410=$T; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $411=(($410+16)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $412=(($411+($409<<2))|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C=$412; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $413=$K2; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $414=$413 << 1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$414; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $415=$C; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $416=HEAP32[(($415)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $417=(($416)|0)!=0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($417) { __label__ = 73; break; } else { __label__ = 74; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $419=$C; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $420=HEAP32[(($419)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$420; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 77; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $422=$C; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $423=$422; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $424=$1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $425=(($424+16)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $426=HEAPU32[(($425)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $427=(($423)>>>0) >= (($426)>>>0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $428=(($427)&1); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $429=(($428)==(1)); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $430=(($429)|0)!=0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($430) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 75: 
      var $432=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $433=$C; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($433)>>2)]=$432; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $434=$T; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $435=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $436=(($435+24)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($436)>>2)]=$434; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $437=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $438=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $439=(($438+12)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($439)>>2)]=$437; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $440=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $441=(($440+8)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($441)>>2)]=$437; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 76: 
      _abort(); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 77: 
      __label__ = 83; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 78: 
      var $445=$T; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $446=(($445+8)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $447=HEAP32[(($446)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F3=$447; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $448=$T; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $449=$448; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $450=$1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $451=(($450+16)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $452=HEAPU32[(($451)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $453=(($449)>>>0) >= (($452)>>>0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($453) { __label__ = 79; break; } else { var $462 = 0;__label__ = 80; break; } //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 79: 
      var $455=$F3; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $456=$455; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $457=$1; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $458=(($457+16)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $459=HEAPU32[(($458)>>2)]; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $460=(($456)>>>0) >= (($459)>>>0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $462 = $460;__label__ = 80; break;
    case 80: 
      var $462;
      var $463=(($462)&1);
      var $464=(($463)==(1));
      var $465=(($464)|0)!=0;
      if ($465) { __label__ = 81; break; } else { __label__ = 82; break; }
    case 81: 
      var $467=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $468=$F3; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $469=(($468+12)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($469)>>2)]=$467; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $470=$T; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $471=(($470+8)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($471)>>2)]=$467; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $472=$F3; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $473=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $474=(($473+8)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($474)>>2)]=$472; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $475=$T; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $476=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $477=(($476+12)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($477)>>2)]=$475; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $478=$tp; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $479=(($478+24)|0); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($479)>>2)]=0; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 82: 
      _abort(); //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 83: 
      __label__ = 71; break; //@line 4110 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 84: 
      __label__ = 85; break;
    case 85: 
      __label__ = 86; break; //@line 4112 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 86: 
      __label__ = 87; break; //@line 4113 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 87: 
      var $486=$sp; //@line 4116 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $pred=$486; //@line 4116 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $487=$next; //@line 4117 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$487; //@line 4117 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4118 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $489=$nsegs; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $490=(($489)>>>0) > 4294967295; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($490) { __label__ = 89; break; } else { __label__ = 90; break; } //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $492=$nsegs; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $495 = $492;__label__ = 91; break; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $495 = -1;__label__ = 91; break; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $495; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $496=$1; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $497=(($496+32)|0); //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($497)>>2)]=$495; //@line 4120 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $498=$released; //@line 4122 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $498; //@line 4122 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_release_unused_segments["X"]=1;

function _init_mparams() {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $magic;
      var $psize;
      var $gsize;
      var $1=HEAP32[((((_mparams)|0))>>2)]; //@line 2965 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $2=(($1)|0)==0; //@line 2965 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($2) { __label__ = 3; break; } else { __label__ = 7; break; } //@line 2965 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $4=_sysconf(8); //@line 2971 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$4; //@line 2971 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=$psize; //@line 2972 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $gsize=$5; //@line 2972 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=$gsize; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=$gsize; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=((($7)-(1))|0); //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=$6 & $8; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=(($9)|0)!=0; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($10) { __label__ = 5; break; } else { __label__ = 4; break; } //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $12=$psize; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=$psize; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=((($13)-(1))|0); //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$12 & $14; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=(($15)|0)!=0; //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($16) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 2989 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      _abort(); //@line 2997 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 2997 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $19=$gsize; //@line 2999 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+8)|0))>>2)]=$19; //@line 2999 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=$psize; //@line 3000 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+4)|0))>>2)]=$20; //@line 3000 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+12)|0))>>2)]=-1; //@line 3001 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+16)|0))>>2)]=2097152; //@line 3002 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+20)|0))>>2)]=0; //@line 3004 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=HEAP32[((((_mparams+20)|0))>>2)]; //@line 3011 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+440)|0))>>2)]=$21; //@line 3011 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=_time(0); //@line 3030 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=$22 ^ 1431655765; //@line 3030 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $magic=$23; //@line 3030 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=$magic; //@line 3032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=$24 | 8; //@line 3032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $magic=$25; //@line 3032 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=$magic; //@line 3033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$26 & -8; //@line 3033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $magic=$27; //@line 3033 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=$magic; //@line 3034 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams)|0))>>2)]=$28; //@line 3034 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 3036 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      ;
      return 1; //@line 3039 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _init_top($m, $p, $psize) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $offset;
      $1=$m;
      $2=$p;
      $3=$psize;
      var $4=$2; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=$4; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=(($5+8)|0); //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=$6; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=$7 & 7; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=(($8)|0)==0; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($9) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $20 = 0;__label__ = 5; break; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $12=$2; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=$12; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=(($13+8)|0); //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$14; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=$15 & 7; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=(((8)-($16))|0); //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=$17 & 7; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20 = $18;__label__ = 5; break; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $20; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $offset=$20; //@line 3736 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=$2; //@line 3737 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=$21; //@line 3737 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=$offset; //@line 3737 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=(($22+$23)|0); //@line 3737 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=$24; //@line 3737 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $2=$25; //@line 3737 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=$offset; //@line 3738 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$3; //@line 3738 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=((($27)-($26))|0); //@line 3738 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $3=$28; //@line 3738 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=$2; //@line 3740 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=$1; //@line 3740 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=(($30+24)|0); //@line 3740 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($31)>>2)]=$29; //@line 3740 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=$3; //@line 3741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=$1; //@line 3741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=(($33+12)|0); //@line 3741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($34)>>2)]=$32; //@line 3741 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=$3; //@line 3742 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=$35 | 1; //@line 3742 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=$2; //@line 3742 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=(($37+4)|0); //@line 3742 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($38)>>2)]=$36; //@line 3742 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=$2; //@line 3744 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=$39; //@line 3744 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$3; //@line 3744 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=(($40+$41)|0); //@line 3744 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=$42; //@line 3744 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=(($43+4)|0); //@line 3744 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($44)>>2)]=40; //@line 3744 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=HEAP32[((((_mparams+16)|0))>>2)]; //@line 3745 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=$1; //@line 3745 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=(($46+28)|0); //@line 3745 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($47)>>2)]=$45; //@line 3745 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return; //@line 3746 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_init_top["X"]=1;

function _mmap_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $mmsize;
      var $mm;
      var $offset;
      var $psize;
      var $p;
      $2=$m;
      $3=$nb;
      var $4=$3; //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $5=((($4)+(24))|0); //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=((($5)+(7))|0); //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=((($7)-(1))|0); //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=((($6)+($8))|0); //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=((($10)-(1))|0); //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=$11 ^ -1; //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=$9 & $12; //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $mmsize=$13; //@line 3672 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=$mmsize; //@line 3673 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$3; //@line 3673 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=(($14)>>>0) > (($15)>>>0); //@line 3673 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($16) { __label__ = 3; break; } else { __label__ = 14; break; } //@line 3673 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      $mm=-1; //@line 3674 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=$mm; //@line 3675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=(($18)|0)!=-1; //@line 3675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($19) { __label__ = 4; break; } else { __label__ = 13; break; } //@line 3675 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $21=$mm; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=(($21+8)|0); //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=$22; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=$23 & 7; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=(($24)|0)==0; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($25) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $35 = 0;__label__ = 7; break; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $28=$mm; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=(($28+8)|0); //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $30=$29; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $31=$30 & 7; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=(((8)-($31))|0); //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=$32 & 7; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35 = $33;__label__ = 7; break; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $35; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $offset=$35; //@line 3676 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=$mmsize; //@line 3677 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=$offset; //@line 3677 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38=((($36)-($37))|0); //@line 3677 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=((($38)-(16))|0); //@line 3677 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$39; //@line 3677 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=$mm; //@line 3678 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$offset; //@line 3678 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=(($40+$41)|0); //@line 3678 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=$42; //@line 3678 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$43; //@line 3678 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=$offset; //@line 3679 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=$p; //@line 3679 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=(($45)|0); //@line 3679 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($46)>>2)]=$44; //@line 3679 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=$psize; //@line 3680 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $48=$p; //@line 3680 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49=(($48+4)|0); //@line 3680 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($49)>>2)]=$47; //@line 3680 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=$p; //@line 3682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 3682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52=$psize; //@line 3682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $53=(($51+$52)|0); //@line 3682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=$53; //@line 3682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=(($54+4)|0); //@line 3682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($55)>>2)]=7; //@line 3682 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$p; //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=$56; //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $58=$psize; //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=((($58)+(4))|0); //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=(($57+$59)|0); //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=$60; //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $62=(($61+4)|0); //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($62)>>2)]=0; //@line 3683 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=$2; //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=(($63+16)|0); //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $65=HEAP32[(($64)>>2)]; //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $66=(($65)|0)==0; //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($66) { __label__ = 9; break; } else { __label__ = 8; break; } //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $68=$mm; //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=$2; //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=(($69+16)|0); //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=HEAPU32[(($70)>>2)]; //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $72=(($68)>>>0) < (($71)>>>0); //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($72) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3685 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $74=$mm; //@line 3686 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=$2; //@line 3686 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=(($75+16)|0); //@line 3686 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($76)>>2)]=$74; //@line 3686 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3686 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $78=$mmsize; //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $79=$2; //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=(($79+432)|0); //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($80)>>2)]; //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=((($81)+($78))|0); //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($80)>>2)]=$82; //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=$2; //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=(($83+436)|0); //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $85=HEAPU32[(($84)>>2)]; //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $86=(($82)>>>0) > (($85)>>>0); //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($86) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 3687 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $88=$2; //@line 3688 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=(($88+432)|0); //@line 3688 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($89)>>2)]; //@line 3688 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=$2; //@line 3688 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=(($91+436)|0); //@line 3688 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($92)>>2)]=$90; //@line 3688 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 3688 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $94=$p; //@line 3691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=$94; //@line 3691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $96=(($95+8)|0); //@line 3691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $1=$96; //@line 3691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3691 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      __label__ = 14; break; //@line 3693 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      $1=0; //@line 3694 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 3694 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $100=$1; //@line 3695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $100; //@line 3695 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_mmap_alloc["X"]=1;

function _init_bins($m) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $i;
      var $bin;
      $1=$m;
      $i=0; //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $3=$i; //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $4=(($3)>>>0) < 32; //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($4) { __label__ = 4; break; } else { __label__ = 6; break; } //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $6=$i; //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=$6 << 1; //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=$1; //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=(($8+40)|0); //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=(($9+($7<<2))|0); //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=$10; //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=$11; //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $bin=$12; //@line 3753 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=$bin; //@line 3754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=$bin; //@line 3754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=(($14+12)|0); //@line 3754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($15)>>2)]=$13; //@line 3754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=$bin; //@line 3754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=(($16+8)|0); //@line 3754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($17)>>2)]=$13; //@line 3754 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 3755 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $19=$i; //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=((($19)+(1))|0); //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $i=$20; //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 3752 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      ;
      return; //@line 3756 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _prepend_alloc($m, $newbase, $oldbase, $nb) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $p;
      var $oldfirst;
      var $psize;
      var $q;
      var $qsize;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F1;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I2;
      var $B3;
      var $F4;
      var $TP5;
      var $H6;
      var $I7;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K8;
      var $C;
      var $F9;
      $1=$m;
      $2=$newbase;
      $3=$oldbase;
      $4=$nb;
      var $5=$2; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=$2; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=(($6+8)|0); //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=$7; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=$8 & 7; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=(($9)|0)==0; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($10) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $20 = 0;__label__ = 5; break; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $13=$2; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=(($13+8)|0); //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$14; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=$15 & 7; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=(((8)-($16))|0); //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=$17 & 7; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20 = $18;__label__ = 5; break; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $20; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=(($5+$20)|0); //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=$21; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$22; //@line 3780 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=$3; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=$3; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=(($24+8)|0); //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=$25; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$26 & 7; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=(($27)|0)==0; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($28) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $38 = 0;__label__ = 8; break; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $31=$3; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $32=(($31+8)|0); //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=$33 & 7; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=(((8)-($34))|0); //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=$35 & 7; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $38 = $36;__label__ = 8; break; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $38; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39=(($23+$38)|0); //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=$39; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$40; //@line 3781 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$oldfirst; //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=$41; //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=$p; //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=$43; //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=$42; //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=$44; //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $47=((($45)-($46))|0); //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$47; //@line 3782 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $48=$p; //@line 3783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $49=$48; //@line 3783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $50=$4; //@line 3783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $51=(($49+$50)|0); //@line 3783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52=$51; //@line 3783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $q=$52; //@line 3783 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $53=$psize; //@line 3784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=$4; //@line 3784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=((($53)-($54))|0); //@line 3784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $qsize=$55; //@line 3784 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$4; //@line 3785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=$56 | 1; //@line 3785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $58=$57 | 2; //@line 3785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=$p; //@line 3785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=(($59+4)|0); //@line 3785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($60)>>2)]=$58; //@line 3785 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=$oldfirst; //@line 3792 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $62=$1; //@line 3792 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=(($62+24)|0); //@line 3792 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=HEAP32[(($63)>>2)]; //@line 3792 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $65=(($61)|0)==(($64)|0); //@line 3792 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($65) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3792 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $67=$qsize; //@line 3793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=$1; //@line 3793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=(($68+12)|0); //@line 3793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($69)>>2)]; //@line 3793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=((($70)+($67))|0); //@line 3793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($69)>>2)]=$71; //@line 3793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tsize=$71; //@line 3793 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $72=$q; //@line 3794 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73=$1; //@line 3794 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=(($73+24)|0); //@line 3794 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($74)>>2)]=$72; //@line 3794 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=$tsize; //@line 3795 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=$75 | 1; //@line 3795 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $77=$q; //@line 3795 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $78=(($77+4)|0); //@line 3795 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($78)>>2)]=$76; //@line 3795 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 110; break; //@line 3797 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $80=$oldfirst; //@line 3798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=$1; //@line 3798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=(($81+20)|0); //@line 3798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=HEAP32[(($82)>>2)]; //@line 3798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=(($80)|0)==(($83)|0); //@line 3798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($84) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 3798 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      var $86=$qsize; //@line 3799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=$1; //@line 3799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=(($87+8)|0); //@line 3799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=HEAP32[(($88)>>2)]; //@line 3799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $90=((($89)+($86))|0); //@line 3799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($88)>>2)]=$90; //@line 3799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $dsize=$90; //@line 3799 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=$q; //@line 3800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=$1; //@line 3800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $93=(($92+20)|0); //@line 3800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($93)>>2)]=$91; //@line 3800 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $94=$dsize; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=$94 | 1; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $96=$q; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $97=(($96+4)|0); //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($97)>>2)]=$95; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=$dsize; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $99=$q; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $100=$99; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=$dsize; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=(($100+$101)|0); //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=$102; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $104=(($103)|0); //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($104)>>2)]=$98; //@line 3801 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 109; break; //@line 3802 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      var $106=$oldfirst; //@line 3804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=(($106+4)|0); //@line 3804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[(($107)>>2)]; //@line 3804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $109=$108 & 3; //@line 3804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $110=(($109)|0)!=1; //@line 3804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($110) { __label__ = 73; break; } else { __label__ = 13; break; } //@line 3804 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $112=$oldfirst; //@line 3805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $113=(($112+4)|0); //@line 3805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $114=HEAP32[(($113)>>2)]; //@line 3805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $115=$114 & -8; //@line 3805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nsize=$115; //@line 3805 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $116=$nsize; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $117=$116 >>> 3; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $118=(($117)>>>0) < 32; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($118) { __label__ = 14; break; } else { __label__ = 26; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $120=$oldfirst; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $121=(($120+8)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $122=HEAP32[(($121)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$122; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $123=$oldfirst; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $124=(($123+12)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $125=HEAP32[(($124)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B=$125; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $126=$nsize; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $127=$126 >>> 3; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I=$127; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=$F; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=$B; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $130=(($128)|0)==(($129)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($130) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $132=$I; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $133=1 << $132; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $134=$133 ^ -1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $136=(($135)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $137=HEAP32[(($136)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $138=$137 & $134; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($136)>>2)]=$138; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $140=$F; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $141=$I; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $142=$141 << 1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $143=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $144=(($143+40)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $145=(($144+($142<<2))|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $146=$145; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $147=$146; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $148=(($140)|0)==(($147)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($148) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $150=$F; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $151=$150; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $152=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=(($152+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=HEAPU32[(($153)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $155=(($151)>>>0) >= (($154)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($155) { __label__ = 18; break; } else { var $176 = 0;__label__ = 21; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $157=$B; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $158=$I; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $159=$158 << 1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $160=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $161=(($160+40)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $162=(($161+($159<<2))|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $163=$162; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $164=$163; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $165=(($157)|0)==(($164)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($165) { var $174 = 1;__label__ = 20; break; } else { __label__ = 19; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      var $167=$B; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $168=$167; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $169=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $170=(($169+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $171=HEAPU32[(($170)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $172=(($168)>>>0) >= (($171)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $174 = $172;__label__ = 20; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      var $174;
      var $176 = $174;__label__ = 21; break;
    case 21: 
      var $176;
      var $177=(($176)&1);
      var $178=(($177)==(1));
      var $179=(($178)|0)!=0;
      if ($179) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: 
      var $181=$B; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $182=$F; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183=(($182+12)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($183)>>2)]=$181; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $184=$F; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $185=$B; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $186=(($185+8)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($186)>>2)]=$184; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 24; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      _abort(); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      __label__ = 25; break;
    case 25: 
      __label__ = 72; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $191=$oldfirst; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $192=$191; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $TP=$192; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $193=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $194=(($193+24)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $195=HEAP32[(($194)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $XP=$195; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $196=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $197=(($196+12)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $198=HEAP32[(($197)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $199=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $200=(($198)|0)!=(($199)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($200) { __label__ = 27; break; } else { __label__ = 31; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 27: 
      var $202=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $203=(($202+8)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $204=HEAP32[(($203)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F1=$204; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $205=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $206=(($205+12)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=HEAP32[(($206)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$207; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=$F1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $209=$208; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $210=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $211=(($210+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $212=HEAPU32[(($211)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $213=(($209)>>>0) >= (($212)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $214=(($213)&1); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $215=(($214)==(1)); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $216=(($215)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($216) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 28: 
      var $218=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $219=$F1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $220=(($219+12)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($220)>>2)]=$218; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $221=$F1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $222=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $223=(($222+8)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($223)>>2)]=$221; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 29: 
      _abort(); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 30: 
      __label__ = 43; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $227=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $228=(($227+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $229=(($228+4)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$229; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230=HEAP32[(($229)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$230; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $231=(($230)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($231) { __label__ = 33; break; } else { __label__ = 32; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $233=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $234=(($233+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $235=(($234)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$235; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $236=HEAP32[(($235)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$236; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $237=(($236)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($237) { __label__ = 33; break; } else { __label__ = 42; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      __label__ = 34; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $240=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $241=(($240+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $242=(($241+4)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$242; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $243=HEAP32[(($242)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $244=(($243)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($244) { var $252 = 1;__label__ = 36; break; } else { __label__ = 35; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $246=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=(($246+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $248=(($247)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $CP=$248; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $249=HEAP32[(($248)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $250=(($249)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $252 = $250;__label__ = 36; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $252;
      if ($252) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $254=$CP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $RP=$254; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $255=HEAP32[(($254)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $R=$255; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $257=$RP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $258=$257; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $259=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $260=(($259+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $261=HEAPU32[(($260)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $262=(($258)>>>0) >= (($261)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $263=(($262)&1); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $264=(($263)==(1)); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $265=(($264)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($265) { __label__ = 39; break; } else { __label__ = 40; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 39: 
      var $267=$RP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($267)>>2)]=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      _abort(); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 41: 
      __label__ = 42; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 42: 
      __label__ = 43; break;
    case 43: 
      var $272=$XP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $273=(($272)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($273) { __label__ = 44; break; } else { __label__ = 71; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 44: 
      var $275=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $276=(($275+28)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $277=HEAP32[(($276)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $278=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=(($278+304)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $280=(($279+($277<<2))|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H=$280; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $281=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $282=$H; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $283=HEAP32[(($282)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $284=(($281)|0)==(($283)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($284) { __label__ = 45; break; } else { __label__ = 48; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 45: 
      var $286=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $287=$H; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($287)>>2)]=$286; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $288=(($286)|0)==0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($288) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      var $290=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $291=(($290+28)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $292=HEAP32[(($291)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $293=1 << $292; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $294=$293 ^ -1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $295=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $296=(($295+4)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $297=HEAP32[(($296)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $298=$297 & $294; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($296)>>2)]=$298; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      __label__ = 55; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 48: 
      var $301=$XP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $302=$301; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $303=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $304=(($303+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $305=HEAPU32[(($304)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $306=(($302)>>>0) >= (($305)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $307=(($306)&1); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $308=(($307)==(1)); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $309=(($308)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($309) { __label__ = 49; break; } else { __label__ = 53; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 49: 
      var $311=$XP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $312=(($311+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $313=(($312)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $314=HEAP32[(($313)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $315=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $316=(($314)|0)==(($315)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($316) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 50: 
      var $318=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $319=$XP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $320=(($319+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $321=(($320)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($321)>>2)]=$318; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 51: 
      var $323=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=$XP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $325=(($324+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326=(($325+4)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($326)>>2)]=$323; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break;
    case 52: 
      __label__ = 54; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 53: 
      _abort(); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 54: 
      __label__ = 55; break;
    case 55: 
      var $331=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $332=(($331)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($332) { __label__ = 56; break; } else { __label__ = 70; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 56: 
      var $334=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $335=$334; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $336=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $337=(($336+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $338=HEAPU32[(($337)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $339=(($335)>>>0) >= (($338)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $340=(($339)&1); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $341=(($340)==(1)); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $342=(($341)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($342) { __label__ = 57; break; } else { __label__ = 68; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 57: 
      var $344=$XP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $345=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $346=(($345+24)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($346)>>2)]=$344; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $347=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $348=(($347+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $349=(($348)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $350=HEAP32[(($349)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C0=$350; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=(($350)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($351) { __label__ = 58; break; } else { __label__ = 62; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 58: 
      var $353=$C0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $354=$353; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $355=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $356=(($355+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $357=HEAPU32[(($356)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $358=(($354)>>>0) >= (($357)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $359=(($358)&1); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $360=(($359)==(1)); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $361=(($360)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($361) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 59: 
      var $363=$C0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $364=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $365=(($364+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $366=(($365)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($366)>>2)]=$363; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $367=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=$C0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $369=(($368+24)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($369)>>2)]=$367; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 61; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 60: 
      _abort(); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 61: 
      __label__ = 62; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 62: 
      var $373=$TP; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $374=(($373+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $375=(($374+4)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $376=HEAP32[(($375)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C1=$376; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $377=(($376)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($377) { __label__ = 63; break; } else { __label__ = 67; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 63: 
      var $379=$C1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $380=$379; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $381=$1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $382=(($381+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $383=HEAPU32[(($382)>>2)]; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $384=(($380)>>>0) >= (($383)>>>0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $385=(($384)&1); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=(($385)==(1)); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $387=(($386)|0)!=0; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($387) { __label__ = 64; break; } else { __label__ = 65; break; } //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 64: 
      var $389=$C1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $390=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $391=(($390+16)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $392=(($391+4)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($392)>>2)]=$389; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $393=$R; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $394=$C1; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $395=(($394+24)|0); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($395)>>2)]=$393; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 65: 
      _abort(); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 66: 
      __label__ = 67; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 67: 
      __label__ = 69; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 68: 
      _abort(); //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 69: 
      __label__ = 70; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 70: 
      __label__ = 71; break; //@line 3806 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 71: 
      __label__ = 72; break;
    case 72: 
      var $404=$oldfirst; //@line 3807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $405=$404; //@line 3807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $406=$nsize; //@line 3807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $407=(($405+$406)|0); //@line 3807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $408=$407; //@line 3807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$408; //@line 3807 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $409=$nsize; //@line 3808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $410=$qsize; //@line 3808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $411=((($410)+($409))|0); //@line 3808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $qsize=$411; //@line 3808 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 73; break; //@line 3809 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 73: 
      var $413=$oldfirst; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $414=(($413+4)|0); //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $415=HEAP32[(($414)>>2)]; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $416=$415 & -2; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($414)>>2)]=$416; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $417=$qsize; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $418=$417 | 1; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $419=$q; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $420=(($419+4)|0); //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($420)>>2)]=$418; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $421=$qsize; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $422=$q; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $423=$422; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $424=$qsize; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $425=(($423+$424)|0); //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $426=$425; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $427=(($426)|0); //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($427)>>2)]=$421; //@line 3810 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $428=$qsize; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $429=$428 >>> 3; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $430=(($429)>>>0) < 32; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($430) { __label__ = 74; break; } else { __label__ = 81; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 74: 
      var $432=$qsize; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $433=$432 >>> 3; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I2=$433; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $434=$I2; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $435=$434 << 1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $436=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $437=(($436+40)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $438=(($437+($435<<2))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $439=$438; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $440=$439; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B3=$440; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $441=$B3; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F4=$441; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $442=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $443=(($442)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $444=HEAP32[(($443)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $445=$I2; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $446=1 << $445; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $447=$444 & $446; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $448=(($447)|0)!=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($448) { __label__ = 76; break; } else { __label__ = 75; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 75: 
      var $450=$I2; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $451=1 << $450; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $452=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $453=(($452)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $454=HEAP32[(($453)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $455=$454 | $451; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($453)>>2)]=$455; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 80; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 76: 
      var $457=$B3; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $458=(($457+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $459=HEAP32[(($458)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $460=$459; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $461=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $462=(($461+16)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $463=HEAPU32[(($462)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $464=(($460)>>>0) >= (($463)>>>0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $465=(($464)&1); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $466=(($465)==(1)); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $467=(($466)|0)!=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($467) { __label__ = 77; break; } else { __label__ = 78; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 77: 
      var $469=$B3; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $470=(($469+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $471=HEAP32[(($470)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F4=$471; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 79; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 78: 
      _abort(); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 79: 
      __label__ = 80; break;
    case 80: 
      var $475=$q; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $476=$B3; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $477=(($476+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($477)>>2)]=$475; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $478=$q; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $479=$F4; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $480=(($479+12)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($480)>>2)]=$478; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $481=$F4; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $482=$q; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $483=(($482+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($483)>>2)]=$481; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $484=$B3; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $485=$q; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $486=(($485+12)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($486)>>2)]=$484; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 108; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 81: 
      var $488=$q; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $489=$488; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $TP5=$489; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $490=$qsize; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $491=$490 >>> 8; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $X=$491; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $492=$X; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $493=(($492)|0)==0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($493) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 82: 
      $I7=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 87; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 83: 
      var $496=$X; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $497=(($496)>>>0) > 65535; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($497) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 84: 
      $I7=31; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 86; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 85: 
      var $500=$X; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$500; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $501=$Y; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $502=((($501)-(256))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $503=$502 >>> 16; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $504=$503 & 8; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$504; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $505=$N; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $506=$Y; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $507=$506 << $505; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$507; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $508=((($507)-(4096))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $509=$508 >>> 16; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $510=$509 & 4; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$510; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $511=$K; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $512=$N; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $513=((($512)+($511))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$513; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $514=$K; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $515=$Y; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $516=$515 << $514; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$516; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $517=((($516)-(16384))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $518=$517 >>> 16; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $519=$518 & 2; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$519; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $520=$N; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $521=((($520)+($519))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$521; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $522=$N; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $523=(((14)-($522))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $524=$K; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $525=$Y; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $526=$525 << $524; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$526; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $527=$526 >>> 15; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $528=((($523)+($527))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$528; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $529=$K; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $530=$529 << 1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $531=$qsize; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $532=$K; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $533=((($532)+(7))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $534=$531 >>> (($533)>>>0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $535=$534 & 1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $536=((($530)+($535))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I7=$536; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 86; break;
    case 86: 
      __label__ = 87; break;
    case 87: 
      var $539=$I7; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $540=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $541=(($540+304)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $542=(($541+($539<<2))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H6=$542; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $543=$I7; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $544=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $545=(($544+28)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($545)>>2)]=$543; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $546=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $547=(($546+16)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $548=(($547+4)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($548)>>2)]=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $549=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $550=(($549+16)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $551=(($550)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($551)>>2)]=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $552=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $553=(($552+4)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $554=HEAP32[(($553)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $555=$I7; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $556=1 << $555; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $557=$554 & $556; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $558=(($557)|0)!=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($558) { __label__ = 89; break; } else { __label__ = 88; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 88: 
      var $560=$I7; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $561=1 << $560; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $562=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $563=(($562+4)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $564=HEAP32[(($563)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $565=$564 | $561; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($563)>>2)]=$565; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $566=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $567=$H6; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($567)>>2)]=$566; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $568=$H6; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $569=$568; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $570=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $571=(($570+24)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($571)>>2)]=$569; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $572=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $573=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $574=(($573+12)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($574)>>2)]=$572; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $575=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $576=(($575+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($576)>>2)]=$572; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 107; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 89: 
      var $578=$H6; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $579=HEAP32[(($578)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$579; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $580=$qsize; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $581=$I7; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $582=(($581)|0)==31; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($582) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 90: 
      var $591 = 0;__label__ = 92; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 91: 
      var $585=$I7; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $586=$585 >>> 1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $587=((($586)+(8))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $588=((($587)-(2))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $589=(((31)-($588))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $591 = $589;__label__ = 92; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 92: 
      var $591; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $592=$580 << $591; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K8=$592; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 93: 
      var $594=$T; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $595=(($594+4)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $596=HEAP32[(($595)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $597=$596 & -8; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $598=$qsize; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $599=(($597)|0)!=(($598)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($599) { __label__ = 94; break; } else { __label__ = 100; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 94: 
      var $601=$K8; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $602=$601 >>> 31; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $603=$602 & 1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $604=$T; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $605=(($604+16)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $606=(($605+($603<<2))|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C=$606; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $607=$K8; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $608=$607 << 1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K8=$608; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $609=$C; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $610=HEAP32[(($609)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $611=(($610)|0)!=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($611) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 95: 
      var $613=$C; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $614=HEAP32[(($613)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$614; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 96: 
      var $616=$C; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $617=$616; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $618=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $619=(($618+16)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $620=HEAPU32[(($619)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $621=(($617)>>>0) >= (($620)>>>0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $622=(($621)&1); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $623=(($622)==(1)); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $624=(($623)|0)!=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($624) { __label__ = 97; break; } else { __label__ = 98; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 97: 
      var $626=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $627=$C; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($627)>>2)]=$626; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $628=$T; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $629=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $630=(($629+24)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($630)>>2)]=$628; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $631=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $632=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $633=(($632+12)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($633)>>2)]=$631; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $634=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $635=(($634+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($635)>>2)]=$631; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 98: 
      _abort(); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 99: 
      __label__ = 105; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 100: 
      var $639=$T; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $640=(($639+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $641=HEAP32[(($640)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F9=$641; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $642=$T; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $643=$642; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $644=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $645=(($644+16)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $646=HEAPU32[(($645)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $647=(($643)>>>0) >= (($646)>>>0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($647) { __label__ = 101; break; } else { var $656 = 0;__label__ = 102; break; } //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 101: 
      var $649=$F9; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $650=$649; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $651=$1; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $652=(($651+16)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $653=HEAPU32[(($652)>>2)]; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $654=(($650)>>>0) >= (($653)>>>0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $656 = $654;__label__ = 102; break;
    case 102: 
      var $656;
      var $657=(($656)&1);
      var $658=(($657)==(1));
      var $659=(($658)|0)!=0;
      if ($659) { __label__ = 103; break; } else { __label__ = 104; break; }
    case 103: 
      var $661=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $662=$F9; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $663=(($662+12)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($663)>>2)]=$661; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $664=$T; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $665=(($664+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($665)>>2)]=$661; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $666=$F9; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $667=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $668=(($667+8)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($668)>>2)]=$666; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $669=$T; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $670=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $671=(($670+12)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($671)>>2)]=$669; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $672=$TP5; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $673=(($672+24)|0); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($673)>>2)]=0; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 104: 
      _abort(); //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 105: 
      __label__ = 93; break; //@line 3811 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 106: 
      __label__ = 107; break;
    case 107: 
      __label__ = 108; break;
    case 108: 
      __label__ = 109; break;
    case 109: 
      __label__ = 110; break;
    case 110: 
      var $681=$p; //@line 3816 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $682=$681; //@line 3816 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $683=(($682+8)|0); //@line 3816 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      ;
      return $683; //@line 3816 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prepend_alloc["X"]=1;

function __ZdlPv($ptr) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      $1=$ptr;
      var $2=$1; //@line 107 "/home/bompo/emscripten/system/lib/libcxx/new.cpp"
      var $3=(($2)|0)!=0; //@line 107 "/home/bompo/emscripten/system/lib/libcxx/new.cpp"
      if ($3) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 107 "/home/bompo/emscripten/system/lib/libcxx/new.cpp"
    case 3: 
      var $5=$1; //@line 108 "/home/bompo/emscripten/system/lib/libcxx/new.cpp"
      _free($5); //@line 108 "/home/bompo/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 4; break; //@line 108 "/home/bompo/emscripten/system/lib/libcxx/new.cpp"
    case 4: 
      ;
      return; //@line 109 "/home/bompo/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function _add_segment($m, $tbase, $tsize, $mmapped) {
  ;
  var __label__;
  __label__ = 2; 
  while(1) switch(__label__) {
    case 2: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $old_top;
      var $oldsp;
      var $old_end;
      var $ssize;
      var $rawsp;
      var $offset;
      var $asp;
      var $csp;
      var $sp;
      var $ss;
      var $tnext;
      var $p;
      var $nfences;
      var $nextp;
      var $q;
      var $psize;
      var $tn;
      var $I;
      var $B;
      var $F;
      var $TP;
      var $H;
      var $I1;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K2;
      var $C;
      var $F3;
      $1=$m;
      $2=$tbase;
      $3=$tsize;
      $4=$mmapped;
      var $5=$1; //@line 3822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $6=(($5+24)|0); //@line 3822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($6)>>2)]; //@line 3822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $8=$7; //@line 3822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $old_top=$8; //@line 3822 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $9=$1; //@line 3823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $10=$old_top; //@line 3823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $11=_segment_holding($9, $10); //@line 3823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $oldsp=$11; //@line 3823 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $12=$oldsp; //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $13=(($12)|0); //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($13)>>2)]; //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $15=$oldsp; //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $16=(($15+4)|0); //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $17=HEAP32[(($16)>>2)]; //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $18=(($14+$17)|0); //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $old_end=$18; //@line 3824 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $ssize=24; //@line 3825 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $19=$old_end; //@line 3826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $20=$ssize; //@line 3826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $21=((($20)+(16))|0); //@line 3826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $22=((($21)+(7))|0); //@line 3826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $23=(((-$22))|0); //@line 3826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $24=(($19+$23)|0); //@line 3826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $rawsp=$24; //@line 3826 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $25=$rawsp; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $26=(($25+8)|0); //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $27=$26; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $28=$27 & 7; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $29=(($28)|0)==0; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($29) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 3: 
      var $39 = 0;__label__ = 5; break; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 4: 
      var $32=$rawsp; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $33=(($32+8)|0); //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $34=$33; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $35=$34 & 7; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $36=(((8)-($35))|0); //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $37=$36 & 7; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $39 = $37;__label__ = 5; break; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 5: 
      var $39; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $offset=$39; //@line 3827 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $40=$rawsp; //@line 3828 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $41=$offset; //@line 3828 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $42=(($40+$41)|0); //@line 3828 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $asp=$42; //@line 3828 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $43=$asp; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $44=$old_top; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $45=(($44+16)|0); //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $46=(($43)>>>0) < (($45)>>>0); //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($46) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 6: 
      var $48=$old_top; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52 = $48;__label__ = 8; break; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 7: 
      var $50=$asp; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $52 = $50;__label__ = 8; break; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 8: 
      var $52; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $csp=$52; //@line 3829 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $53=$csp; //@line 3830 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $54=$53; //@line 3830 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $sp=$54; //@line 3830 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $55=$sp; //@line 3831 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $56=$55; //@line 3831 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $57=(($56+8)|0); //@line 3831 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $58=$57; //@line 3831 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $ss=$58; //@line 3831 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $59=$sp; //@line 3832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $60=$59; //@line 3832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $61=$ssize; //@line 3832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $62=(($60+$61)|0); //@line 3832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $63=$62; //@line 3832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tnext=$63; //@line 3832 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $64=$tnext; //@line 3833 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$64; //@line 3833 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nfences=0; //@line 3834 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $65=$1; //@line 3837 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $66=$2; //@line 3837 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $67=$66; //@line 3837 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $68=$3; //@line 3837 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $69=((($68)-(40))|0); //@line 3837 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      _init_top($65, $67, $69); //@line 3837 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $70=$ssize; //@line 3841 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $71=$70 | 1; //@line 3841 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $72=$71 | 2; //@line 3841 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $73=$sp; //@line 3841 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $74=(($73+4)|0); //@line 3841 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($74)>>2)]=$72; //@line 3841 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $75=$ss; //@line 3842 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $76=$1; //@line 3842 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $77=(($76+444)|0); //@line 3842 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $78=$75; //@line 3842 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $79=$77; //@line 3842 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      assert(16 % 1 === 0, 'memcpy given ' + 16 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP32[(($78)>>2)]=HEAP32[(($79)>>2)];HEAP32[((($78)+(4))>>2)]=HEAP32[((($79)+(4))>>2)];HEAP32[((($78)+(8))>>2)]=HEAP32[((($79)+(8))>>2)];HEAP32[((($78)+(12))>>2)]=HEAP32[((($79)+(12))>>2)]; //@line 3842 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $80=$2; //@line 3843 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $81=$1; //@line 3843 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $82=(($81+444)|0); //@line 3843 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $83=(($82)|0); //@line 3843 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($83)>>2)]=$80; //@line 3843 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $84=$3; //@line 3844 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $85=$1; //@line 3844 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $86=(($85+444)|0); //@line 3844 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $87=(($86+4)|0); //@line 3844 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($87)>>2)]=$84; //@line 3844 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $88=$4; //@line 3845 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $89=$1; //@line 3845 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $90=(($89+444)|0); //@line 3845 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $91=(($90+12)|0); //@line 3845 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($91)>>2)]=$88; //@line 3845 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $92=$ss; //@line 3846 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $93=$1; //@line 3846 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $94=(($93+444)|0); //@line 3846 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $95=(($94+8)|0); //@line 3846 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($95)>>2)]=$92; //@line 3846 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 3849 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 9: 
      var $97=$p; //@line 3850 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $98=$97; //@line 3850 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $99=(($98+4)|0); //@line 3850 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $100=$99; //@line 3850 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nextp=$100; //@line 3850 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $101=$p; //@line 3851 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $102=(($101+4)|0); //@line 3851 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($102)>>2)]=7; //@line 3851 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $103=$nfences; //@line 3852 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $104=((($103)+(1))|0); //@line 3852 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $nfences=$104; //@line 3852 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $105=$nextp; //@line 3853 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $106=(($105+4)|0); //@line 3853 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $107=$106; //@line 3853 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $108=$old_end; //@line 3853 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $109=(($107)>>>0) < (($108)>>>0); //@line 3853 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($109) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 3853 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 10: 
      var $111=$nextp; //@line 3854 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $p=$111; //@line 3854 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 3854 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 11: 
      __label__ = 13; break; //@line 3856 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 12: 
      __label__ = 9; break; //@line 3857 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 13: 
      var $115=$csp; //@line 3861 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $116=$old_top; //@line 3861 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $117=(($115)|0)!=(($116)|0); //@line 3861 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($117) { __label__ = 14; break; } else { __label__ = 50; break; } //@line 3861 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 14: 
      var $119=$old_top; //@line 3862 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $120=$119; //@line 3862 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $q=$120; //@line 3862 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $121=$csp; //@line 3863 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $122=$old_top; //@line 3863 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $123=$121; //@line 3863 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $124=$122; //@line 3863 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $125=((($123)-($124))|0); //@line 3863 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $psize=$125; //@line 3863 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $126=$q; //@line 3864 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $127=$126; //@line 3864 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $128=$psize; //@line 3864 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $129=(($127+$128)|0); //@line 3864 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $130=$129; //@line 3864 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $tn=$130; //@line 3864 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $131=$tn; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $132=(($131+4)|0); //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $133=HEAP32[(($132)>>2)]; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $134=$133 & -2; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($132)>>2)]=$134; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $135=$psize; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $136=$135 | 1; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $137=$q; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $138=(($137+4)|0); //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($138)>>2)]=$136; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $139=$psize; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $140=$q; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $141=$140; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $142=$psize; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $143=(($141+$142)|0); //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $144=$143; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $145=(($144)|0); //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($145)>>2)]=$139; //@line 3865 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $146=$psize; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $147=$146 >>> 3; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $148=(($147)>>>0) < 32; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($148) { __label__ = 15; break; } else { __label__ = 22; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 15: 
      var $150=$psize; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $151=$150 >>> 3; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I=$151; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $152=$I; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $153=$152 << 1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $154=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $155=(($154+40)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $156=(($155+($153<<2))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $B=$158; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $159=$B; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$159; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $160=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $161=(($160)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $162=HEAP32[(($161)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $163=$I; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $164=1 << $163; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $165=$162 & $164; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $166=(($165)|0)!=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($166) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 16: 
      var $168=$I; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $169=1 << $168; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $170=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $171=(($170)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[(($171)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $173=$172 | $169; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($171)>>2)]=$173; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 17: 
      var $175=$B; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $176=(($175+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $177=HEAP32[(($176)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $178=$177; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $179=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $180=(($179+16)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $181=HEAPU32[(($180)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $182=(($178)>>>0) >= (($181)>>>0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $183=(($182)&1); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $184=(($183)==(1)); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $185=(($184)|0)!=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($185) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 18: 
      var $187=$B; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $188=(($187+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $189=HEAP32[(($188)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F=$189; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 19: 
      _abort(); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 20: 
      __label__ = 21; break;
    case 21: 
      var $193=$q; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $194=$B; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $195=(($194+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($195)>>2)]=$193; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $196=$q; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $197=$F; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $198=(($197+12)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($198)>>2)]=$196; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $199=$F; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $200=$q; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $201=(($200+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($201)>>2)]=$199; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $202=$B; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $203=$q; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $204=(($203+12)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($204)>>2)]=$202; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 49; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 22: 
      var $206=$q; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $207=$206; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $TP=$207; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $208=$psize; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $209=$208 >>> 8; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $X=$209; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $210=$X; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $211=(($210)|0)==0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($211) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 23: 
      $I1=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 24: 
      var $214=$X; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $215=(($214)>>>0) > 65535; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($215) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 25: 
      $I1=31; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 26: 
      var $218=$X; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$218; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $219=$Y; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $220=((($219)-(256))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $221=$220 >>> 16; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $222=$221 & 8; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$222; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $223=$N; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $224=$Y; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $225=$224 << $223; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$225; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $226=((($225)-(4096))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $227=$226 >>> 16; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $228=$227 & 4; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$228; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $229=$K; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $230=$N; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $231=((($230)+($229))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$231; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $232=$K; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $233=$Y; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $234=$233 << $232; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$234; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $235=((($234)-(16384))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $236=$235 >>> 16; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $237=$236 & 2; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$237; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $238=$N; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $239=((($238)+($237))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $N=$239; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $240=$N; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $241=(((14)-($240))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $242=$K; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $243=$Y; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $244=$243 << $242; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $Y=$244; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $245=$244 >>> 15; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $246=((($241)+($245))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K=$246; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $247=$K; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $248=$247 << 1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $249=$psize; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $250=$K; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $251=((($250)+(7))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $252=$249 >>> (($251)>>>0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $253=$252 & 1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $254=((($248)+($253))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $I1=$254; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break;
    case 27: 
      __label__ = 28; break;
    case 28: 
      var $257=$I1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $258=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $259=(($258+304)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $260=(($259+($257<<2))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $H=$260; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $261=$I1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $262=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $263=(($262+28)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($263)>>2)]=$261; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $264=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $265=(($264+16)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $266=(($265+4)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($266)>>2)]=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $267=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $268=(($267+16)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $269=(($268)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($269)>>2)]=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $270=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $271=(($270+4)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $272=HEAP32[(($271)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $273=$I1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $274=1 << $273; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $275=$272 & $274; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $276=(($275)|0)!=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($276) { __label__ = 30; break; } else { __label__ = 29; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 29: 
      var $278=$I1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $279=1 << $278; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $280=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $281=(($280+4)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $282=HEAP32[(($281)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $283=$282 | $279; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($281)>>2)]=$283; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $284=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $285=$H; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($285)>>2)]=$284; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $286=$H; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $287=$286; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $288=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $289=(($288+24)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($289)>>2)]=$287; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $290=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $291=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $292=(($291+12)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($292)>>2)]=$290; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $293=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $294=(($293+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($294)>>2)]=$290; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 30: 
      var $296=$H; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $297=HEAP32[(($296)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$297; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $298=$psize; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $299=$I1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $300=(($299)|0)==31; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($300) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 31: 
      var $309 = 0;__label__ = 33; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 32: 
      var $303=$I1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $304=$303 >>> 1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $305=((($304)+(8))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $306=((($305)-(2))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $307=(((31)-($306))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $309 = $307;__label__ = 33; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 33: 
      var $309; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $310=$298 << $309; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$310; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 34: 
      var $312=$T; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $313=(($312+4)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $314=HEAP32[(($313)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $315=$314 & -8; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $316=$psize; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $317=(($315)|0)!=(($316)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($317) { __label__ = 35; break; } else { __label__ = 41; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 35: 
      var $319=$K2; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $320=$319 >>> 31; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $321=$320 & 1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $322=$T; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $323=(($322+16)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $324=(($323+($321<<2))|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $C=$324; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $325=$K2; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $326=$325 << 1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $K2=$326; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $327=$C; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $328=HEAP32[(($327)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $329=(($328)|0)!=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($329) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 36: 
      var $331=$C; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $332=HEAP32[(($331)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $T=$332; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 40; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 37: 
      var $334=$C; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $335=$334; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $336=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $337=(($336+16)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $338=HEAPU32[(($337)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $339=(($335)>>>0) >= (($338)>>>0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $340=(($339)&1); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $341=(($340)==(1)); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $342=(($341)|0)!=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($342) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 38: 
      var $344=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $345=$C; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($345)>>2)]=$344; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $346=$T; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $347=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $348=(($347+24)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($348)>>2)]=$346; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $349=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $350=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $351=(($350+12)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($351)>>2)]=$349; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $352=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $353=(($352+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($353)>>2)]=$349; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 39: 
      _abort(); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 40: 
      __label__ = 46; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 41: 
      var $357=$T; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $358=(($357+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $359=HEAP32[(($358)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      $F3=$359; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $360=$T; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $361=$360; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $362=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $363=(($362+16)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $364=HEAPU32[(($363)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $365=(($361)>>>0) >= (($364)>>>0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      if ($365) { __label__ = 42; break; } else { var $374 = 0;__label__ = 43; break; } //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 42: 
      var $367=$F3; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $368=$367; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $369=$1; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $370=(($369+16)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $371=HEAPU32[(($370)>>2)]; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $372=(($368)>>>0) >= (($371)>>>0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $374 = $372;__label__ = 43; break;
    case 43: 
      var $374;
      var $375=(($374)&1);
      var $376=(($375)==(1));
      var $377=(($376)|0)!=0;
      if ($377) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: 
      var $379=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $380=$F3; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $381=(($380+12)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($381)>>2)]=$379; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $382=$T; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $383=(($382+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($383)>>2)]=$379; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $384=$F3; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $385=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $386=(($385+8)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($386)>>2)]=$384; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $387=$T; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $388=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $389=(($388+12)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($389)>>2)]=$387; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $390=$TP; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      var $391=(($390+24)|0); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($391)>>2)]=0; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 45: 
      _abort(); //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 46: 
      __label__ = 34; break; //@line 3866 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 47: 
      __label__ = 48; break;
    case 48: 
      __label__ = 49; break;
    case 49: 
      __label__ = 50; break; //@line 3867 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    case 50: 
      ;
      return; //@line 3870 "/home/bompo/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_add_segment["X"]=1;
// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;

  
  
  var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};
  
  function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      if (!___setErrNo.ret) ___setErrNo.ret = allocate([0], 'i32', ALLOC_STATIC);
      HEAP32[((___setErrNo.ret)>>2)]=value
      return value;
    }
  
  var _stdin=0;
  
  var _stdout=0;
  
  var _stderr=0;
  
  var __impure_ptr=0;var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              ret = FS.analyzePath([link].concat(path).join('/'),
                                   dontResolveLastLink, linksVisited + 1);
              return ret;
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
  
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
  
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
  
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = new Array(data.length);
          for (var i = 0, len = data.length; i < len; ++i) dataArray[i] = data.charCodeAt(i);
          data = dataArray;
        }
        var properties = {isDevice: false, contents: data};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        var properties = {isDevice: false, url: url};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createPreloadedFile:function (parent, name, url, canRead, canWrite) {
        Browser.asyncLoad(url, function(data) {
          FS.createDataFile(parent, name, data, canRead, canWrite);
        });
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          // Browser.
          assert('Cannot do synchronous binary XHRs in modern browsers. Use --embed-file or --preload-file in emcc');
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureRoot();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        input = input || Module['stdin'];
        output = output || Module['stdout'];
        error = error || Module['stderr'];
  
        // Default handlers.
        var stdinOverridden = true, stdoutOverridden = true, stderrOverridden = true;
        if (!input) {
          stdinOverridden = false;
          input = function() {
            if (!input.cache || !input.cache.length) {
              var result;
              if (typeof window != 'undefined' &&
                  typeof window.prompt == 'function') {
                // Browser.
                result = window.prompt('Input: ');
                if (result === null) result = String.fromCharCode(0); // cancel ==> EOF
              } else if (typeof readline == 'function') {
                // Command line.
                result = readline();
              }
              if (!result) result = '';
              input.cache = intArrayFromString(result + '\n', true);
            }
            return input.cache.shift();
          };
        }
        function simpleOutput(val) {
          if (val === null || val === '\n'.charCodeAt(0)) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(String.fromCharCode(val));
          }
        }
        if (!output) {
          stdoutOverridden = false;
          output = simpleOutput;
        }
        if (!output.printer) output.printer = Module['print'];
        if (!output.buffer) output.buffer = [];
        if (!error) {
          stderrOverridden = false;
          error = simpleOutput;
        }
        if (!error.printer) error.printer = Module['print'];
        if (!error.buffer) error.buffer = [];
  
        // Create the temporary folder, if not already created
        try {
          FS.createFolder('/', 'tmp', true, true);
        } catch(e) {}
  
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
  
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          isTerminal: !stdinOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stdoutOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stderrOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        _stdin = allocate([1], 'void*', ALLOC_STATIC);
        _stdout = allocate([2], 'void*', ALLOC_STATIC);
        _stderr = allocate([3], 'void*', ALLOC_STATIC);
  
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
  
        // Newlib initialization
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        __impure_ptr = allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_STATIC) ], 'void*', ALLOC_STATIC);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr. Careful, they may have been closed
        if (FS.streams[2] && FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output('\n'.charCodeAt(0));
        if (FS.streams[3] && FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output('\n'.charCodeAt(0));
      },standardizePath:function (path) {
        if (path.substr(0, 2) == './') path = path.substr(2);
        return path;
      },deleteFile:function (path) {
        var path = FS.analyzePath(path);
        if (!path.parentExists || !path.exists) {
          throw 'Invalid path ' + path;
        }
        delete path.parentObject.contents[path.name];
      }};
  
  
  var ___dirent_struct_layout=null;function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      // NOTE: This implementation tries to mimic glibc rather that strictly
      // following the POSIX standard.
  
      var mode = HEAP32[((varargs)>>2)];
  
      // Simplify flags.
      var accessMode = oflag & 3;
      var isWrite = accessMode != 0;
      var isRead = accessMode != 1;
      var isCreate = Boolean(oflag & 512);
      var isExistCheck = Boolean(oflag & 2048);
      var isTruncate = Boolean(oflag & 1024);
      var isAppend = Boolean(oflag & 8);
  
      // Verify path.
      var origPath = path;
      path = FS.analyzePath(Pointer_stringify(path));
      if (!path.parentExists) {
        ___setErrNo(path.error);
        return -1;
      }
      var target = path.object || null;
      var finalPath;
  
      // Verify the file exists, create if needed and allowed.
      if (target) {
        if (isCreate && isExistCheck) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          return -1;
        }
        if ((isWrite || isCreate || isTruncate) && target.isFolder) {
          ___setErrNo(ERRNO_CODES.EISDIR);
          return -1;
        }
        if (isRead && !target.read || isWrite && !target.write) {
          ___setErrNo(ERRNO_CODES.EACCES);
          return -1;
        }
        if (isTruncate && !target.isDevice) {
          target.contents = [];
        } else {
          if (!FS.forceLoadFile(target)) {
            ___setErrNo(ERRNO_CODES.EIO);
            return -1;
          }
        }
        finalPath = path.path;
      } else {
        if (!isCreate) {
          ___setErrNo(ERRNO_CODES.ENOENT);
          return -1;
        }
        if (!path.parentObject.write) {
          ___setErrNo(ERRNO_CODES.EACCES);
          return -1;
        }
        target = FS.createDataFile(path.parentObject, path.name, [],
                                   mode & 0x100, mode & 0x80);  // S_IRUSR, S_IWUSR.
        finalPath = path.parentPath + '/' + path.name;
      }
      // Actually create an open stream.
      var id = FS.streams.length;
      if (target.isFolder) {
        var entryBuffer = 0;
        if (___dirent_struct_layout) {
          entryBuffer = _malloc(___dirent_struct_layout.__size__);
        }
        var contents = [];
        for (var key in target.contents) contents.push(key);
        FS.streams[id] = {
          path: finalPath,
          object: target,
          // An index into contents. Special values: -2 is ".", -1 is "..".
          position: -2,
          isRead: true,
          isWrite: false,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: [],
          // Folder-specific properties:
          // Remember the contents at the time of opening in an array, so we can
          // seek between them relying on a single order.
          contents: contents,
          // Each stream has its own area for readdir() returns.
          currentEntry: entryBuffer
        };
      } else {
        FS.streams[id] = {
          path: finalPath,
          object: target,
          position: 0,
          isRead: isRead,
          isWrite: isWrite,
          isAppend: isAppend,
          error: false,
          eof: false,
          ungotten: []
        };
      }
      return id;
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 1024;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 8;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }

  
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      if (FS.streams[fildes]) {
        if (FS.streams[fildes].currentEntry) {
          _free(FS.streams[fildes].currentEntry);
        }
        delete FS.streams[fildes];
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      if (FS.streams[fildes]) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }

  
  function _memset(ptr, value, num, align) {
      // TODO: make these settings, and in memcpy, {{'s
      if (num >= 20) {
        // This is unaligned, but quite large, so work hard to get to aligned settings
        var stop = ptr + num;
        while (ptr % 4) { // no need to check for stop, since we have large num
          HEAP8[ptr++] = value;
        }
        if (value < 0) value += 256; // make it unsigned
        var ptr4 = ptr >> 2, stop4 = stop >> 2, value4 = value | (value << 8) | (value << 16) | (value << 24);
        while (ptr4 < stop4) {
          HEAP32[ptr4++] = value4;
        }
        ptr = ptr4 << 2;
        while (ptr < stop) {
          HEAP8[ptr++] = value;
        }
      } else {
        while (num--) {
          HEAP8[ptr++] = value;
        }
      }
    }var _llvm_memset_p0i8_i32=_memset;

  
  
  
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[((buf)+(i))];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[((buf)+(i))]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (tempDoubleI32[0]=HEAP32[(((varargs)+(argIndex))>>2)],tempDoubleI32[1]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],tempDoubleF64[0]);
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[(textIndex+1)];
        if (curr == '%'.charCodeAt(0)) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case '+'.charCodeAt(0):
                flagAlwaysSigned = true;
                break;
              case '-'.charCodeAt(0):
                flagLeftAlign = true;
                break;
              case '#'.charCodeAt(0):
                flagAlternative = true;
                break;
              case '0'.charCodeAt(0):
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[(textIndex+1)];
          }
  
          // Handle width.
          var width = 0;
          if (next == '*'.charCodeAt(0)) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[(textIndex+1)];
          } else {
            while (next >= '0'.charCodeAt(0) && next <= '9'.charCodeAt(0)) {
              width = width * 10 + (next - '0'.charCodeAt(0));
              textIndex++;
              next = HEAP8[(textIndex+1)];
            }
          }
  
          // Handle precision.
          var precisionSet = false;
          if (next == '.'.charCodeAt(0)) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[(textIndex+1)];
            if (next == '*'.charCodeAt(0)) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[(textIndex+1)];
                if (precisionChr < '0'.charCodeAt(0) ||
                    precisionChr > '9'.charCodeAt(0)) break;
                precision = precision * 10 + (precisionChr - '0'.charCodeAt(0));
                textIndex++;
              }
            }
            next = HEAP8[(textIndex+1)];
          } else {
            var precision = 6; // Standard default.
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[(textIndex+2)];
              if (nextNext == 'h'.charCodeAt(0)) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[(textIndex+2)];
              if (nextNext == 'l'.charCodeAt(0)) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[(textIndex+1)];
  
          // Handle type specifier.
          if (['d', 'i', 'u', 'o', 'x', 'X', 'p'].indexOf(String.fromCharCode(next)) != -1) {
            // Integer.
            var signed = next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0);
            argSize = argSize || 4;
            var currArg = getNextArg('i' + (argSize * 8));
            var origArg = currArg;
            var argText;
            // Flatten i64-1 [low, high] into a (slightly rounded) double
            if (argSize == 8) {
              currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 'u'.charCodeAt(0));
            }
            // Truncate to requested size.
            if (argSize <= 4) {
              var limit = Math.pow(256, argSize) - 1;
              currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
            }
            // Format the number.
            var currAbsArg = Math.abs(currArg);
            var prefix = '';
            if (next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0)) {
              if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1]); else
              argText = reSign(currArg, 8 * argSize, 1).toString(10);
            } else if (next == 'u'.charCodeAt(0)) {
              if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
              argText = unSign(currArg, 8 * argSize, 1).toString(10);
              currArg = Math.abs(currArg);
            } else if (next == 'o'.charCodeAt(0)) {
              argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
            } else if (next == 'x'.charCodeAt(0) || next == 'X'.charCodeAt(0)) {
              prefix = flagAlternative ? '0x' : '';
              if (currArg < 0) {
                // Represent negative numbers in hex as 2's complement.
                currArg = -currArg;
                argText = (currAbsArg - 1).toString(16);
                var buffer = [];
                for (var i = 0; i < argText.length; i++) {
                  buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                }
                argText = buffer.join('');
                while (argText.length < argSize * 2) argText = 'f' + argText;
              } else {
                argText = currAbsArg.toString(16);
              }
              if (next == 'X'.charCodeAt(0)) {
                prefix = prefix.toUpperCase();
                argText = argText.toUpperCase();
              }
            } else if (next == 'p'.charCodeAt(0)) {
              if (currAbsArg === 0) {
                argText = '(nil)';
              } else {
                prefix = '0x';
                argText = currAbsArg.toString(16);
              }
            }
            if (precisionSet) {
              while (argText.length < precision) {
                argText = '0' + argText;
              }
            }
  
            // Add sign if needed
            if (flagAlwaysSigned) {
              if (currArg < 0) {
                prefix = '-' + prefix;
              } else {
                prefix = '+' + prefix;
              }
            }
  
            // Add padding.
            while (prefix.length + argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad) {
                  argText = '0' + argText;
                } else {
                  prefix = ' ' + prefix;
                }
              }
            }
  
            // Insert the result into the buffer.
            argText = prefix + argText;
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (['f', 'F', 'e', 'E', 'g', 'G'].indexOf(String.fromCharCode(next)) != -1) {
            // Float.
            var currArg = getNextArg('double');
            var argText;
  
            if (isNaN(currArg)) {
              argText = 'nan';
              flagZeroPad = false;
            } else if (!isFinite(currArg)) {
              argText = (currArg < 0 ? '-' : '') + 'inf';
              flagZeroPad = false;
            } else {
              var isGeneral = false;
              var effectivePrecision = Math.min(precision, 20);
  
              // Convert g/G to f/F or e/E, as per:
              // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
              if (next == 'g'.charCodeAt(0) || next == 'G'.charCodeAt(0)) {
                isGeneral = true;
                precision = precision || 1;
                var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                if (precision > exponent && exponent >= -4) {
                  next = ((next == 'g'.charCodeAt(0)) ? 'f' : 'F').charCodeAt(0);
                  precision -= exponent + 1;
                } else {
                  next = ((next == 'g'.charCodeAt(0)) ? 'e' : 'E').charCodeAt(0);
                  precision--;
                }
                effectivePrecision = Math.min(precision, 20);
              }
  
              if (next == 'e'.charCodeAt(0) || next == 'E'.charCodeAt(0)) {
                argText = currArg.toExponential(effectivePrecision);
                // Make sure the exponent has at least 2 digits.
                if (/[eE][-+]\d$/.test(argText)) {
                  argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                }
              } else if (next == 'f'.charCodeAt(0) || next == 'F'.charCodeAt(0)) {
                argText = currArg.toFixed(effectivePrecision);
              }
  
              var parts = argText.split('e');
              if (isGeneral && !flagAlternative) {
                // Discard trailing zeros and periods.
                while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                       (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                  parts[0] = parts[0].slice(0, -1);
                }
              } else {
                // Make sure we have a period in alternative mode.
                if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                // Zero pad until required precision.
                while (precision > effectivePrecision++) parts[0] += '0';
              }
              argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
              // Capitalize 'E' if needed.
              if (next == 'E'.charCodeAt(0)) argText = argText.toUpperCase();
  
              // Add sign.
              if (flagAlwaysSigned && currArg >= 0) {
                argText = '+' + argText;
              }
            }
  
            // Add padding.
            while (argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                  argText = argText[0] + '0' + argText.slice(1);
                } else {
                  argText = (flagZeroPad ? '0' : ' ') + argText;
                }
              }
            }
  
            // Adjust case.
            if (next < 'a'.charCodeAt(0)) argText = argText.toUpperCase();
  
            // Insert the result into the buffer.
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (next == 's'.charCodeAt(0)) {
            // String.
            var arg = getNextArg('i8*') || 0; // 0 holds '(null)'
            var argLength = String_len(arg);
            if (precisionSet) argLength = Math.min(String_len(arg), precision);
            if (!flagLeftAlign) {
              while (argLength < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
            for (var i = 0; i < argLength; i++) {
              ret.push(HEAPU8[(arg++)]);
            }
            if (flagLeftAlign) {
              while (argLength < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
          } else if (next == 'c'.charCodeAt(0)) {
            // Character.
            if (flagLeftAlign) ret.push(getNextArg('i8'));
            while (--width > 0) {
              ret.push(' '.charCodeAt(0));
            }
            if (!flagLeftAlign) ret.push(getNextArg('i8'));
          } else if (next == 'n'.charCodeAt(0)) {
            // Write the length written so far to the next parameter.
            var ptr = getNextArg('i32*');
            HEAP32[((ptr)>>2)]=ret.length
          } else if (next == '%'.charCodeAt(0)) {
            // Literal percent sign.
            ret.push(curr);
          } else {
            // Unknown specifiers remain untouched.
            for (var i = startTextIndex; i < textIndex + 2; i++) {
              ret.push(HEAP8[(i)]);
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }

  
  function _memcpy(dest, src, num, align) {
      assert(num % 1 === 0, 'memcpy given ' + num + ' bytes to copy. Problem with quantum=1 corrections perhaps?');
      if (num >= 20 && src % 2 == dest % 2) {
        // This is unaligned, but quite large, and potentially alignable, so work hard to get to aligned settings
        if (src % 4 == dest % 4) {
          var stop = src + num;
          while (src % 4) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src4 = src >> 2, dest4 = dest >> 2, stop4 = stop >> 2;
          while (src4 < stop4) {
            HEAP32[dest4++] = HEAP32[src4++];
          }
          src = src4 << 2;
          dest = dest4 << 2;
          while (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        } else {
          var stop = src + num;
          if (src % 2) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src2 = src >> 1, dest2 = dest >> 1, stop2 = stop >> 1;
          while (src2 < stop2) {
            HEAP16[dest2++] = HEAP16[src2++];
          }
          src = src2 << 1;
          dest = dest2 << 1;
          if (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        }
      } else {
        while (num--) {
          HEAP8[dest++] = HEAP8[src++];
        }
      }
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  function ___assert_func(filename, line, func, condition) {
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [Pointer_stringify(filename), line, Pointer_stringify(func)];
    }

  
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead = 0;
        while (stream.ungotten.length && nbyte > 0) {
          HEAP8[(buf++)]=stream.ungotten.pop()
          nbyte--;
          bytesRead++;
        }
        var contents = stream.object.contents;
        var size = Math.min(contents.length - offset, nbyte);
        for (var i = 0; i < size; i++) {
          HEAP8[((buf)+(i))]=contents[offset + i]
          bytesRead++;
        }
        return bytesRead;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead;
        if (stream.object.isDevice) {
          if (stream.object.input) {
            bytesRead = 0;
            while (stream.ungotten.length && nbyte > 0) {
              HEAP8[(buf++)]=stream.ungotten.pop()
              nbyte--;
              bytesRead++;
            }
            for (var i = 0; i < nbyte; i++) {
              try {
                var result = stream.object.input();
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              HEAP8[((buf)+(i))]=result
            }
            return bytesRead;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var ungotSize = stream.ungotten.length;
          bytesRead = _pread(fildes, buf, nbyte, stream.position);
          if (bytesRead != -1) {
            stream.position += (stream.ungotten.length - ungotSize) + bytesRead;
          }
          return bytesRead;
        }
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) return 0;
      var bytesRead = _read(stream, ptr, bytesToRead);
      var streamObj = FS.streams[stream];
      if (bytesRead == -1) {
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        if (bytesRead < bytesToRead) streamObj.eof = true;
        return Math.floor(bytesRead / size);
      }
    }

  function _longjmp(env, value) {
      throw { longjmp: true, label: HEAP32[((env)>>2)], value: value || 1 };
    }
var _setjmp; // stub for _setjmp

  function ___gxx_personality_v0() {
    }
var __ZSt9terminatev; // stub for __ZSt9terminatev

  function _ferror(stream) {
      // int ferror(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ferror.html
      return Number(stream in FS.streams && FS.streams[stream].error);
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }
var __ZNSt9type_infoD2Ev; // stub for __ZNSt9type_infoD2Ev

  var _llvm_memset_p0i8_i64=_memset;
var _llvm_dbg_declare; // stub for _llvm_dbg_declare
var _llvm_expect_i32; // stub for _llvm_expect_i32

  function _abort() {
      ABORT = true;
      throw 'abort() at ' + (new Error().stack);
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }

  
  function ___errno_location() {
      return ___setErrNo.ret;
    }var ___errno=___errno_location;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
  
      // We need to make sure no one else allocates unfreeable memory!
      // We must control this entirely. So we don't even need to do
      // unfreeable allocations - the HEAP is ours, from STATICTOP up.
      // TODO: We could in theory slice off the top of the HEAP when
      //       sbrk gets a negative increment in |bytes|...
      var self = _sbrk;
      if (!self.called) {
        STATICTOP = alignMemoryPage(STATICTOP); // make sure we start out aligned
        self.called = true;
        _sbrk.DYNAMIC_START = STATICTOP;
      }
      var ret = STATICTOP;
      if (bytes != 0) Runtime.staticAlloc(bytes);
      return ret;  // Previous break location.
    }





  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false},pointerLock:false,moduleContextCreatedCallbacks:[],createContext:function (canvas, useWebGL, setInModule) {
        try {
          var ctx = canvas.getContext(useWebGL ? 'experimental-webgl' : '2d');
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
        }
        return ctx;
      },requestFullScreen:function () {
        var canvas = Module.canvas;
        function fullScreenChange() {
          if (Module['onFullScreen']) Module['onFullScreen']();
          if (document['webkitFullScreenElement'] === canvas ||
              document['mozFullScreenElement'] === canvas ||
              document['fullScreenElement'] === canvas) {
            canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                        canvas['mozRequestPointerLock'] ||
                                        canvas['webkitRequestPointerLock'];
            canvas.requestPointerLock();
          }
        }
  
        document.addEventListener('fullscreenchange', fullScreenChange, false);
        document.addEventListener('mozfullscreenchange', fullScreenChange, false);
        document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen(); 
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200) {
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, callback) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          callback(new Uint8Array(arrayBuffer));
          removeRunDependency();
        }, function(event) {
          throw 'Loading data file "' + url + '" failed.';
        });
        addRunDependency();
      }};
__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___setErrNo(0);
Module["requestFullScreen"] = function() { Browser.requestFullScreen() };
  

// === Auto-generated postamble setup entry stuff ===

Module.callMain = function callMain(args) {
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_STATIC) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_STATIC));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_STATIC);

  return _main(argc, argv, 0);
}

















var __ZN4jpgdL5g_ZAGE;
var __ZN4jpgdL13s_extend_testE;
var __ZN4jpgdL15s_extend_offsetE;









var __ZTVN4jpgd24jpeg_decoder_file_streamE;


var __ZTIN4jpgd19jpeg_decoder_streamE;

var __ZTIN4jpgd24jpeg_decoder_file_streamE;
var __ZTVN4jpgd19jpeg_decoder_streamE;








var __ZTISt9type_info;
var __ZTIN10__cxxabiv116__shim_type_infoE;

var __ZTIN10__cxxabiv117__class_type_infoE;
var __ZTVN10__cxxabiv117__class_type_infoE;
var __ZTVN10__cxxabiv120__si_class_type_infoE;

var __ZTIN10__cxxabiv120__si_class_type_infoE;
var __gm_;
var _mparams;
var __ZN4jpgd12jpeg_decoderC1EPNS_19jpeg_decoder_streamE;
var __ZN4jpgd12jpeg_decoderD1Ev;
var __ZN4jpgd24jpeg_decoder_file_streamC1Ev;
var __ZN4jpgd24jpeg_decoder_file_streamD1Ev;
var __ZN10__cxxabiv117__class_type_infoD1Ev;
var __ZN10__cxxabiv117__class_type_infoD2Ev;
var __ZN10__cxxabiv120__si_class_type_infoD1Ev;
var __ZN10__cxxabiv120__si_class_type_infoD2Ev;
STRING_TABLE.__str5=allocate([105,110,112,117,116,46,106,112,103,0] /* input.jpg\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str6=allocate([37,99,0] /* %c\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str114=allocate([106,112,103,100,46,99,112,112,0] /* jpgd.cpp\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd4idctEPKsPhi=allocate([118,111,105,100,32,106,112,103,100,58,58,105,100,99,116,40,99,111,110,115,116,32,106,112,103,100,95,98,108,111,99,107,95,116,32,42,44,32,117,105,110,116,56,32,42,44,32,105,110,116,41,0] /* void jpgd::idct(cons */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1115=allocate([98,108,111,99,107,95,109,97,120,95,122,97,103,32,62,61,32,49,0] /* block_max_zag _= 1\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2116=allocate([98,108,111,99,107,95,109,97,120,95,122,97,103,32,60,61,32,54,52,0] /* block_max_zag _= 64\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__ZN4jpgdL16s_idct_row_tableE=allocate([1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,1,1,0,0,0,0,0,2,2,1,0,0,0,0,0,3,2,1,0,0,0,0,0,4,2,1,0,0,0,0,0,4,3,1,0,0,0,0,0,4,3,2,0,0,0,0,0,4,3,2,1,0,0,0,0,4,3,2,1,1,0,0,0,4,3,2,2,1,0,0,0,4,3,3,2,1,0,0,0,4,4,3,2,1,0,0,0,5,4,3,2,1,0,0,0,6,4,3,2,1,0,0,0,6,5,3,2,1,0,0,0,6,5,4,2,1,0,0,0,6,5,4,3,1,0,0,0,6,5,4,3,2,0,0,0,6,5,4,3,2,1,0,0,6,5,4,3,2,1,1,0,6,5,4,3,2,2,1,0,6,5,4,3,3,2,1,0,6,5,4,4,3,2,1,0,6,5,5,4,3,2,1,0,6,6,5,4,3,2,1,0,7,6,5,4,3,2,1,0,8,6,5,4,3,2,1,0,8,7,5,4,3,2,1,0,8,7,6,4,3,2,1,0,8,7,6,5,3,2,1,0,8,7,6,5,4,2,1,0,8,7,6,5,4,3,1,0,8,7,6,5,4,3,2,0,8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,2,8,7,6,5,4,3,3,2,8,7,6,5,4,4,3,2,8,7,6,5,5,4,3,2,8,7,6,6,5,4,3,2,8,7,7,6,5,4,3,2,8,8,7,6,5,4,3,2,8,8,8,6,5,4,3,2,8,8,8,7,5,4,3,2,8,8,8,7,6,4,3,2,8,8,8,7,6,5,3,2,8,8,8,7,6,5,4,2,8,8,8,7,6,5,4,3,8,8,8,7,6,5,4,4,8,8,8,7,6,5,5,4,8,8,8,7,6,6,5,4,8,8,8,7,7,6,5,4,8,8,8,8,7,6,5,4,8,8,8,8,8,6,5,4,8,8,8,8,8,7,5,4,8,8,8,8,8,7,6,4,8,8,8,8,8,7,6,5,8,8,8,8,8,7,6,6,8,8,8,8,8,7,7,6,8,8,8,8,8,8,7,6,8,8,8,8,8,8,8,6,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8] /* \01\00\00\00\00\00\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.__ZN4jpgdL16s_idct_col_tableE=allocate([1,1,2,3,3,3,3,3,3,4,5,5,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8] /* \01\01\02\03\03\03\0 */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder13fix_in_bufferEv=allocate([118,111,105,100,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,102,105,120,95,105,110,95,98,117,102,102,101,114,40,41,0] /* void jpgd::jpeg_deco */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3117=allocate([40,109,95,98,105,116,115,95,108,101,102,116,32,38,32,55,41,32,61,61,32,48,0] /* (m_bits_left & 7) == */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder20transform_mcu_expandEi=allocate([118,111,105,100,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,116,114,97,110,115,102,111,114,109,95,109,99,117,95,101,120,112,97,110,100,40,105,110,116,41,0] /* void jpgd::jpeg_deco */, "i8", ALLOC_STATIC);
STRING_TABLE.__str4118=allocate([109,95,109,99,117,95,98,108,111,99,107,95,109,97,120,95,122,97,103,91,109,99,117,95,98,108,111,99,107,93,32,62,61,32,49,0] /* m_mcu_block_max_zag[ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str5119=allocate([109,95,109,99,117,95,98,108,111,99,107,95,109,97,120,95,122,97,103,91,109,99,117,95,98,108,111,99,107,93,32,60,61,32,54,52,0] /* m_mcu_block_max_zag[ */, "i8", ALLOC_STATIC);
STRING_TABLE.__ZN4jpgdL8s_max_rcE=allocate([17,18,34,50,50,51,52,52,52,68,84,84,84,84,85,86,86,86,86,86,102,118,118,118,118,118,118,119,120,120,120,120,120,120,120,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136] /* \11\12\22223444DTTTT */, "i8", ALLOC_STATIC);
STRING_TABLE.__str6120=allocate([102,97,108,115,101,0] /* false\00 */, "i8", ALLOC_STATIC);
__ZN4jpgdL5g_ZAGE=allocate([0, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 10, 0, 0, 0, 17, 0, 0, 0, 24, 0, 0, 0, 32, 0, 0, 0, 25, 0, 0, 0, 18, 0, 0, 0, 11, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 12, 0, 0, 0, 19, 0, 0, 0, 26, 0, 0, 0, 33, 0, 0, 0, 40, 0, 0, 0, 48, 0, 0, 0, 41, 0, 0, 0, 34, 0, 0, 0, 27, 0, 0, 0, 20, 0, 0, 0, 13, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 14, 0, 0, 0, 21, 0, 0, 0, 28, 0, 0, 0, 35, 0, 0, 0, 42, 0, 0, 0, 49, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 50, 0, 0, 0, 43, 0, 0, 0, 36, 0, 0, 0, 29, 0, 0, 0, 22, 0, 0, 0, 15, 0, 0, 0, 23, 0, 0, 0, 30, 0, 0, 0, 37, 0, 0, 0, 44, 0, 0, 0, 51, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 52, 0, 0, 0, 45, 0, 0, 0, 38, 0, 0, 0, 31, 0, 0, 0, 39, 0, 0, 0, 46, 0, 0, 0, 53, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 54, 0, 0, 0, 47, 0, 0, 0, 55, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
__ZN4jpgdL13s_extend_testE=allocate([0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 128, 0, 0, 0, 256, 0, 0, 0, 512, 0, 0, 0, 1024, 0, 0, 0, 2048, 0, 0, 0, 4096, 0, 0, 0, 8192, 0, 0, 0, 16384, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
__ZN4jpgdL15s_extend_offsetE=allocate([0, 0, 0, 0, -1, 0, 0, 0, -3, 0, 0, 0, -7, 0, 0, 0, -15, 0, 0, 0, -31, 0, 0, 0, -63, 0, 0, 0, -127, 0, 0, 0, -255, 0, 0, 0, -511, 0, 0, 0, -1023, 0, 0, 0, -2047, 0, 0, 0, -4095, 0, 0, 0, -8191, 0, 0, 0, -16383, 0, 0, 0, -32767, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder15decode_next_rowEv=allocate([118,111,105,100,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,100,101,99,111,100,101,95,110,101,120,116,95,114,111,119,40,41,0] /* void jpgd::jpeg_deco */, "i8", ALLOC_STATIC);
STRING_TABLE.__str7121=allocate([107,32,60,32,54,52,0] /* k _ 64\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str8122=allocate([107,116,32,60,61,32,54,51,0] /* kt _= 63\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str9123=allocate([112,91,103,95,90,65,71,91,107,93,93,32,61,61,32,48,0] /* p[g_ZAG[k]] == 0\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder15make_huff_tableEiPNS0_11huff_tablesE=allocate([118,111,105,100,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,109,97,107,101,95,104,117,102,102,95,116,97,98,108,101,40,105,110,116,44,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,104,117,102,102,95,116,97,98,108,101,115,32,42,41,0] /* void jpgd::jpeg_deco */, "i8", ALLOC_STATIC);
STRING_TABLE.__str10124=allocate([105,32,60,32,50,53,54,0] /* i _ 256\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str11125=allocate([101,120,116,114,97,95,98,105,116,115,32,60,61,32,48,120,55,70,70,70,0] /* extra_bits _= 0x7FFF */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder22decode_block_ac_refineEPS0_iii=allocate([115,116,97,116,105,99,32,118,111,105,100,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,100,101,99,111,100,101,95,98,108,111,99,107,95,97,99,95,114,101,102,105,110,101,40,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,32,42,44,32,105,110,116,44,32,105,110,116,44,32,105,110,116,41,0] /* static void jpgd::jp */, "i8", ALLOC_STATIC);
STRING_TABLE.__str12126=allocate([112,68,45,62,109,95,115,112,101,99,116,114,97,108,95,101,110,100,32,60,61,32,54,51,0] /* pD-_m_spectral_end _ */, "i8", ALLOC_STATIC);
__ZTVN4jpgd24jpeg_decoder_file_streamE=allocate([0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 14, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
STRING_TABLE.__str13127=allocate([114,98,0] /* rb\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__ZTSN4jpgd19jpeg_decoder_streamE=allocate([78,52,106,112,103,100,49,57,106,112,101,103,95,100,101,99,111,100,101,114,95,115,116,114,101,97,109,69,0] /* N4jpgd19jpeg_decoder */, "i8", ALLOC_STATIC);
__ZTIN4jpgd19jpeg_decoder_streamE=allocate(8, "*", ALLOC_STATIC);
STRING_TABLE.__ZTSN4jpgd24jpeg_decoder_file_streamE=allocate([78,52,106,112,103,100,50,52,106,112,101,103,95,100,101,99,111,100,101,114,95,102,105,108,101,95,115,116,114,101,97,109,69,0] /* N4jpgd24jpeg_decoder */, "i8", ALLOC_STATIC);
__ZTIN4jpgd24jpeg_decoder_file_streamE=allocate(12, "*", ALLOC_STATIC);
__ZTVN4jpgd19jpeg_decoder_streamE=allocate([0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 18, 0, 0, 0, 20, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii=allocate([106,112,103,100,95,98,108,111,99,107,95,116,32,42,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,99,111,101,102,102,95,98,117,102,95,103,101,116,112,40,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,99,111,101,102,102,95,98,117,102,32,42,44,32,105,110,116,44,32,105,110,116,41,0] /* jpgd_block_t _jpgd:: */, "i8", ALLOC_STATIC);
STRING_TABLE.__str14128=allocate([40,98,108,111,99,107,95,120,32,60,32,99,98,45,62,98,108,111,99,107,95,110,117,109,95,120,41,32,38,38,32,40,98,108,111,99,107,95,121,32,60,32,99,98,45,62,98,108,111,99,107,95,110,117,109,95,121,41,0] /* (block_x _ cb-_block */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesERi=allocate([105,110,116,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,104,117,102,102,95,100,101,99,111,100,101,40,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,104,117,102,102,95,116,97,98,108,101,115,32,42,44,32,105,110,116,32,38,41,0] /* int jpgd::jpeg_decod */, "i8", ALLOC_STATIC);
STRING_TABLE.__str15129=allocate([40,40,115,121,109,98,111,108,32,62,62,32,56,41,32,38,32,51,49,41,32,61,61,32,112,72,45,62,99,111,100,101,95,115,105,122,101,91,115,121,109,98,111,108,32,38,32,50,53,53,93,32,43,32,40,40,115,121,109,98,111,108,32,38,32,48,120,56,48,48,48,41,32,63,32,40,115,121,109,98,111,108,32,38,32,49,53,41,32,58,32,48,41,0] /* ((symbol __ 8) & 31) */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder19get_bits_no_markersEi=allocate([117,105,110,116,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,103,101,116,95,98,105,116,115,95,110,111,95,109,97,114,107,101,114,115,40,105,110,116,41,0] /* uint jpgd::jpeg_deco */, "i8", ALLOC_STATIC);
STRING_TABLE.__str16130=allocate([109,95,98,105,116,115,95,108,101,102,116,32,62,61,32,48,0] /* m_bits_left _= 0\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.___PRETTY_FUNCTION____ZN4jpgd12jpeg_decoder8get_bitsEi=allocate([117,105,110,116,32,106,112,103,100,58,58,106,112,101,103,95,100,101,99,111,100,101,114,58,58,103,101,116,95,98,105,116,115,40,105,110,116,41,0] /* uint jpgd::jpeg_deco */, "i8", ALLOC_STATIC);
STRING_TABLE.__ZTSN10__cxxabiv116__shim_type_infoE=allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv116__shi */, "i8", ALLOC_STATIC);
__ZTIN10__cxxabiv116__shim_type_infoE=allocate(12, "*", ALLOC_STATIC);
STRING_TABLE.__ZTSN10__cxxabiv117__class_type_infoE=allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv117__cla */, "i8", ALLOC_STATIC);
__ZTIN10__cxxabiv117__class_type_infoE=allocate(12, "*", ALLOC_STATIC);
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 24, 0, 0, 0, 26, 0, 0, 0, 28, 0, 0, 0, 30, 0, 0, 0, 32, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 36, 0, 0, 0, 26, 0, 0, 0, 38, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
STRING_TABLE.__ZTSN10__cxxabiv120__si_class_type_infoE=allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv120__si_ */, "i8", ALLOC_STATIC);
__ZTIN10__cxxabiv120__si_class_type_infoE=allocate(12, "*", ALLOC_STATIC);
__gm_=allocate(468, ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_mparams=allocate(24, "i32", ALLOC_STATIC);
HEAP32[(((__ZTVN4jpgd24jpeg_decoder_file_streamE)+(4))>>2)]=__ZTIN4jpgd24jpeg_decoder_file_streamE;
HEAP32[((__ZTIN4jpgd19jpeg_decoder_streamE)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[(((__ZTIN4jpgd19jpeg_decoder_streamE)+(4))>>2)]=((STRING_TABLE.__ZTSN4jpgd19jpeg_decoder_streamE)|0);
HEAP32[((__ZTIN4jpgd24jpeg_decoder_file_streamE)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[(((__ZTIN4jpgd24jpeg_decoder_file_streamE)+(4))>>2)]=((STRING_TABLE.__ZTSN4jpgd24jpeg_decoder_file_streamE)|0);
HEAP32[(((__ZTIN4jpgd24jpeg_decoder_file_streamE)+(8))>>2)]=__ZTIN4jpgd19jpeg_decoder_streamE;
HEAP32[(((__ZTVN4jpgd19jpeg_decoder_streamE)+(4))>>2)]=__ZTIN4jpgd19jpeg_decoder_streamE;
HEAP32[((__ZTIN10__cxxabiv116__shim_type_infoE)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[(((__ZTIN10__cxxabiv116__shim_type_infoE)+(4))>>2)]=((STRING_TABLE.__ZTSN10__cxxabiv116__shim_type_infoE)|0);
HEAP32[(((__ZTIN10__cxxabiv116__shim_type_infoE)+(8))>>2)]=__ZTISt9type_info;
HEAP32[((__ZTIN10__cxxabiv117__class_type_infoE)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[(((__ZTIN10__cxxabiv117__class_type_infoE)+(4))>>2)]=((STRING_TABLE.__ZTSN10__cxxabiv117__class_type_infoE)|0);
HEAP32[(((__ZTIN10__cxxabiv117__class_type_infoE)+(8))>>2)]=__ZTIN10__cxxabiv116__shim_type_infoE;
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(4))>>2)]=__ZTIN10__cxxabiv117__class_type_infoE;
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(4))>>2)]=__ZTIN10__cxxabiv120__si_class_type_infoE;
HEAP32[((__ZTIN10__cxxabiv120__si_class_type_infoE)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[(((__ZTIN10__cxxabiv120__si_class_type_infoE)+(4))>>2)]=((STRING_TABLE.__ZTSN10__cxxabiv120__si_class_type_infoE)|0);
HEAP32[(((__ZTIN10__cxxabiv120__si_class_type_infoE)+(8))>>2)]=__ZTIN10__cxxabiv117__class_type_infoE;
__ZN4jpgd12jpeg_decoderC1EPNS_19jpeg_decoder_streamE = 44;
__ZN4jpgd12jpeg_decoderD1Ev = 46;
__ZN4jpgd24jpeg_decoder_file_streamC1Ev = 48;
__ZN4jpgd24jpeg_decoder_file_streamD1Ev = 50;
__ZN10__cxxabiv117__class_type_infoD1Ev = 52;
__ZN10__cxxabiv117__class_type_infoD2Ev = 54;
__ZN10__cxxabiv120__si_class_type_infoD1Ev = 56;
__ZN10__cxxabiv120__si_class_type_infoD2Ev = 52;
FUNCTION_TABLE = [0,0,__ZN4jpgd12jpeg_decoder22decode_block_dc_refineEPS0_iii,0,__ZN4jpgd12jpeg_decoder21decode_block_dc_firstEPS0_iii,0,__ZN4jpgd12jpeg_decoder22decode_block_ac_refineEPS0_iii,0,__ZN4jpgd12jpeg_decoder21decode_block_ac_firstEPS0_iii,0,__ZN4jpgd24jpeg_decoder_file_streamD2Ev,0,__ZN4jpgd24jpeg_decoder_file_streamD0Ev,0,__ZN4jpgd24jpeg_decoder_file_stream4readEPhiPb,0,__ZN4jpgd19jpeg_decoder_streamD1Ev,0,__ZN4jpgd19jpeg_decoder_streamD0Ev,0,___cxa_pure_virtual,0,__ZN10__cxxabiv116__shim_type_infoD2Ev,0,__ZN10__cxxabiv117__class_type_infoD0Ev,0,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,0,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i,0,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi,0,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZN10__cxxabiv116__shim_type_infoD2Ev,0,__ZN10__cxxabiv120__si_class_type_infoD0Ev,0,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i,0,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi,0,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZN4jpgd12jpeg_decoderC2EPNS_19jpeg_decoder_streamE,0,__ZN4jpgd12jpeg_decoderD2Ev,0,__ZN4jpgd24jpeg_decoder_file_streamC2Ev,0,__ZN4jpgd24jpeg_decoder_file_streamD2Ev,0,__ZN10__cxxabiv116__shim_type_infoD2Ev,0,__ZN10__cxxabiv116__shim_type_infoD2Ev,0,__ZN10__cxxabiv116__shim_type_infoD2Ev,0]; Module["FUNCTION_TABLE"] = FUNCTION_TABLE;


function run(args) {
  args = args || Module['arguments'];

  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length > 0) {
      Module['preRun'].pop()();
      if (runDependencies > 0) {
        // preRun added a dependency, run will be called later
        return 0;
      }
    }
  }

  function doRun() {
    var ret = 0;
    if (Module['_main']) {
      preMain();
      ret = Module.callMain(args);
      if (!Module['noExitRuntime']) {
        exitRuntime();
      }
    }
    if (Module['postRun']) {
      if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
      while (Module['postRun'].length > 0) {
        Module['postRun'].pop()();
      }
    }
    return ret;
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
    return 0;
  } else {
    return doRun();
  }
}
Module['run'] = run;

// {{PRE_RUN_ADDITIONS}}

initRuntime();

if (Module['noInitialRun']) {
  addRunDependency();
}

if (runDependencies == 0) {
  var ret = run();
}

// {{POST_RUN_ADDITIONS}}





  // {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["__ZN4jpgd3RowILi0EE4idctEPiPKs","__ZN4jpgd3RowILi1EE4idctEPiPKs","__ZN4jpgd3RowILi2EE4idctEPiPKs","__ZN4jpgd3RowILi3EE4idctEPiPKs","__ZN4jpgd3RowILi4EE4idctEPiPKs","_main","__ZN4jpgd4idctEPKsPhi","__ZN4jpgd3RowILi5EE4idctEPiPKs","__ZN4jpgd3RowILi6EE4idctEPiPKs","__ZN4jpgd3RowILi7EE4idctEPiPKs","__ZN4jpgd3RowILi8EE4idctEPiPKs","__ZN4jpgd3ColILi1EE4idctEPhPKi","__ZN4jpgd3ColILi2EE4idctEPhPKi","__ZN4jpgd3ColILi3EE4idctEPhPKi","__ZN4jpgd3ColILi4EE4idctEPhPKi","__ZN4jpgd3ColILi5EE4idctEPhPKi","__ZN4jpgd3ColILi6EE4idctEPhPKi","__ZN4jpgd3ColILi7EE4idctEPhPKi","__ZN4jpgd3ColILi8EE4idctEPhPKi","__ZN4jpgd12jpeg_decoder10word_clearEPvtj","__ZN4jpgd8idct_4x4EPKsPh","__ZN4jpgd12jpeg_decoder15free_all_blocksEv","__ZN4jpgdL9jpgd_freeEPv","__ZN4jpgd12jpeg_decoder13stop_decodingENS_11jpgd_statusE","__ZN4jpgdL11jpgd_mallocEj","__ZN4jpgd12jpeg_decoder5allocEjb","__ZN4jpgd12jpeg_decoder14prep_in_bufferEv","__ZN4jpgd12jpeg_decoder8get_bitsEi","__ZN4jpgd12jpeg_decoder11next_markerEv","__ZN4jpgd12jpeg_decoder15read_dht_markerEv","__ZN4jpgd12jpeg_decoder15read_dqt_markerEv","__ZN4jpgd12jpeg_decoder15read_sof_markerEv","__ZN4jpgd12jpeg_decoder20skip_variable_markerEv","__ZN4jpgd12jpeg_decoder15read_dri_markerEv","__ZN4jpgd12jpeg_decoder15read_sos_markerEv","__ZN4jpgd12jpeg_decoder15process_markersEv","__ZN4jpgd12jpeg_decoder15create_look_upsEv","__ZN4jpgd12jpeg_decoder10stuff_charEh","__ZN4jpgd12jpeg_decoder4initEPNS_19jpeg_decoder_streamE","__ZN4jpgd12jpeg_decoder13fix_in_bufferEv","__ZN4jpgd12jpeg_decoder19get_bits_no_markersEi","__ZN4jpgd12jpeg_decoder13transform_mcuEi","__ZN4jpgd12jpeg_decoder17locate_soi_markerEv","__ZN4jpgd12jpeg_decoder17locate_sof_markerEv","__ZN4jpgd12jpeg_decoder17locate_sos_markerEv","__ZN4jpgd12jpeg_decoder20transform_mcu_expandEi","__ZN4jpgd12DCT_Upsample8Matrix44C1Ev","__ZN4jpgd12DCT_Upsample3P_QILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi1ELi1EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi1ELi2EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi2ELi2EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi3ELi2EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi3ELi3EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi3ELi4EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi4ELi4EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi5ELi4EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi5ELi5EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi5ELi6EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi6ELi6EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi7ELi6EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi7ELi7EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi7ELi8EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3P_QILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_Upsample3R_SILi8ELi8EE4calcERNS0_8Matrix44ES4_PKs","__ZN4jpgd12DCT_UpsampleplERKNS0_8Matrix44ES3_","__ZN4jpgd12DCT_Upsample8Matrix44mIERKS1_","__ZN4jpgd12DCT_Upsample8Matrix4413add_and_storeEPsRKS1_S4_","__ZN4jpgd12DCT_Upsample8Matrix4413sub_and_storeEPsRKS1_S4_","__ZN4jpgd12jpeg_decoder13load_next_rowEv","__ZN4jpgd12jpeg_decoder14coeff_buf_getpEPNS0_9coeff_bufEii","__ZN4jpgd12jpeg_decoder8get_charEv","__ZN4jpgd12jpeg_decoder15process_restartEv","__ZN4jpgdL13dequantize_acEii","__ZN4jpgd12jpeg_decoder5clampEi","__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesERi","__ZN4jpgd12jpeg_decoder11H1V1ConvertEv","__ZN4jpgd12jpeg_decoder15decode_next_rowEv","__ZN4jpgd12jpeg_decoder12gray_convertEv","__ZN4jpgd12jpeg_decoder11H2V1ConvertEv","__ZN4jpgd12jpeg_decoder11H1V2ConvertEv","__ZN4jpgd12jpeg_decoder11H2V2ConvertEv","__ZN4jpgd12jpeg_decoder16expanded_convertEv","__ZN4jpgd12jpeg_decoder8find_eoiEv","__ZN4jpgd12jpeg_decoder6decodeEPPKvPj","__ZN4jpgd12jpeg_decoder15make_huff_tableEiPNS0_11huff_tablesE","__ZN4jpgd12jpeg_decoder18check_quant_tablesEv","__ZN4jpgd12jpeg_decoder17check_huff_tablesEv","__ZN4jpgd12jpeg_decoder20calc_mcu_block_orderEv","__ZN4jpgd12jpeg_decoder9init_scanEv","__ZN4jpgd12jpeg_decoder14coeff_buf_openEiiii","__ZN4jpgd12jpeg_decoder21decode_block_dc_firstEPS0_iii","__ZN4jpgd12jpeg_decoder11huff_decodeEPNS0_11huff_tablesE","__ZN4jpgd12jpeg_decoder22decode_block_dc_refineEPS0_iii","__ZN4jpgd12jpeg_decoder10init_frameEv","__ZN4jpgd12jpeg_decoder11decode_scanEPFvPS0_iiiE","__ZN4jpgd12jpeg_decoder21decode_block_ac_firstEPS0_iii","__ZN4jpgd12jpeg_decoder22decode_block_ac_refineEPS0_iii","__ZN4jpgd19jpeg_decoder_streamD2Ev","__ZN4jpgd19jpeg_decoder_streamC2Ev","__ZN4jpgd12jpeg_decoder12decode_startEv","__ZN4jpgd12jpeg_decoder11decode_initEPNS_19jpeg_decoder_streamE","__ZN4jpgd12jpeg_decoderC2EPNS_19jpeg_decoder_streamE","__ZN4jpgd12jpeg_decoder14begin_decodingEv","__ZN4jpgd12jpeg_decoderD2Ev","__ZN4jpgd24jpeg_decoder_file_streamC2Ev","__ZN4jpgd24jpeg_decoder_file_stream5closeEv","__ZN4jpgd24jpeg_decoder_file_streamD0Ev","__ZN4jpgd24jpeg_decoder_file_stream4openEPKc","__ZN4jpgd24jpeg_decoder_file_stream4readEPhiPb","__ZN4jpgd12jpeg_decoder16init_progressiveEv","__ZN4jpgd12jpeg_decoder15init_sequentialEv","__ZN4jpgd24jpeg_decoder_file_streamD2Ev","__ZN4jpgd12DCT_Upsample8Matrix44C2Ev","__ZNK4jpgd12jpeg_decoder14get_error_codeEv","__ZNK4jpgd12jpeg_decoder9get_widthEv","__ZNK4jpgd12jpeg_decoder10get_heightEv","__ZNK4jpgd12jpeg_decoder18get_num_componentsEv","__ZN4jpgd12DCT_Upsample8Matrix442atEii","__ZNK4jpgd12DCT_Upsample8Matrix442atEii","__ZN4jpgd19jpeg_decoder_streamD1Ev","__ZN4jpgd19jpeg_decoder_streamD0Ev","__ZN4jpgd12jpeg_decoder9get_octetEv","__ZN4jpgd12jpeg_decoder8get_charEPb","__ZN10__cxxabiv116__shim_type_infoD2Ev","__ZN10__cxxabiv117__class_type_infoD0Ev","__ZN10__cxxabiv120__si_class_type_infoD0Ev","__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZN4jpgd33decompress_jpeg_image_from_streamEPNS_19jpeg_decoder_streamEPiS2_S2_i","__ZN4jpgd31decompress_jpeg_image_from_fileEPKcPiS2_S2_i","__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi","__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i","__ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi","__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","___dynamic_cast","__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi","__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvi","__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i","__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i","_malloc","_tmalloc_small","_tmalloc_large","_sys_alloc","_free","_sys_trim","_segment_holding","_release_unused_segments","_init_mparams","_init_top","_mmap_alloc","_init_bins","_prepend_alloc","__ZdlPv","_add_segment"]

